const sleep=t=>new Promise((a=>setTimeout(a,t))),randColor=()=>`hsl(\n    ${255*Math.random()},\n    ${50+50*Math.random()}%,\n    ${50+20*Math.random()}%\n  )`,randomLights=async t=>{for(const a of t){const t=a.querySelectorAll(".light circle");for(const a of t)a.style.fill=randColor(),await sleep(50)}},uniformLights=async t=>{const a=randColor();for(const o of t){const t=o.querySelectorAll(".light circle");for(const o of t)o.style.fill=a,await sleep(50)}},randomLetters=async t=>{for(const a of t){const t=a.querySelectorAll(".light circle"),o=randColor();for(const a of t)a.style.fill=o;await sleep(100)}},uniformLetters=async t=>{const a=`hsl(\n      ${255*Math.random()},\n      ${80+20*Math.random()}%,\n      ${60+20*Math.random()}%\n    )`;for(const o of t){const t=o.querySelectorAll(".light circle");for(const o of t)o.style.fill=a;await sleep(100)}},blink=async()=>{const t=Array.from(document.querySelectorAll(".light circle")),a=t.map((t=>t.style.fill));for(let o=1;o<=Math.round(2+3*Math.random());o++)Promise.all(t.map((async t=>{t.style.fill="black"}))),await sleep(100+400*Math.random()),Promise.all(t.map((async(t,o)=>{t.style.fill=a[o]}))),await sleep(100+400*Math.random())};window.addEventListener("load",(async()=>{const t=document.querySelectorAll(".letter");for(;;)switch(Math.floor(6*Math.random())+1){case 1:await randomLights(t);break;case 2:await uniformLights(t);break;case 3:await randomLetters(t);break;case 4:await uniformLetters(t);break;case 5:case 6:await blink()}}),!1);