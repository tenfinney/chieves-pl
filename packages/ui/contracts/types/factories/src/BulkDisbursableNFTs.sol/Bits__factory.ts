/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Bits,
  BitsInterface,
} from "../../../src/BulkDisbursableNFTs.sol/Bits";

const _abi = [
  {
    inputs: [],
    name: "ADDRESS_TYPE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COUNTER_MASK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COUNTER_WIDTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DISABLING_TYPE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EXPERIMENTAL_TYPE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GATING_TYPE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INTERNAL_BOUNDARY",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INTERNAL_MASK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INTERNAL_WIDTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MEMBERSHIP_TYPE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NO_MATCH_FLAGS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REACTION_TYPE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RECORDED_TIME_TYPE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RECORDING_TYPE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REPETITION_BOUNDARY",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REPETITION_MASK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REPETITION_WIDTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REQUIREMENT_BOUNDARY",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REQUIREMENT_MASK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REQUIREMENT_WIDTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REQUIRE_ALL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REQUIRE_NONE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REQUIRE_ONE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVIEW_TYPE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROLE_BOUNDARY",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROLE_MASK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROLE_WIDTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_3",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_4",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_5",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_6",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_7",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_8",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_9",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_A",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_B",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_BOUNDARY",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_C",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_D",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_MASK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_WIDTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TYPE_BOUNDARY",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TYPE_MASK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TYPE_WIDTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNIQUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNIQUENESS_BOUNDARY",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNIQUENESS_MASK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNIQUENESS_WIDTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USE_AFTER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USE_ONCE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USE_UNLIMITED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USE_UNTIL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VANILLA_TYPE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VOUCHED_TIME_TYPE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6113ad61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106102b35760003560e01c8063067ff866146102b85780630daec9e4146102d75780630f94cc50146102ed57806311bb8afd146102f557806313affe4f146102fd57806318ae2375146103055780631c45349c1461030d5780632a7ccf13146103155780632ed58d811461033557806330c9cf931461033d57806333d810881461034557806334628c1f1461034d57806335ab86291461035557806339054c231461035d5780633adbbbc1146103655780633b60bd011461036d5780633c176d9f146103755780633f79f1a41461037d57806344cca2df146103855780634ce7a2441461038d5780634f06c0fb14610395578063513e15d91461039d5780635157b563146103a557806351d29425146103ad57806355237661146103b55780635e2a3386146103bd578063666e6fd5146103c5578063669d5bfa146103cd5780636fa09a79146103d55780637e8ceec7146103dd578063814c2450146103e557806383e5b21a1461040557806384bb0fe61461040d578063891fbef0146103755780638b2ed3881461041557806392e4267b1461041d578063957dc9a0146104255780639c37625c1461042d5780639eb3f243146104355780639f31459a1461043d578063a8410bc114610445578063a9c906ae1461044d578063aae5270f14610455578063aaeec72d1461045d578063b8785f8a1461043d578063ba952df114610465578063baf42f931461046d578063c5a0d9b214610335578063d3e62b0914610475578063d70176501461047d578063d7fcc11314610485578063db58fe951461048d578063dbd406e814610495578063e5587f7a1461049d578063e8641092146104a5578063f28a726d146104ad578063f449d92f146104b5578063f73a7311146104bd578063f8418ef3146104c5575b600080fd5b6102c06104cd565b60405160ff90911681526020015b60405180910390f35b6102df6104e9565b6040519081526020016102ce565b6102df610501565b6102c0602081565b6102df61053a565b6102c0610551565b6102df61056c565b61032861032336600461103f565b61058f565b6040516102ce9190611193565b6102c0600381565b6102df61089f565b6102df6108c2565b6102df61096b565b6102df610982565b6102df61099a565b6102df6109d4565b6102c0600d81565b6102c0600881565b6102df6109f7565b6102c0610a06565b6102df610a22565b6102df610a51565b6102df610a69565b6102df610a8c565b6102df610abb565b6102df610aca565b6102df610af0565b6102df610b08565b6102df610b17565b6102df610b54565b6102df610b65565b6103f86103f33660046110e8565b610b7d565b6040516102ce91906111bb565b6102df610d8e565b6102df610db1565b6102c0600b81565b6102df610df2565b6102df610e03565b6102c0610e2b565b6102df610e5f565b6102c0600181565b6102df610e6c565b6102df610e79565b6102df610e86565b6102df610eae565b6102c0610eca565b6102df610edf565b6102df610f02565b6102df610f4e565b6102df610f5b565b6102df610f79565b6102df610f91565b6102c0610fa8565b6102df610fbc565b6102df610fdf565b6102df610ff1565b6102c061101b565b6102df611028565b60086104dc600d6101006112be565b6104e691906112f8565b81565b6104f6600d6101006112be565b60ff16610400901b81565b6008610510600d6101006112be565b61051a91906112f8565b60ff16600161052b60086002611211565b61053591906112e1565b901b81565b610547600d6101006112be565b60ff166010901b81565b60036008610562600d6101006112be565b6104dc91906112f8565b600861057b600d6101006112be565b61058591906112f8565b60ff166006901b81565b600080826040516020016105a3919061113c565b6040516020818303038152906040528051906020012090506040516020016105da906829bab832b93ab9b2b960b91b815260090190565b604051602081830303815290604052805190602001208114156106005750600192915050565b6040516526b4b73a32b960d11b60208201526026016040516020818303038152906040528051906020012081141561063b5750600292915050565b6040516521b0b9ba32b960d11b6020820152602601604051602081830303815290604052805190602001208114156106765750600392915050565b604051692a3930b739b332b932b960b11b6020820152602a01604051602081830303815290604052805190602001208114156106b55750600492915050565b6040516921b7b73334b3bab932b960b11b6020820152602a01604051602081830303815290604052805190602001208114156106f45750600592915050565b6040516926b0b4b73a30b4b732b960b11b6020820152602a01604051602081830303815290604052805190602001208114156107335750600692915050565b6040516621b932b0ba37b960c91b60208201526027016040516020818303038152906040528051906020012081141561076f5750600792915050565b604051662634b6b4ba32b960c91b6020820152602701604051602081830303815290604052805190602001208114156107ab5750600892915050565b60405165213ab93732b960d11b6020820152602601604051602081830303815290604052805190602001208114156107e65750600992915050565b604051682232b9ba3937bcb2b960b91b6020820152602901604051602081830303815290604052805190602001208114156108245750600a92915050565b604051654f7261636c6560d01b60208201526026016040516020818303038152906040528051906020012081141561085f5750600b92915050565b826040516020016108709190611158565b60408051601f198184030181529082905262461bcd60e51b8252610896916004016111bb565b60405180910390fd5b60086108ae600d6101006112be565b6108b891906112f8565b60ff166004901b81565b6001600881600380836108d8600d6101006112be565b6108e291906112f8565b6108ec91906112f8565b6108f691906112f8565b61090091906112f8565b61090a91906112f8565b61091491906112f8565b60ff166001610924816002611211565b61092e91906112e1565b901b6003806008610942600d6101006112be565b61094c91906112f8565b61095691906112f8565b61096091906112f8565b60ff166001901b1781565b610978600d6101006112be565b60ff166020901b81565b61098f600d6101006112be565b60ff16611000901b81565b60038060086109ac600d6101006112be565b6109b691906112f8565b6109c091906112f8565b6109ca91906112f8565b60ff166002901b81565b60086109e3600d6101006112be565b6109ed91906112f8565b60ff166005901b81565b60086109c0600d6101006112be565b6003806008610a18600d6101006112be565b61056291906112f8565b60036008610a33600d6101006112be565b610a3d91906112f8565b610a4791906112f8565b60ff166003901b81565b610a5e600d6101006112be565b60ff16610800901b81565b6008610a78600d6101006112be565b610a8291906112f8565b60ff16600a901b81565b60036008610a9d600d6101006112be565b610aa791906112f8565b610ab191906112f8565b60ff166001901b81565b6008610aa7600d6101006112be565b6003806008610adc600d6101006112be565b610ae691906112f8565b6108ae91906112f8565b610afd600d6101006112be565b60ff16610100901b81565b6008610a3d600d6101006112be565b6008600160038083610b2c600d6101006112be565b610b3691906112f8565b610b4091906112f8565b610b4a91906112f8565b61051091906112f8565b600360086109b6600d6101006112be565b6001610b7360206002611211565b6104e691906112e1565b606060ff8216610bac57505060408051808201909152600981526829bab832b93ab9b2b960b91b602082015290565b8160ff1660011415610bda57505060408051808201909152600681526526b4b73a32b960d11b602082015290565b8160ff1660021415610c0857505060408051808201909152600681526521b0b9ba32b960d11b602082015290565b8160ff1660031415610c3a57505060408051808201909152600a8152692a3930b739b332b932b960b11b602082015290565b8160ff1660041415610c6c57505060408051808201909152600a81526921b7b73334b3bab932b960b11b602082015290565b8160ff1660051415610c9e57505060408051808201909152600a81526926b0b4b73a30b4b732b960b11b602082015290565b8160ff1660061415610ccd57505060408051808201909152600781526621b932b0ba37b960c91b602082015290565b8160ff1660071415610cfc5750506040805180820190915260078152662634b6b4ba32b960c91b602082015290565b8160ff1660081415610d2a575050604080518082019091526006815265213ab93732b960d11b602082015290565b8160ff1660091415610d5b5750506040805180820190915260098152682232b9ba3937bcb2b960b91b602082015290565b8160ff16600a1415610d895750506040805180820190915260068152654f7261636c6560d01b602082015290565b919050565b6008610d9d600d6101006112be565b610da791906112f8565b60ff166008901b81565b6003806008610dc3600d6101006112be565b610dcd91906112f8565b610dd791906112f8565b610de191906112f8565b60ff16600161052b60036002611211565b60036008610dcd600d6101006112be565b6008610e12600d6101006112be565b610e1c91906112f8565b60ff1661053560086002611211565b600160088160038083610e41600d6101006112be565b610e4b91906112f8565b610e5591906112f8565b610a1891906112f8565b6108b8600d6101006112be565b6109ca600d6101006112be565b610da7600d6101006112be565b60016003806008610e9a600d6101006112be565b610ea491906112f8565b610a9d91906112f8565b6003806008610ec0600d6101006112be565b610a3391906112f8565b6008600160038083610e4b600d6101006112be565b6008610eee600d6101006112be565b610ef891906112f8565b60ff166007901b81565b60016003806008610f16600d6101006112be565b610f2091906112f8565b610f2a91906112f8565b610f3491906112f8565b610f3e91906112f8565b60ff16600161052b816002611211565b610ab1600d6101006112be565b610f68600d6101006112be565b60ff16600161052b600d6002611211565b610f86600d6101006112be565b60ff16610200901b81565b610f9e600d6101006112be565b60ff166040901b81565b60016003806008610e55600d6101006112be565b6008610fcb600d6101006112be565b610fd591906112f8565b60ff166009901b81565b6003806008610ea4600d6101006112be565b600160088160038083611007600d6101006112be565b61101191906112f8565b610f1691906112f8565b6104e6600d6101006112be565b611035600d6101006112be565b60ff166080901b81565b600060208284031215611050578081fd5b81356001600160401b0380821115611066578283fd5b818401915084601f830112611079578283fd5b81358181111561108b5761108b611361565b604051601f8201601f19908116603f011681019083821181831017156110b3576110b3611361565b816040528281528760208487010111156110cb578586fd5b826020860160208301379182016020019490945295945050505050565b6000602082840312156110f9578081fd5b813560ff81168114611109578182fd5b9392505050565b6000815180845261112881602086016020860161131b565b601f01601f19169290920160200192915050565b6000825161114e81846020870161131b565b9190910192915050565b7202ab735b737bbb7103937b632903a3cb8329d1606d1b81526000825161118681601385016020870161131b565b9190910160130192915050565b60208101600c83106111b557634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260006111096020830184611110565b600181815b808511156112095781600019048211156111ef576111ef61134b565b808516156111fc57918102915b93841c93908002906111d3565b509250929050565b600061110960ff84168360008261122a575060016112b8565b81611237575060006112b8565b816001811461124d576002811461125757611273565b60019150506112b8565b60ff8411156112685761126861134b565b50506001821b6112b8565b5060208310610133831016604e8410600b8410161715611296575081810a6112b8565b6112a083836111ce565b80600019048211156112b4576112b461134b565b0290505b92915050565b600061ffff838116908316818110156112d9576112d961134b565b039392505050565b6000828210156112f3576112f361134b565b500390565b600060ff821660ff8416808210156113125761131261134b565b90039392505050565b60005b8381101561133657818101518382015260200161131e565b83811115611345576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212206fd2252302567ad93cb3d5d3ae0a496c0c05169a65e2f1252015c790caf4470564736f6c63430008040033";

type BitsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BitsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bits__factory extends ContractFactory {
  constructor(...args: BitsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Bits> {
    return super.deploy(overrides || {}) as Promise<Bits>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Bits {
    return super.attach(address) as Bits;
  }
  override connect(signer: Signer): Bits__factory {
    return super.connect(signer) as Bits__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BitsInterface {
    return new utils.Interface(_abi) as BitsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bits {
    return new Contract(address, _abi, signerOrProvider) as Bits;
  }
}
