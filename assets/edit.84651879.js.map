{"version":3,"file":"edit.84651879.js","sources":["../../src/pages/edit.tsx"],"sourcesContent":["import { useWeb3 } from '@/lib/hooks'\nimport React, {\n  ReactNode, useEffect, useMemo, useState,\n} from 'react'\nimport { ERC1155Metadata, Maybe } from '@/lib/types'\nimport {\n  httpURL, regexify, deregexify,\n} from '@/lib/helpers'\nimport { HomeLink, OptionsForm } from '@/components'\nimport { Alert, AlertDescription, AlertIcon, AlertTitle, Box } from '@chakra-ui/react'\nimport { useParams } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nexport const Edit = () => {\n  const { nftId } = useParams()\n  const tokenId = useMemo(() => deregexify(nftId), [nftId])\n  const [metadata, setMetadata] = useState<Maybe<ERC1155Metadata>>()\n  const [error, setError] = useState<ReactNode>()\n  const { roContract } = useWeb3()\n\n  useEffect(() => {\n    const getMetadata = async () => {\n      if(roContract && tokenId) {\n        try {\n          const meta = await roContract.uri(tokenId)\n          if(!meta) {\n            setMetadata(null)\n          } else {\n            const response = await fetch(httpURL(meta)!)\n            setMetadata(await response.json())\n          }\n        } catch(err) {\n          setError((err as Error).message)\n        }\n      }\n    }\n\n    getMetadata()\n  }, [roContract, tokenId])\n\n  return (\n    <Box ml={16}>\n      <Helmet>\n        <title>Claim Token: Edit #{tokenId && regexify(tokenId)}</title>\n      </Helmet>\n      <HomeLink/>\n      {error && (\n        <Alert status=\"error\">\n          <AlertIcon/>\n          <AlertTitle>`setMetadata` Error</AlertTitle>\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      )}\n      <OptionsForm\n        purpose=\"update\"\n        {...{ tokenId, metadata }}\n      />\n    </Box>\n  )\n}\n\nexport default Edit"],"names":["Edit","nftId","useParams","tokenId","useMemo","deregexify","metadata","setMetadata","useState","error","setError","roContract","useWeb3","useEffect","getMetadata","meta","uri","response","fetch","httpURL","json","err","message","_jsx","Helmet","regexify","_jsxs"],"mappings":";;;;;;;;;;;AAYO,MAAMA,OAAO,MAAM;AAClB,QAAA;AAAA,IAAEC;AAAAA,MAAUC,UAAlB;AACMC,QAAAA,UAAUC,MAAAA,QAAAA,QAAQ,MAAMC,WAAWJ,KAAD,GAAS,CAACA,KAAD,CAA1B;AACvB,QAAM,CAACK,UAAUC,WAAX,IAA0BC,MAAhC,QAAA,SAAA;AACA,QAAM,CAACC,OAAOC,QAAR,IAAoBF,MAA1B,QAAA,SAAA;AACM,QAAA;AAAA,IAAEG;AAAAA,MAAeC,QAAvB;AAEAC,QAAAA,QAAAA,UAAU,MAAM;AACd,UAAMC,cAAc,YAAY;AAC9B,UAAGH,cAAcR,SAAS;AACpB,YAAA;AACF,gBAAMY,OAAO,MAAMJ,WAAWK,IAAIb,OAAf;AACnB,cAAG,CAACY,MAAM;AACRR,wBAAY,IAAD;AAAA,UAAA,OACN;AACL,kBAAMU,WAAW,MAAMC,MAAMC,QAAQJ,IAAD,CAAR;AAChB,wBAAA,MAAME,SAASG,KAAAA,CAAhB;AAAA,UACZ;AAAA,iBACKC;AACNX,mBAAUW,IAAcC,OAAhB;AAAA,QACT;AAAA,MACF;AAAA,IAAA;AAGQ;EAAA,GACV,CAACX,YAAYR,OAAb,CAlBM;AAoBT,8BACG,KAAD;AAAA,IAAK,IAAI;AAAA,IAAT,UAAA,CACEoB,oBAACC,cAAD;AAAA,MAAA,+BACE,SAAA;AAAA,QAAA,UAAA,CAAA,uBAA2BrB,WAAWsB,SAAStB,OAAD,CAA9C;AAAA,MAAA,CAAA;AAAA,IAAA,CAFJ,GAIGoB,oBAAA,UAAD,CAAA,CAAA,GACCd,SACCiB,qBAAC,OAAD;AAAA,MAAO,QAAO;AAAA,MAAd,UAAA,CACGH,oBAAA,WADH,CAAA,CAAA,uBAEG,YAAD;AAAA,QAAA,UAAA;AAAA,MAAA,CAFF,GAGEA,oBAAC,kBAAD;AAAA,QAAA,UAAmBd;AAAAA,MAAAA,CAHrB,CAAA;AAAA,IAAA,CANJ,GAYEc,oBAAC,aAAD;AAAA,MACE,SAAQ;AAAA,MACFpB;AAAAA,MAASG;AAAAA,IAAAA,CAdnB,CAAA;AAAA,EAAA,CADF;AAmBD;"}