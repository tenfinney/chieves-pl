{"version":3,"file":"view.46821ad3.js","sources":["../../src/pages/view.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  Alert, AlertDescription, AlertIcon, AlertTitle,\n  Image, chakra, Heading, Stack, Flex, Spinner, Text,\n} from '@chakra-ui/react'\nimport ReactMarkdown from 'react-markdown'\nimport { useParams } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport JSON5 from 'json5'\nimport {\n  regexify, deregexify, httpURL,\n} from '@/lib/helpers'\nimport type { ERC1155Metadata } from '@/lib/types'\nimport { HomeLink } from '@/components'\nimport { useWeb3 } from '@/lib/hooks'\n\nconst Markdown = chakra(ReactMarkdown)\n\nexport const View: React.FC<{ tokenId: string, header?: boolean }> = (\n  ({ tokenId, header = true }) => {\n    const [metadata, setMetadata] = useState<ERC1155Metadata>()\n    const [error, setError] = useState<string>()\n    const { roContract } = useWeb3()\n\n    useEffect(\n      () => {\n        const getMetadata = async () => {\n          if(roContract && tokenId) {\n            try {\n              let realId = BigInt(tokenId)\n              if(realId < 2**32) {\n                realId = await roContract.tokenByIndex(realId)\n              }\n\n              const metadataURI = await roContract.uri(realId)\n              const metadataURL = httpURL(metadataURI)\n              if(!metadataURL) {\n                throw new Error(\n                  `Could not find metadata for token #${regexify(tokenId)}.`\n                )\n              }\n              const response = await fetch(metadataURL)\n              const data = await response.text()\n              setMetadata(JSON5.parse(data))\n            } catch(err) {\n              setError((err as Error).message)\n            }\n          }\n        }\n\n        getMetadata()\n      },\n      [roContract, tokenId],\n    )\n\n    if(error) {\n      return (\n        <Alert status=\"error\">\n          <AlertIcon />\n          <AlertTitle mr={2}>Error: Loading Token</AlertTitle>\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      )\n    }\n\n    if(!metadata) {\n      return (\n        <Flex align=\"center\" justify=\"center\" h=\"100vh\">\n          <Spinner thickness=\"4px\" speed=\"1s\" mr={2}/>\n          <Text>Loading Metadata For Token #{regexify(tokenId)}</Text>\n        </Flex>\n      )\n    }\n\n    const {\n      name, image, animation_url: animation,\n      description, background_color: bg,\n    } = metadata\n\n    return (\n      <Stack align=\"center\" position=\"relative\" bg=\"gray.700\">\n        {header && (\n          <Helmet>\n            <title>Claim View #{regexify(tokenId)}</title>\n            <meta\n              name=\"description\"\n              content=\"SmartLaw Claims\"\n            />\n          </Helmet>\n        )}\n        <HomeLink/>\n        {name && <Heading>{name}</Heading>}\n        {image && (\n          <chakra.object\n            data={httpURL(image) ?? undefined}\n            title={name}\n            pointerEvents=\"none\"\n            maxW=\"80vmin\" maxH=\"80vmin\"\n            bg={`#${bg}`}\n            borderRadius={15}\n            p={2}\n          />\n        )}\n        {description && (\n          <Markdown\n            maxW=\"30rem\"\n            sx={{\n              a: { textDecoration: 'underline' },\n              p: {\n                textIndent: '1em',\n                my: 3,\n                textAlign: 'justify',\n              },\n            }}\n            linkTarget=\"_blank\"\n          >\n            {description}\n          </Markdown>\n        )}\n        {animation && (\n          (() => {\n            const url = httpURL(animation) ?? undefined\n            const props = { maxW: 96, maxH: 96 }\n\n            if(/(mpe?g|mp4)$/i.test(animation)) {\n              return (\n                <chakra.video\n                  {...props}\n                  controls autoPlay loop muted\n                >\n                  <chakra.source src={url}/>\n                </chakra.video>\n              )\n            } else if(/(glb|gltf)$/i.test(animation)) {\n              return (\n                <Text textAlign=\"center\">\n                  3D Support Coming Soon\n                </Text>\n              )\n            } else {\n              return (\n                <chakra.object\n                  data={url}\n                  title={name}\n                  pointerEvents=\"none\"\n                  bg={`#${bg}`}\n                  borderRadius={15}\n                  p={2}\n                  {...props}\n                />\n              )\n            }\n          })()\n        )}\n      </Stack>\n    )\n  }\n)\n\nexport const ViewPage = () => {\n  const { nftId } = useParams() \n  const tokenId = deregexify(\n    Array.isArray(nftId) ? nftId[0] : nftId\n  )\n\n  return <View {...{ tokenId }}/>\n}\n\nexport default ViewPage"],"names":["Markdown","chakra","ReactMarkdown","View","tokenId","header","metadata","setMetadata","useState","error","setError","roContract","useWeb3","useEffect","getMetadata","realId","BigInt","tokenByIndex","metadataURI","uri","metadataURL","httpURL","Error","regexify","response","fetch","data","text","JSON5","parse","err","message","_jsx","_jsxs","name","image","animation_url","animation","description","background_color","bg","Helmet","undefined","a","textDecoration","p","textIndent","my","textAlign","url","props","maxW","maxH","test","ViewPage","nftId","useParams","deregexify","Array","isArray"],"mappings":"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"}