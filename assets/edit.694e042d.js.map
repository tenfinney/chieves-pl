{"version":3,"file":"edit.694e042d.js","sources":["../../src/pages/edit.tsx"],"sourcesContent":["import React, {\n  ReactNode, useEffect, useMemo, useState,\n} from 'react'\nimport { Alert, AlertDescription, AlertIcon, AlertTitle, Box } from '@chakra-ui/react'\nimport { useParams } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport JSON5 from 'json5'\nimport { useWeb3 } from '@/lib/hooks'\nimport {\n  httpURL, regexify, deregexify, extractMessage,\n} from '@/lib/helpers'\nimport { HomeLink, OptionsForm } from '@/components'\nimport type { ERC1155Metadata, Maybe } from '@/lib/types'\n\nexport const Edit = () => {\n  const { nftId } = useParams()\n  const tokenId = useMemo(() => deregexify(nftId), [nftId])\n  const [metadata, setMetadata] = useState<Maybe<ERC1155Metadata>>()\n  const [metaURI, setMetaURI] = useState<Maybe<string>>()\n  const [error, setError] = useState<ReactNode>()\n  const { roContract } = useWeb3()\n\n  useEffect(() => {\n    const getMetadata = async () => {\n      if(roContract && tokenId) {\n        try {\n          const metaURI = await roContract.uri(tokenId)\n          const url = httpURL(metaURI)\n          if(!metaURI || metaURI === '') {\n            setMetadata(null)\n          } else {\n            const response = await fetch(url)\n            const body = await response.text()\n            try {\n              setMetaURI(metaURI)\n              setMetadata(JSON5.parse(body))\n            } catch(error) {\n              console.error({ url, tokenId, metaURI, error, body })\n            }\n          }\n        } catch(err) {\n          setError(extractMessage(err))\n        }\n      }\n    }\n\n    getMetadata()\n  }, [roContract, tokenId])\n\n  return (\n    <Box ml={16}>\n      <Helmet>\n        <title>Claim Token: Edit #{tokenId && regexify(tokenId)}</title>\n      </Helmet>\n      <HomeLink/>\n      {error && (\n        <Alert status=\"error\">\n          <AlertIcon/>\n          <AlertTitle>`setMetadata` Error</AlertTitle>\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      )}\n      <OptionsForm\n        purpose=\"update\"\n        {...{ tokenId, metadata, metaURI }}\n      />\n    </Box>\n  )\n}\n\nexport default Edit"],"names":["Edit","nftId","useParams","tokenId","useMemo","deregexify","metadata","setMetadata","useState","metaURI","setMetaURI","error","setError","roContract","useWeb3","useEffect","getMetadata","uri","url","httpURL","response","fetch","body","text","JSON5","parse","console","err","extractMessage","_jsx","Helmet","regexify","_jsxs"],"mappings":";;;;;;;;;AAcO,MAAMA,OAAO,MAAM;AAClB,QAAA;AAAA,IAAEC;AAAAA,MAAUC,UAAlB;AACMC,QAAAA,UAAUC,MAAAA,QAAAA,QAAQ,MAAMC,WAAWJ,KAAD,GAAS,CAACA,KAAD,CAA1B;AACvB,QAAM,CAACK,UAAUC,WAAX,IAA0BC,MAAhC,QAAA,SAAA;AACA,QAAM,CAACC,SAASC,UAAV,IAAwBF,MAA9B,QAAA,SAAA;AACA,QAAM,CAACG,OAAOC,QAAR,IAAoBJ,MAA1B,QAAA,SAAA;AACM,QAAA;AAAA,IAAEK;AAAAA,MAAeC,QAAvB;AAEAC,QAAAA,QAAAA,UAAU,MAAM;AACd,UAAMC,cAAc,YAAY;AAC9B,UAAGH,cAAcV,SAAS;AACpB,YAAA;AACF,gBAAMM,WAAU,MAAMI,WAAWI,IAAId,OAAf;AAChBe,gBAAAA,MAAMC,QAAQV,QAAD;AAChB,cAAA,CAACA,YAAWA,aAAY,IAAI;AAC7BF,wBAAY,IAAD;AAAA,UAAA,OACN;AACCa,kBAAAA,WAAW,MAAMC,MAAMH,GAAD;AACtBI,kBAAAA,OAAO,MAAMF,SAASG;AACxB,gBAAA;AACFb,yBAAWD,QAAD;AACEe,0BAAAA,IAAMC,MAAMH,IAAZ,CAAD;AAAA,qBACLX;AACNe,sBAAQf,MAAM;AAAA,gBAAEO;AAAAA,gBAAKf;AAAAA,gBAASM,SAAAA;AAAAA,gBAASE,OAAAA;AAAAA,gBAAOW;AAAAA,cAAAA,CAA9C;AAAA,YACD;AAAA,UACF;AAAA,iBACKK;AACGC,mBAAAA,eAAeD,GAAD,CAAf;AAAA,QACT;AAAA,MACF;AAAA,IAAA;AAGQ;EAAA,GACV,CAACd,YAAYV,OAAb,CAzBM;AA2BT,8BACG,KAAD;AAAA,IAAK,IAAI;AAAA,IAAT,UAAA,CACE0B,oBAACC,cAAD;AAAA,MAAA,+BACE,SAAA;AAAA,QAAA,UAAA,CAAA,uBAA2B3B,WAAW4B,SAAS5B,OAAD,CAA9C;AAAA,MAAA,CAAA;AAAA,IAAA,CAFJ,GAIG0B,oBAAA,UAAD,CAAA,CAAA,GACClB,SACCqB,qBAAC,OAAD;AAAA,MAAO,QAAO;AAAA,MAAd,UAAA,CACGH,oBAAA,WADH,CAAA,CAAA,uBAEG,YAAD;AAAA,QAAA,UAAA;AAAA,MAAA,CAFF,GAGEA,oBAAC,kBAAD;AAAA,QAAA,UAAmBlB;AAAAA,MAAAA,CAHrB,CAAA;AAAA,IAAA,CANJ,GAYEkB,oBAAC,aAAD;AAAA,MACE,SAAQ;AAAA,MACF1B;AAAAA,MAASG;AAAAA,MAAUG;AAAAA,IAAAA,CAd7B,CAAA;AAAA,EAAA,CADF;AAmBD;"}