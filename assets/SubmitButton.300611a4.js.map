{"version":3,"file":"SubmitButton.300611a4.js","sources":["../../src/components/SubmitButton.tsx"],"sourcesContent":["import { capitalize, switchTo } from '@/lib/helpers'\nimport { NETWORKS } from '@/lib/networks'\nimport {\n  Button, ButtonProps, Flex, Link, Spinner, Text,\n} from '@chakra-ui/react'\nimport React, { MouseEvent, useMemo, useState } from 'react'\nimport { useWeb3 } from '@/lib/hooks'\nimport { useConfig } from '@/config'\n\nexport const SubmitButton: React.FC<ButtonProps & {\n  purpose?: string\n  processing?: boolean\n  label?: string\n  requireStorage?: boolean\n}> = ({\n  purpose = 'create',\n  processing = false,\n  onClick,\n  requireStorage,\n  label = `${capitalize(purpose)} NFT`,\n  ...props\n}) => {\n  const {\n    chain, userProvider, connect, rwContract,\n  } = useWeb3()\n  const offChain = useMemo(\n    () => chain !== NETWORKS.contract.chainId,\n    [chain],\n  )\n  const [working, setWorking] = useState(processing)\n  const desiredNetwork = (\n    offChain ? NETWORKS.contract.name : null\n  )\n  const { Settings, storage } = useConfig({ requireStorage })\n\n  return <>\n    {(rwContract && requireStorage && !storage) && (\n      <Settings highlight={['nftStorageAPIToken']}/>\n    )}\n    <Button\n      type=\"submit\"\n      variant=\"solid\"\n      colorScheme={\n        (!rwContract || offChain) ? 'blue' : 'green'\n      }\n      isDisabled={\n        (offChain && !!rwContract) || processing || working\n      }\n      w=\"full\"\n      onClick={async (evt: MouseEvent<HTMLButtonElement>) => {\n        try {\n          setWorking(true)\n\n          if(!userProvider) {\n            evt.preventDefault()\n            connect()\n          } else if(offChain) {\n            evt.preventDefault()\n            switchTo(NETWORKS.contract.chainId)\n          } else {\n            onClick?.apply(null, [evt])\n          }\n        } finally {\n          setWorking(false)\n        }\n      }}\n      {...props}\n    >\n      {(() => {\n        if(processing || working) {\n          return (\n            <Flex>\n              <Spinner/>\n              <Text ml={2}>\n                {capitalize(purpose).replace(/e$/, '')}ingâ€¦\n              </Text>\n            </Flex>\n          )\n        } else if(!userProvider) {\n          return `Connect To ${capitalize(purpose)}`\n        } else if(offChain) {\n          return `Connect To The ${desiredNetwork} Network To ${capitalize(purpose)}`\n        } else if(!rwContract) {\n          return 'Contract Not Connected'\n        } else if(requireStorage && !storage) {\n          return <>\n            Missing\n            <Link mx={1} target=\"_blank\" href=\"//nft.storage\">\n              NFT.Storage\n            </Link>\n            Token\n          </>\n        } else {\n          return label\n        }\n      })()}\n    </Button>\n  </>\n}\n"],"names":["SubmitButton","purpose","processing","onClick","requireStorage","label","capitalize","props","chain","userProvider","connect","rwContract","useWeb3","offChain","useMemo","NETWORKS","contract","chainId","working","setWorking","useState","desiredNetwork","name","Settings","storage","useConfig","_Fragment","_jsx","evt","preventDefault","apply","replace"],"mappings":";;AASO,MAAMA,eAKR,CAAC;AAAA,EACJC,UAAU;AAAA,EACVC,aAAa;AAAA,EACbC;AAAAA,EACAC;AAAAA,EACAC,QAAS,GAAEC,WAAWL,OAAD;AAAA,KAClBM;AANC,MAOA;AACE,QAAA;AAAA,IACJC;AAAAA,IAAOC;AAAAA,IAAcC;AAAAA,IAASC;AAAAA,MAC5BC,QAFJ;AAGMC,QAAAA,WAAWC,sBACf,MAAMN,UAAUO,SAASC,SAASC,SAClC,CAACT,KAAD,CAFsB;AAIxB,QAAM,CAACU,SAASC,UAAV,IAAwBC,uBAASlB,UAAD;AACtC,QAAMmB,iBACJR,WAAWE,SAASC,SAASM,OAAO;AAEhC,QAAA;AAAA,IAAEC;AAAAA,IAAUC;AAAAA,MAAYC,UAAU;AAAA,IAAErB;AAAAA,EAAAA,CAAH;AAEvC,8BAAOsB,UAAA;AAAA,IAAA,UACHf,CAAAA,cAAcP,kBAAkB,CAACoB,+BAChC,UAAD;AAAA,MAAU,WAAW,CAAC,oBAAD;AAAA,IAAA,CAFlB,GAILG,oBAAC,QAAD;AAAA,MACE,MAAK;AAAA,MACL,SAAQ;AAAA,MACR,aACG,CAAChB,cAAcE,WAAY,SAAS;AAAA,MAEvC,YACGA,YAAY,CAAC,CAACF,cAAeT,cAAcgB;AAAAA,MAE9C,GAAE;AAAA,MACF,SAAS,OAAOU,QAAuC;AACjD,YAAA;AACFT,qBAAW,IAAD;AAEV,cAAG,CAACV,cAAc;AAChBmB,gBAAIC,eAAJ;AACO;qBACChB,UAAU;AAClBe,gBAAIC,eAAJ;AACSd,qBAAAA,SAASC,SAASC,OAAnB;AAAA,UAAA,OACH;AACLd,qBAAS2B,MAAM,MAAM,CAACF,GAAD,CAArB;AAAA,UACD;AAAA,QAAA,UACO;AACRT,qBAAW,KAAD;AAAA,QACX;AAAA,MACF;AAAA,MA1BH,GA2BMZ;AAAAA,MA3BN,WA6BI,MAAM;AACN,YAAGL,cAAcgB,SAAS;AACxB,sCACG,MAAD;AAAA,YAAA,UAAA,CACGS,oBAAA,SADH,CAAA,CAAA,wBAEG,MAAD;AAAA,cAAM,IAAI;AAAA,cAAV,UACGrB,CAAAA,WAAWL,OAAD,EAAU8B,QAAQ,MAAM,EAAlC,GADH,WAAA;AAAA,YAAA,CAFF,CAAA;AAAA,UAAA,CADF;AAAA,QAAA,WAQQ,CAACtB,cAAc;AACf,iBAAA,cAAaH,WAAWL,OAAD;AAAA,mBACvBY,UAAU;AACV,iBAAA,kBAAiBQ,6BAA6Bf,WAAWL,OAAD;AAAA,QAAA,WACxD,CAACU,YAAY;AACd,iBAAA;AAAA,QAAA,WACCP,kBAAkB,CAACoB,SAAS;AACpC,sCAAOE,UAAA;AAAA,YAAA,UAAA,CAAA,WAELC,oBAAC,MAAD;AAAA,cAAM,IAAI;AAAA,cAAG,QAAO;AAAA,cAAS,MAAK;AAAA,cAAlC,UAAA;AAAA,YAFK,CAAA,GAAA,OAAA;AAAA,UAAA,CAAP;AAAA,QAAA,OAOK;AACEtB,iBAAAA;AAAAA,QACR;AAAA,MAAA,GA1BF;AAAA,IAAA,CAjCE,CAAA;AAAA,EAAA,CAAP;AA+DD;"}