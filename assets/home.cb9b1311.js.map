{"version":3,"file":"home.cb9b1311.js","sources":["../../../../node_modules/@chakra-ui/avatar/dist/chakra-ui-avatar.esm.js","../../src/lib/types.ts","../../src/components/TokenFilterForm.tsx","../../src/components/How.tsx","../../src/components/Creators.tsx","../../src/components/MenuHeader.tsx","../../src/components/Who.tsx","../../src/components/Team.tsx","../../src/components/BuiltWith.tsx","../../src/pages/home.tsx"],"sourcesContent":["import { useImage } from '@chakra-ui/image';\nimport { forwardRef, useStyles, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider } from '@chakra-ui/system';\nimport { cx, __DEV__, filterUndefined } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { getValidChildren } from '@chakra-ui/react-utils';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar _excluded$1 = [\"name\", \"getInitials\"],\n    _excluded2 = [\"src\", \"srcSet\", \"name\", \"showBorder\", \"borderRadius\", \"onError\", \"getInitials\", \"icon\", \"iconLabel\", \"loading\", \"children\", \"borderColor\", \"ignoreFallback\"];\n\n/**\n * AvatarBadge used to show extra badge to the top-right\n * or bottom-right corner of an avatar.\n */\nvar AvatarBadge = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n\n  var badgeStyles = _extends({\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    insetEnd: \"0\",\n    bottom: \"0\"\n  }, styles.badge);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-avatar__badge\", props.className),\n    __css: badgeStyles\n  }));\n});\n\nif (__DEV__) {\n  AvatarBadge.displayName = \"AvatarBadge\";\n}\n\nfunction initials(name) {\n  var _name$split = name.split(\" \"),\n      firstName = _name$split[0],\n      lastName = _name$split[1];\n\n  return firstName && lastName ? \"\" + firstName.charAt(0) + lastName.charAt(0) : firstName.charAt(0);\n}\n\n/**\n * The avatar name container\n */\nvar AvatarName = function AvatarName(props) {\n  var name = props.name,\n      getInitials = props.getInitials,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$1);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    role: \"img\",\n    \"aria-label\": name\n  }, rest, {\n    __css: styles.label\n  }), name ? getInitials == null ? void 0 : getInitials(name) : null);\n};\n/**\n * Fallback avatar react component.\n * This should be a generic svg used to represent an avatar\n */\n\n\nvar DefaultIcon = function DefaultIcon(props) {\n  return /*#__PURE__*/React.createElement(chakra.svg, _extends({\n    viewBox: \"0 0 128 128\",\n    color: \"#fff\",\n    width: \"100%\",\n    height: \"100%\",\n    className: \"chakra-avatar__svg\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n  }));\n};\n\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\n\n/**\n * Avatar component that renders an user avatar with\n * support for fallback avatar and name-only avatars\n */\nvar Avatar = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Avatar\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      src = _omitThemingProps.src,\n      srcSet = _omitThemingProps.srcSet,\n      name = _omitThemingProps.name,\n      showBorder = _omitThemingProps.showBorder,\n      _omitThemingProps$bor = _omitThemingProps.borderRadius,\n      borderRadius = _omitThemingProps$bor === void 0 ? \"full\" : _omitThemingProps$bor,\n      onError = _omitThemingProps.onError,\n      _omitThemingProps$get = _omitThemingProps.getInitials,\n      getInitials = _omitThemingProps$get === void 0 ? initials : _omitThemingProps$get,\n      _omitThemingProps$ico = _omitThemingProps.icon,\n      icon = _omitThemingProps$ico === void 0 ? /*#__PURE__*/React.createElement(DefaultIcon, null) : _omitThemingProps$ico,\n      _omitThemingProps$ico2 = _omitThemingProps.iconLabel,\n      iconLabel = _omitThemingProps$ico2 === void 0 ? \" avatar\" : _omitThemingProps$ico2,\n      loading = _omitThemingProps.loading,\n      children = _omitThemingProps.children,\n      borderColor = _omitThemingProps.borderColor,\n      ignoreFallback = _omitThemingProps.ignoreFallback,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  var avatarStyles = _extends({\n    borderRadius: borderRadius,\n    borderWidth: showBorder ? \"2px\" : undefined\n  }, baseStyle, styles.container);\n\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref\n  }, rest, {\n    className: cx(\"chakra-avatar\", props.className),\n    __css: avatarStyles\n  }), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(AvatarImage, {\n    src: src,\n    srcSet: srcSet,\n    loading: loading,\n    onError: onError,\n    getInitials: getInitials,\n    name: name,\n    borderRadius: borderRadius,\n    icon: icon,\n    iconLabel: iconLabel,\n    ignoreFallback: ignoreFallback\n  }), children));\n});\n\nif (__DEV__) {\n  Avatar.displayName = \"Avatar\";\n}\n\nvar AvatarImage = function AvatarImage(props) {\n  var src = props.src,\n      srcSet = props.srcSet,\n      onError = props.onError,\n      getInitials = props.getInitials,\n      name = props.name,\n      borderRadius = props.borderRadius,\n      loading = props.loading,\n      iconLabel = props.iconLabel,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? /*#__PURE__*/React.createElement(DefaultIcon, null) : _props$icon,\n      ignoreFallback = props.ignoreFallback;\n  /**\n   * use the image hook to only show the image when it has loaded\n   */\n\n  var status = useImage({\n    src: src,\n    onError: onError,\n    ignoreFallback: ignoreFallback\n  });\n  var hasLoaded = status === \"loaded\";\n  /**\n   * Fallback avatar applies under 2 conditions:\n   * - If `src` was passed and the image has not loaded or failed to load\n   * - If `src` wasn't passed\n   *\n   * In this case, we'll show either the name avatar or default avatar\n   */\n\n  var showFallback = !src || !hasLoaded;\n\n  if (showFallback) {\n    return name ? /*#__PURE__*/React.createElement(AvatarName, {\n      className: \"chakra-avatar__initials\",\n      getInitials: getInitials,\n      name: name\n    }) : /*#__PURE__*/React.cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  /**\n   * If `src` was passed and the image has loaded, we'll show it\n   */\n\n\n  return /*#__PURE__*/React.createElement(chakra.img, {\n    src: src,\n    srcSet: srcSet,\n    alt: name,\n    className: \"chakra-avatar__img\",\n    loading: loading,\n    __css: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      borderRadius: borderRadius\n    }\n  });\n};\n\nif (__DEV__) {\n  AvatarImage.displayName = \"AvatarImage\";\n}\n\nvar _excluded = [\"children\", \"borderColor\", \"max\", \"spacing\", \"borderRadius\"];\n\n/**\n * AvatarGroup displays a number of avatars grouped together in a stack.\n */\nvar AvatarGroup = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Avatar\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      children = _omitThemingProps.children,\n      borderColor = _omitThemingProps.borderColor,\n      max = _omitThemingProps.max,\n      _omitThemingProps$spa = _omitThemingProps.spacing,\n      spacing = _omitThemingProps$spa === void 0 ? \"-0.75rem\" : _omitThemingProps$spa,\n      _omitThemingProps$bor = _omitThemingProps.borderRadius,\n      borderRadius = _omitThemingProps$bor === void 0 ? \"full\" : _omitThemingProps$bor,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var validChildren = getValidChildren(children);\n  /**\n   * get the avatars within the max\n   */\n\n  var childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\n  /**\n   * get the remaining avatar count\n   */\n\n  var excess = max != null && validChildren.length - max;\n  /**\n   * Reversing the children is a great way to avoid using zIndex\n   * to overlap the avatars\n   */\n\n  var reversedChildren = childrenWithinMax.reverse();\n  var clones = reversedChildren.map(function (child, index) {\n    var _child$props$borderCo;\n\n    var isFirstAvatar = index === 0;\n    var childProps = {\n      marginEnd: isFirstAvatar ? 0 : spacing,\n      size: props.size,\n      borderColor: (_child$props$borderCo = child.props.borderColor) != null ? _child$props$borderCo : borderColor,\n      showBorder: true\n    };\n    return /*#__PURE__*/React.cloneElement(child, filterUndefined(childProps));\n  });\n  var groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\"\n  };\n\n  var excessStyles = _extends({\n    borderRadius: borderRadius,\n    marginStart: spacing\n  }, baseStyle, styles.excessLabel);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    role: \"group\",\n    __css: groupStyles\n  }, rest, {\n    className: cx(\"chakra-avatar__group\", props.className)\n  }), excess > 0 && /*#__PURE__*/React.createElement(chakra.span, {\n    className: \"chakra-avatar__excess\",\n    __css: excessStyles\n  }, \"+\" + excess), clones);\n});\n\nif (__DEV__) {\n  AvatarGroup.displayName = \"AvatarGroup\";\n}\n\nexport { Avatar, AvatarBadge, AvatarGroup, baseStyle };\n","import { ExternalProvider } from '@ethersproject/providers'\n\nexport type Maybe<T> = T | null\nexport type Values<T> = T[keyof T]\nexport type Optional<T> = T | undefined\n\n// declare global {\n//   interface Window {\n//     ethereum: ExternalProvider\n//   }\n// }\n\nexport type NetworkInfo = {\n  [chainName: string]: {\n    chainId: number;\n    name: string;\n    label: string;\n    symbol: string;\n    explorer: Maybe<string>;\n    rpc: string;\n  }\n}\n\nexport type OpenSeaAttribute = {\n  trait_type?: string\n  value?: string | number\n  display_type?: string\n}\n\nexport type Attribute = {\n  name?: string\n  value?: string | number\n  type?: string\n}\n\nexport type ERC1155Metadata = {\n  name?: string\n  description?: string\n  decimals?: number\n  attributes?: Array<Attribute>\n  properties?: { wearables?: Record<string, string> }\n  external_url?: string\n  image?: string\n  animation_url?: string\n  background_color?: string\n\n} & {\n  [key: string]: string | number\n}\n\nexport type CodedError = Error & { code: number }\n\nexport type TokenState = {\n  id?: string\n  hidable?: boolean\n  is?: Record<string, unknown>\n  gates?: Maybe<number>\n  index?: number\n  uri?: string\n  metadata?: ERC1155Metadata\n  total?: number\n  max?: number\n  error?: string\n}\n\nexport type MetaMaskError = Error & {\n  data: {\n    code: number\n    data: string\n    message: string\n  }\n}\n\nexport type NestedError = {\n  error: Error\n}\n\nexport type NamedString = {\n  name: string\n  content: string\n}\n\nexport type Fileish = (\n  File | string | NamedString\n)\n\nexport type FileListish = (\n  Fileish | Array<File | string>\n)\n\nexport type FormValues = {\n  name?: string\n  description?: string\n  homepage?: string\n  images?: FileListish\n  color?: string\n  animation?: Fileish\n  attributes?: Array<Attribute>\n  uri?: string\n  json5?: string\n  maximum?: number\n}\n\nexport type Limits = {\n  high?: number\n  low?: number\n}\n\nexport type SpanList = Array<number | Limits>\n\nexport class HiddenError extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = 'HiddenError'\n  }\n}\n","import { toSpanList } from '@/lib/helpers'\nimport { Limits } from '@/lib/types'\nimport {\n  chakra, Button, Checkbox, Flex, FormControl,\n  FormLabel, Input, Stack, type FlexProps, Text,\n} from '@chakra-ui/react'\nimport React, { SetStateAction, useEffect, useState } from 'react'\nimport { Controller, useForm } from 'react-hook-form'\nimport { Header } from '@/components'\n\nexport type FilterValues = {\n  limit: number\n  offset: number\n  visible: string\n  gatingVisible: boolean\n}\n\nexport const TokenFilterForm: React.FC<{\n  limit: number\n  setLimit: (limit: SetStateAction<number>) => void\n  offset: number\n  setOffset: (offset: SetStateAction<number>) => void\n  gatingVisible: boolean\n  setGatingVisible: (gatingVisible: SetStateAction<boolean>) => void\n  setVisibleList: (visible: SetStateAction<Array<number | Limits>>) => (\n    void\n  )\n  visibleList: Array<number | Limits> \n} & FlexProps> = ({\n  limit = 100, setLimit, offset = 0, setOffset,\n  gatingVisible = false, setGatingVisible,\n  visibleList, setVisibleList, ...props\n}) => {\n  const {\n    register, handleSubmit, control, setValue,\n  } = useForm<FilterValues>()\n\n  useEffect(() => {\n    setValue('limit', limit)\n    setValue('offset', offset)\n    setValue('visible', visibleList.toString())\n    setValue('gatingVisible', gatingVisible)\n  }, [limit, offset, visibleList, gatingVisible, setValue])\n\n  const submit = async (data: FilterValues) => {\n    setLimit(Number(data.limit))\n    setOffset(Number(data.offset))\n    setGatingVisible(data.gatingVisible)\n    setVisibleList(toSpanList(data.visible))\n  }\n\n  return (\n    <Stack mb=\"100px\" align=\"center\" id=\"querytokens\" bg=\"black\" >\n\n    <Flex\n      as=\"form\" onSubmit={handleSubmit(submit)}\n      mt={10} mb=\"1rem\" maxW={['100%', 'min(85vw, 100em)']}\n      direction={['column', 'row']}\n      sx={{ a: { textDecoration: 'underline' } }}\n      {...props}\n    >\n    <Header/>\n\n      <Text fontSize=\"18pt\" mt=\"1rem\" fontWeight=\"bold\">\n        ERC-1155 Standard Token Minting\n      </Text>\n      <Text ml=\"20px\" fontSize=\"12pt\" fontWeight=\"regular\">\n      Each token reservation mints one master token and up to eight role tokens. Superuser, Minter, Caster, Transferer, Configurer,Limiter, Burner, or Destroyer. Use comma, space or dash separated list for Visible List Option.\n      </Text>\n      <Stack ml={3}>\n        <FormControl>\n          <Flex align=\"center\" my={1}>\n      <Stack\n        flexGrow={1}\n        sx={{\n          '&>*:not(style)~*:not(style)': { mt: 0.5 },\n          label: {\n            _after: { content: '\".\"' },\n            mt: 1.5,\n            mr: 1,\n            mb: 4,\n            fontSize: '110%',\n          },\n        }}\n      >\n        <FormControl>\n            <Controller\n              control={control}\n              name=\"gatingVisible\"\n              defaultValue={gatingVisible}\n              render={({ field: { onChange, value, ref } }) => (\n                <Checkbox\n                  onChange={onChange}\n                  ref={ref}\n                  isChecked={value}\n                >\n                  View Permission<chakra.br/>Tokens<chakra.br/>\n                </Checkbox>\n              )}\n            />\n          <Flex align=\"center\">\n            <FormLabel>Limit</FormLabel>\n            <Input\n              type=\"number\"\n              placeholder=\"Number of tokens to display.\"\n              {...register('limit')}\n            />\n          </Flex>\n        </FormControl>\n        <FormControl>\n          <Flex align=\"center\">\n            <FormLabel>Offset</FormLabel>\n            <Input\n              type=\"number\"\n              placeholder=\"Number of tokens offset from Token 1.\"\n              {...register('offset')}\n            />\n          </Flex>\n        </FormControl>\n        <Text textAlign=\"center\">or</Text>\n        <FormControl>\n          <Flex mb=\"20px\" align=\"center\">\n            <FormLabel>Visible&#xA0;List</FormLabel>\n            <Input\n              placeholder=\"Comma, space and dash separated list of indices.\"\n              {...register('visible')}\n            />\n          </Flex>\n        </FormControl>\n      </Stack>\n          </Flex>\n        </FormControl>\n\n        <Button type=\"submit\" colorScheme=\"green\">\n          View\n        </Button>\n      </Stack>\n    </Flex>\n      </Stack>\n\n  )\n}\n\nexport default TokenFilterForm\n","import {\n  Box,\n  Flex,\n  HStack,\n  FlexProps,\n  Tooltip,\n  Heading,\n  Image,\n  Text,\n  useBreakpointValue,\n} from \"@chakra-ui/react\";\nimport { LinkedSVG } from \"@/components\";\n\nimport {\n  AddIcon,\n  CloseIcon,\n  SettingsIcon,\n  StarIcon,\n  CheckCircleIcon,\n  ExternalLinkIcon,\n} from \"@chakra-ui/icons\";\n\nimport { Link } from \"react-scroll\";\n\nimport React from \"react\";\n\nexport const How: React.FC = () => {\n  const isSmallScreen = useBreakpointValue({ base: true, lg: false });\n\n  return (\n    <HStack\n      w=\"full\"\n      align=\"center\"\n      justify=\"center\"\n      minH={{ base: \"50vh\", md: \"70vh\" }}\n      bg=\"black\"\n      bgPosition=\"center\"\n      bgAttachment=\"fixed\"\n      bgSize=\"cover\"\n      position=\"relative\"\n      id=\"how\"\n    >\n      <Box\n        position=\"absolute\"\n        borderRadius=\"full\"\n        right=\"-300px\"\n        top=\"-300px\"\n        height=\"600px\"\n        filter=\"blur(484px)\"\n        width=\"600px\"\n        background=\"#03a5fc\"\n        zIndex={-3}\n      />\n      <Flex\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        lineHeight={{ base: \"lg\", \"2xl\": \"2xl\" }}\n        pl={0}\n        marginInlineStart=\"0 !important\"\n        zIndex={100}\n        fontWeight=\"normal\"\n        color=\"white\"\n      >\n        <Flex\n          align=\"center\"\n          mb={{ base: 0, md: 8 }}\n          flexDirection={{ base: \"column\", md: \"row\" }}\n        >\n          {!isSmallScreen && (\n            <Image src=\"/Landing/Circles3.png\" alt=\"circles3\" mr={10} />\n          )}\n        </Flex>\n        <Flex align=\"center\" mb={10}>\n          <Flex\n            flexDir=\"column\"\n            fontSize={{ base: \"md\", md: \"3xl\" }}\n            mb=\"150px\"\n            ml={{ base: 0, md: 20 }}\n            px={{ base: 12, md: 0 }}\n          >\n            <Heading\n              color=\"main\"\n              fontSize={{ base: 36, md: 60 }}\n              pb={10}\n              fontWeight=\"normal\"\n              display=\"flex\"\n              flexDir=\"column\"\n              textAlign={{ base: \"center\", md: \"initial\" }}\n            >\n              What types of tokens are minted here? <Text color=\"white\"></Text>\n            </Heading>\n            <Text>\n              Access, Achievements, Content, Identity, Claim ... any type of\n              token really.\n            </Text>\n\n            <Flex alignSelf={{ base: \"center\", md: \"auto\" }}>\n              <Image\n                src=\"/Landing/NFTs/NFT2w.png\"\n                alt=\"NFT2\"\n                title=\"NFT2\"\n                height=\"20rem\"\n              />\n              {!isSmallScreen && (\n                <Image\n                  src=\"/Landing/NFTs/NFT3w.png\"\n                  alt=\"NFT3\"\n                  title=\"NFT3\"\n                  height=\"20rem\"\n                />\n              )}\n              {!isSmallScreen && (\n                <Image\n                  src=\"/Landing/NFTs/NFT1w.png\"\n                  alt=\"NFT1\"\n                  title=\"NFT1\"\n                  height=\"20rem\"\n                />\n              )}\n            </Flex>\n            <Text>\n              <StarIcon color=\"cyan\" /> Mint and distribute tokens freely for a\n              <span style={{ color: \"#03a5fc\" }}> decentralized </span>\n              user experience!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      <Link to=\"back-to-top\" spy={true} smooth={true} duration={800}>\n        <Image\n          src=\"/Landing/Up.svg\"\n          alt=\"up\"\n          mr={10}\n          pos=\"absolute\"\n          right={{ base: 4, md: 50 }}\n          bottom={{ base: 5, md: 20 }}\n          cursor=\"pointer\"\n        />\n      </Link>\n    </HStack>\n  );\n};\n\nexport default How;\n","import {\n  Box,\n  Flex,\n  Grid,\n  Heading,\n  HStack,\n  Image,\n  Text,\n  useBreakpointValue,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-scroll\";\n\nimport {\n  AddIcon,\n  CloseIcon,\n  SettingsIcon,\n  StarIcon,\n  CheckCircleIcon,\n  ExternalLinkIcon,\n} from \"@chakra-ui/icons\";\n\nimport React from \"react\";\n\nexport const Creators: React.FC = () => {\n  const isSmallScreen = useBreakpointValue({ base: true, lg: false });\n\n  return (\n    <VStack\n    bg=\"black\"\n      w=\"full\"\n      align=\"center\"\n      justify=\"center\"\n      minH=\"100vh\"\n      pos=\"relative\"\n      pt={20}\n      gap={{ base: 10, md: 60 }}\n    >\n      <Box\n        position=\"absolute\"\n        borderRadius=\"full\"\n        left=\"-400px\"\n        top=\"-200px\"\n        height=\"600px\"\n        filter=\"blur(484px)\"\n        width=\"600px\"\n        background=\"#03a5fc\"\n        zIndex={-3}\n      />\n      {isSmallScreen && (\n        <Box h=\"338px\" gridArea=\"creators\" px={12}>\n          <Heading color=\"white\" fontSize={50} mb={6}>\n            <Text fontFamily=\"Exo 2, sans-serif\">\n              Create <span style={{ color: \"#03a5fc\" }}> & </span>\n              Manage Tokens\n            </Text>\n          </Heading>\n          <Box>\n            <Heading color=\"white\" fontSize={50} mb={6}></Heading>\n            <Text mb=\"24pt\" color=\"gray.100\" display=\"flex\">\n              Each token reservation mints one master token and up to eight role\n              tokens. Superuser, Minter, Caster, Transferer, Configurer,\n              Limiter, Burner, or Destroyer.\n              <span\n                style={{ fontSize: \"14pt\", color: \"#03a5fc\", marginLeft: 4 }}\n              >\n                Superuser, Minter, Caster, Transferer, Configurer, Limiter,\n                Burner, or Destroyer\n              </span>\n            </Text>\n\n          </Box>\n        </Box>\n      )}\n      <Grid\n        display={{ base: \"initial\", md: \"grid\" }}\n        gap={{ base: 3, md: 0 }}\n        id=\"creators\"\n        templateColumns={{\n          base: \"repeat(1, 1fr)\",\n          md: \"265px 265px 265px 265px\",\n        }}\n        templateRows=\"auto\"\n        templateAreas={{\n          md: `\n            \"creators creators creators reviewers\"\n            \"owner q editors empty\"\n            \"empty1 admins empty2 empty2\"\n          `,\n        }}\n      >\n        {!isSmallScreen && (\n          <Box h=\"338px\" mb=\"100px\" gridArea=\"creators\" pr={12}>\n            <Image\n              maxWidth={\"200px\"}\n              src=\"/Landing/smartlaw-white.png\"\n              alt=\"smartlaw\"\n            />\n\n            <Heading color=\"white\" fontSize={50} mb={6}>\n              <Text fontFamily=\"Exo 2, sans-serif\">\n                Create <span style={{ color: \"#03a5fc\" }}> & </span>\n                Manage Tokens\n              </Text>\n            </Heading>\n            <Text mb=\"24pt\" color=\"gray.100\" display=\"flex\">\n              Each token reservation mints one master token and up to eight role\n              tokens. Superuser, Minter, Caster, Transferer, Configurer,\n              Limiter, Burner, or Destroyer.\n              <span\n                style={{ fontSize: \"14pt\", color: \"#03a5fc\", marginLeft: 4 }}\n              >\n                Superuser, Minter, Caster, Transferer, Configurer, Limiter,\n                Burner, or Destroyer\n              </span>\n            </Text>\n            <Text mb=\"24pt\" color=\"gray.100\" fontSize=\"18pt\" display=\"flex\">\n              Each token can be managed with a single Superuser token token or\n              by a group of administrators each withtheir own role.{\" \"}\n            </Text>\n            <Text color=\"orange\" fontSize=\"18pt\" fontFamily=\"Exo 2, sans-serif\">\n              Superusers have the highest level of token control.\n            </Text>\n          </Box>\n        )}\n\n          <Box\n            dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n            bgImage=\"url(/Landing/Card4.svg)\"\n            bgPosition=\"center\"\n            bgSize=\"contain\"\n            backgroundRepeat=\"no-repeat\"\n            p={6}\n            textAlign=\"center\"\n            h=\"338px\"\n            gridArea=\"reviewers\"\n          >\n            <Heading color=\"orange\" fontSize={{ base: 28, md: 40 }} mb={6}>\n              Superuser\n            </Heading>{\" \"}\n            <Text\n              mb={4}\n              fontSize={{ base: \"lg\", md: \"3xl\" }}\n              maxW={{ base: \"220px\", md: \"full\" }}\n            >\n              <CheckCircleIcon /> Can{\" \"}\n              <span style={{ color: \"#03a5fc\" }}>perform all actions</span> on\n              the token.\n            </Text>\n          </Box>\n\n        <Box\n          dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n          bgImage=\"url(/Landing/Card1.svg)\"\n          bgPosition=\"center\"\n          bgSize=\"contain\"\n          backgroundRepeat=\"no-repeat\"\n          p={6}\n          textAlign=\"center\"\n          h=\"338px\"\n          gridArea=\"owner\"\n        >\n          <Heading color=\"lime\" fontSize={{ base: 28, md: 40 }} mb={3}>\n            Minter\n          </Heading>\n          <Text\n            fontFamily=\"Exo 2, sans-serif\"\n            mb={4}\n            fontSize={{ base: \"lg\", md: \"3xl\" }}\n            maxW={{ base: \"220px\", md: \"full\" }}\n          >\n            <CheckCircleIcon /> Can{\" \"}\n            <span style={{ color: \"#03a5fc\" }}>mint new instances</span> of the\n            token.\n          </Text>\n        </Box>\n        {!isSmallScreen && (\n          <Box\n            dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n            p={6}\n            textAlign=\"center\"\n            h=\"338px\"\n            gridArea=\"q\"\n          >\n            <VStack>\n              <Text color=\"gray.100\" fontFamily=\"Exo 2, sans-serif\">\n                All incentive tokens can be dispersed or disbursed using{\" \"}\n              </Text>\n\n              <Image\n                src=\"/Landing/airdrop_eth_logo-wh-400x.png\"\n                height=\"60px\"\n                alt=\"circles3\"\n                mr={10}\n              />\n              <Text color=\"gray.100\" fontFamily=\"Exo 2, sans-serif\">\n                one example of a trusted tokens source. The history of{\" \"}\n                <span style={{ color: \"#03a5fc\" }}>Airdrop.eth</span> token\n                minter can be found on a public blockchain.{\" \"}\n              </Text>\n            </VStack>\n          </Box>\n        )}\n        <Box\n          dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n          bgImage=\"url(/Landing/Card3.svg)\"\n          bgPosition=\"center\"\n          bgSize=\"contain\"\n          backgroundRepeat=\"no-repeat\"\n          p={6}\n          textAlign=\"center\"\n          h=\"338px\"\n          gridArea=\"editors\"\n        >\n          <Heading color=\"gray.500\" fontSize={{ base: 28, md: 40 }} mb={3}>\n          Configurer\n          </Heading>\n          <Text\n            mb={4}\n            fontSize={{ base: \"lg\", md: \"3xl\" }}\n            maxW={{ base: \"220px\", md: \"full\" }}\n          >\n            <CheckCircleIcon /> Can{\" \"}\n            <span style={{ color: \"#03a5fc\" }}>change the token’s metadata</span> and resource id.\n          </Text>\n        </Box>\n        <Box gridArea=\"empty\" />\n\n        <Box gridArea=\"empty1\" />\n        <Box\n          dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n          bgImage=\"url(/Landing/Card2.svg)\"\n          bgPosition=\"center\"\n          bgSize=\"contain\"\n          backgroundRepeat=\"no-repeat\"\n          p={6}\n          textAlign=\"center\"\n          h=\"338px\"\n          gridArea=\"admins\"\n        >\n          <Heading color=\"gray.500\" fontSize={{ base: 28, md: 40 }} mb={3}>\n          Transferer\n          </Heading>\n          <Text\n            mb={4}\n            fontSize={{ base: \"lg\", md: \"3xl\" }}\n            maxW={{ base: \"220px\", md: \"full\" }}\n          >\n            <CheckCircleIcon /> Can{\" \"}\n            <span style={{ color: \"#03a5fc\" }}> transfer the token</span> to another account.\n          </Text>\n        </Box>\n        <Box gridArea=\"empty2\" />\n      </Grid>\n\n      <Grid\n        display={{ base: \"initial\", md: \"grid\" }}\n        gap={{ base: 3, md: 0 }}\n        id=\"creators\"\n        templateColumns={{\n          base: \"repeat(1, 1fr)\",\n          md: \"265px 265px 265px 265px\",\n        }}\n        templateRows=\"auto\"\n        templateAreas={{\n          md: `\n            \"creators creators creators reviewers\"\n            \"owner q editors empty\"\n            \"empty1 admins empty2 empty2\"\n          `,\n        }}\n      >\n\n\n       <Box\n          dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n          bgImage=\"url(/Landing/Card1.svg)\"\n          bgPosition=\"center\"\n          bgSize=\"contain\"\n          backgroundRepeat=\"no-repeat\"\n          p={6}\n          textAlign=\"center\"\n          h=\"338px\"\n          gridArea=\"owner\"\n        >\n          <Heading color=\"pink.300\" fontSize={{ base: 28, md: 40 }} mb={3}>\n            Caster\n          </Heading>\n          <Text\n            fontFamily=\"Exo 2, sans-serif\"\n            mb={4}\n            fontSize={{ base: \"lg\", md: \"3xl\" }}\n            maxW={{ base: \"220px\", md: \"full\" }}\n          >\n            <CheckCircleIcon /> Can{\" \"}\n            <span style={{ color: \"#03a5fc\" }}>assign roles</span> for the token.\n          </Text>\n        </Box>\n        {!isSmallScreen && (\n          <Box\n            dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n            p={6}\n            textAlign=\"center\"\n            h=\"338px\"\n            gridArea=\"q\"\n          >\n            <VStack>\n              <Text color=\"gray.100\" fontFamily=\"Exo 2, sans-serif\">\n                Web3 is a decentralized network of blockchains and nodes.{\" \"}\n              </Text>\n\n              <Image\n                src=\"/w3s-800w.png\"\n                alt=\"web3skills\"\n                mr={10}\n              />\n              <Text color=\"gray.100\" fontFamily=\"Exo 2, sans-serif\">\n              Sovereign data and{\" \"}\n                <span style={{ color: \"#03a5fc\" }}>decentralized</span> identities.{\" \"}\n              </Text>\n            </VStack>\n          </Box>\n        )}\n        <Box\n          dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n          bgImage=\"url(/Landing/Card3.svg)\"\n          bgPosition=\"center\"\n          bgSize=\"contain\"\n          backgroundRepeat=\"no-repeat\"\n          p={6}\n          textAlign=\"center\"\n          h=\"338px\"\n          gridArea=\"editors\"\n        >\n          <Heading color=\"blue.200\" fontSize={{ base: 28, md: 40 }} mb={3}>\n          Limiter\n          </Heading>\n          <Text\n            mb={4}\n            fontSize={{ base: \"lg\", md: \"3xl\" }}\n            maxW={{ base: \"220px\", md: \"full\" }}\n          >\n            <CheckCircleIcon /> Can{\" \"}\n            <span style={{ color: \"#03a5fc\" }}>set the maximum mintable allowance</span> for a token.\n          </Text>\n        </Box>\n        <Box gridArea=\"empty\" />\n\n        <Box gridArea=\"empty1\" />\n        <Box\n          dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n          bgImage=\"url(/Landing/Card2.svg)\"\n          bgPosition=\"center\"\n          bgSize=\"contain\"\n          backgroundRepeat=\"no-repeat\"\n          p={6}\n          textAlign=\"center\"\n          h=\"338px\"\n          gridArea=\"admins\"\n        >\n          <Heading color=\"red.500\" fontSize={{ base: 28, md: 40 }} mb={3}>\n          Burner\n          </Heading>\n          <Text\n            mb={4}\n            fontSize={{ base: \"lg\", md: \"3xl\" }}\n            maxW={{ base: \"220px\", md: \"full\" }}\n          >\n            <CheckCircleIcon /> Can{\" \"}\n            <span style={{ color: \"#03a5fc\" }}> destroy an instance</span> of a token.\n          </Text>\n        </Box>\n        <Box gridArea=\"empty2\" />\n      </Grid>\n\n\n\n      <Flex w=\"full\" pos=\"relative\" justifyContent=\"center\" mt={40}>\n        {!isSmallScreen && (\n          <Image\n          maxW={\"600px\"}\n            src=\"/Landing/group.svg\"\n            position=\"absolute\"\n            left=\"0\"\n            top=\"-400px\"\n            alt=\"group_image\"\n          />\n        )}\n\n                {/* \n  Burner: 'Can destroy an instance of a token.',\n  Destroyer: 'Can destroy a token type.', */}\n\n\n\n\n\n\n\n        <Box\n          id=\"questers\"\n          mt=\"200px\"\n          background={{\n            base: \"none\",\n            md: \"radial-gradient(100% 100% at 100% 71%, rgba(255, 255, 255, 0.14) 17%, rgba(255, 255, 255, 0) 100%)\",\n          }}\n          backdropFilter={{ base: \"none\", md: \"blur(20px)\" }}\n          border={{ base: \"none\", md: \"1px solid #03a5fc\" }}\n          borderRadius={{ base: \"none\", md: \"29.8157px\" }}\n          w=\"80%\"\n          h={{ base: \"initial\", md: \"528px\" }}\n          textAlign=\"center\"\n          p={{ base: 0, md: 24 }}\n          mb={{ base: 24, md: 0 }}\n        >\n          <Heading color=\"cyan\" fontSize={{ base: 20, md: 50 }} mb={12}>\n            Great for Team Building!\n          </Heading>\n          <Text color=\"gray.100\" mb={6} fontSize={{ base: \"lg\", md: \"3xl\" }}>\n            <CheckCircleIcon /> issue tokens for a job well done!\n          </Text>\n          <Text color=\"gray.100\" mb={6} fontSize={{ base: \"lg\", md: \"3xl\" }}>\n            <CheckCircleIcon /> issue tokens for special events!\n          </Text>\n          <Text color=\"gray.100\" mb={6} fontSize={{ base: \"lg\", md: \"3xl\" }}>\n            <CheckCircleIcon /> issue tokens for invite-only parties.\n          </Text>\n        </Box>\n      </Flex>\n      <Link to=\"back-to-top\" spy={true} smooth={true} duration={800}>\n        <Image\n          src=\"/Landing/Up.svg\"\n          alt=\"up\"\n          mr={10}\n          pos=\"absolute\"\n          right={{ base: 4, md: 50 }}\n          bottom={{ base: 5, md: 20 }}\n          cursor=\"pointer\"\n        />\n      </Link>\n    </VStack>\n  );\n};\n\nexport default Creators;\n","import {\n  Box,\n  Flex,\n  FlexProps,\n  Tooltip,\n  Heading,\n  Image,\n  Text,\n  useBreakpointValue,\n} from '@chakra-ui/react';\nimport { LinkedSVG } from '@/components'\n\n\n// font-family: 'Anek Devanagari, sans-serif';\n// font-family: 'Anek Latin, sans-serif';\n// font-family: 'Anton, sans-serif';\n// font-family: 'Arizonia, cursive';\n// font-family: 'Encode Sans Semi Condensed, sans-serif';\n// font-family: \"Exo 2, sans-serif\";\n// font-family: 'Georama, sans-serif';\n// font-family: 'League Gothic, sans-serif';\n// font-family: 'Orbitron, sans-serif';\n// font-family: 'Oxanium, cursive';\n// font-family: 'Russo One, sans-serif';\n\n\nimport React from 'react'\n\nexport const MenuHeader: React.FC = () => {\n  const isSmallScreen = useBreakpointValue({ base: true, md: true, lg: true });\n\n  return (\n    // <Box p={3} bg=\"black\">\n    <Box p={3} bg=\"black\">\n    <Flex\n      w=\"full\"\n      align=\"start\"\n      justify=\"center\"\n      minH=\"20vh\"\n      id=\"what\"\n      gap={10}\n      pt={20}\n      pb={20}\n    >\n      {!isSmallScreen && <Image src=\"/Landing/smartlaw-white.png\" alt=\"smartlaw\" />}\n\n      <Flex\n        display=\"flex\"\n        flexDirection=\"column\"\n        justify=\"baseline\"\n        maxWidth={{ base: '90%', md: '5xl' }}\n        lineHeight={{ base: 'lg', '2xl': '2xl' }}\n        pl={{ base: 0, md: 0 }}\n        zIndex={100}\n        fontWeight=\"normal\"\n        color=\"white\"\n        alignItems={{ base: 'center', md: 'initial' }}\n      >\n        {isSmallScreen && (\n          <Image src=\"/Landing/smartlaw-white.png\" alt=\"smartlaw\" width={400} mb={8} />\n        )}\n        <Heading\n          fontSize={{ base: 24, md: 60 }}\n          pb={10}\n          fontWeight=\"normal\"\n          display=\"flex\"\n          color=\"white\"\n          alignItems={{ base: 'center', md: 'initial' }}\n          textAlign={{ base: 'center', md: 'initial' }}\n        >\n          <Text fontFamily=\"Exo 2, sans-serif\">\n          <span style={{ color: '#03a5fc' }}>Web3 </span>\n          Tokens <span style={{ color: '#03a5fc' }}> & </span>\n          Digital Assets\n          </Text>\n        </Heading>\n        <Text fontSize={{ base: 'md', md: '3xl' }} px={{ base: 8, md: 0 }}>\n          The next wave in computing is decentralized. Node-based and public blockchains provide assurances in data that until recently was impossible. A big part of the the Web3 ecosystem provides incentives, identity confirmations, non-transferable achievements and credentials, and encrypted content.\n        </Text>\n      </Flex>\n    </Flex>\n    </Box>\n  );\n};\n\n\nexport default MenuHeader","import {\n  Box,\n  Container,\n  Flex,\n  Heading,\n  HStack,\n  Image,\n  Text,\n  useBreakpointValue,\n  VStack,\n} from \"@chakra-ui/react\";\n\nimport {\n  AddIcon,\n  CloseIcon,\n  SettingsIcon,\n  StarIcon,\n  CheckCircleIcon,\n  ExternalLinkIcon,\n} from \"@chakra-ui/icons\";\n\nimport React from \"react\";\n\nexport const Who: React.FC = () => {\n  const isSmallScreen = useBreakpointValue({ base: true, lg: false });\n\n  return (\n    <Container bg=\"black\">\n      <Heading\n          fontSize={{ base: 24, md: 40 }}\n          fontWeight=\"normal\"\n          display=\"flex\"\n          color=\"cyan\"\n          alignItems={{ base: 'center', md: 'initial' }}\n          textAlign={{ base: 'center', md: 'initial' }}\n        >\n          <Text fontFamily=\"Exo 2, sans-serif\">\n          Use digital tokens for:</Text>\n        </Heading>\n\n      <HStack\n        w=\"full\"\n        h=\"full\"\n        align=\"center\"\n        justify=\"center\"\n        id=\"who\"\n      >\n        {!isSmallScreen && <Image src=\"/Landing/Circles2.png\" alt=\"circles\" />}\n\n        <Flex\n          gap={8}\n          justifyContent=\"center\"\n          maxWidth={{ base: \"90%\", md: \"5xl\" }}\n          flexDirection={{ base: \"column\", md: \"row\" }}\n          alignItems={{ base: \"center\", md: \"initial\" }}\n          lineHeight={{ base: \"lg\", \"2xl\": \"2xl\" }}\n          pl={{ base: 0, md: 0 }}\n          zIndex={100}\n          fontWeight=\"normal\"\n          color=\"white\"\n          height={{ base: \"100%\", md: \"340px\" }}\n          my={{ base: 24, md: 0 }}\n        >\n          {isSmallScreen && (\n            <Image\n              src=\"/Landing/Circles2.png\"\n              alt=\"circles\"\n              width={20}\n              mb={{ base: 0, md: 8 }}\n            />\n          )}\n          <Heading\n            color=\"main\"\n            fontSize={{ base: 36, md: 58 }}\n            fontWeight=\"normal\"\n            display=\"flex\"\n            flexDir=\"column\"\n            alignSelf=\"center\"\n            alignItems={{ base: \"center\", md: \"start\" }}\n          ></Heading>\n\n          <Box\n            dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n            bgImage=\"url(/Landing/RectangleBG1.svg)\"\n            bgPosition={{ base: \"bottom\", md: \"center\" }}\n            bgSize={{ base: \"cover\", md: \"contain\" }}\n            backgroundRepeat=\"no-repeat\"\n            maxW=\"267px\"\n            p={6}\n            textAlign=\"center\"\n          >\n            <Heading color=\"white\" fontSize={{ base: 28, md: 40 }} mb={6}>\n              Rewards...\n            </Heading>\n            <Text mb={4}><CheckCircleIcon /> Participation rewards.</Text>\n            <Text mb={4}><CheckCircleIcon /> Work for hire rewards</Text>\n            <Text mb={4}><CheckCircleIcon /> Retain talent though streaming tokens</Text>\n            <Text mb={4}><CheckCircleIcon /> Support tokens through liquidity pools</Text>\n\n          </Box>\n\n          <Box\n            dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n            bgImage=\"url(/Landing/RectangleBG2.svg)\"\n            bgPosition={{ base: \"bottom\", md: \"center\" }}\n            bgSize={{ base: \"cover\", md: \"contain\" }}\n            backgroundRepeat=\"no-repeat\"\n            maxW=\"267px\"\n            p={6}\n            textAlign=\"center\"\n          >\n            <Heading color=\"white\" fontSize={{ base: 28, md: 40 }} mb={6}>\n              Incentives\n            </Heading>\n            <Text mb={4}><CheckCircleIcon /> Attract Talent</Text>\n            <Text mb={4}><CheckCircleIcon /> Build Community</Text>\n            <Text mb={4}><CheckCircleIcon /> Learn to Play</Text>\n            <Text mb={4}><CheckCircleIcon /> Play to Earn</Text>\n            <Text mb={4}><CheckCircleIcon /> Earn to Learn</Text>\n\n          </Box>\n        </Flex>\n      </HStack>\n    </Container>\n  );\n};\n\nexport default Who;\n","import {\n  Box,\n  Flex,\n  Heading,\n  HStack,\n  Image,\n  Text,\n  useBreakpointValue,\n  Avatar,\n  Grid,\n  Link as ChakraLink,\n  Link,\n} from '@chakra-ui/react';\n\n\nimport React from 'react'\n\nexport const Team: React.FC = () => {\n  const isSmallScreen = useBreakpointValue({ base: true, lg: false });\n\n  return (    \n  \n    <HStack\n      w=\"full\"\n      align=\"center\"\n      justify=\"center\"\n      minH={{ base: 'full', md: '80vh' }}\n      bg=\"black\"\n      bgPosition=\"center\"\n      bgAttachment=\"fixed\"\n      bgSize=\"cover\"\n      id=\"team\"\n    >\n      <Flex\n        display=\"flex\"\n        flexDirection=\"column\"\n        lineHeight={{ base: 'lg', '2xl': '2xl' }}\n        pl={{ base: 0, md: 0 }}\n        marginInlineStart=\"0 !important\"\n        zIndex={100}\n        w=\"full\"\n        fontWeight=\"normal\"\n        color=\"white\"\n      >\n        <Flex align=\"center\" mb={10} flexDir=\"column\">\n          <Heading\n            color=\"main\"\n            fontSize={{ base: 24, md: 40 }}\n            pb={4}\n            fontWeight=\"normal\"\n            display=\"flex\"\n          >\n            Engineered by :\n          </Heading>\n\n\n          <Grid\n            gap={8}\n            // display={{ base: 'flex', md: 'grid' }}\n            templateColumns={{ base: 'repeat(1, 1fr)', md: 'repeat(4, 1fr)' }}\n            height={{ base: 'initial', md: '20rem' }}\n          >\n                        <Flex\n              flexDir=\"column\"\n              alignItems=\"center\"\n              background=\"linear-gradient(transparent, rgba(45, 248, 199, 0.2))\"\n              p={8}\n              borderRadius={12}\n            >\n              <Avatar\n                name=\"Web3LegalEngineering\"\n                src=\"/Landing/profile/dysbulic.png\"\n                size=\"2xl\"\n                showBorder\n                borderColor=\"main\"\n              />\n              <Text\n                fontWeight=\"bold\"\n                mt={3}\n                fontSize=\"lg\"\n                fontFamily=\"heading\"\n                mb={2}\n              >\n                Dysbulic\n              </Text>\n              <Text marginBottom=\"auto\" fontSize=\"sm\">\n                MetaGame Builder Champion\n              </Text>\n\n              <Flex alignItems=\"center\" justifyContent=\"center\" gap={2}>\n              <ChakraLink\n                  href=\"https://github.com/tenfinney\"\n                  isExternal\n                  borderRadius=\"full\"\n                >\n                  <Image\n                    src=\"/Landing/contact/github.png\"\n                    alt=\"ipfs\"\n                    height={6}\n                  />\n                </ChakraLink>\n                <ChakraLink\n                  href=\"https://www.linkedin.com/in/scott-stevenson-jd/\"\n                  isExternal\n                  borderRadius=\"full\"\n                >\n                  <Image\n                    src=\"/Landing/contact/linkedin.png\"\n                    alt=\"ipfs\"\n                    height={6}\n                  />\n                </ChakraLink>\n                <ChakraLink\n                  href=\"https://twitter.com/tenfinney\"\n                  isExternal\n                  borderRadius=\"full\"\n                >\n                  <Image\n                    src=\"/Landing/contact/twitter.png\"\n                    alt=\"ipfs\"\n                    height={6}\n                  />\n                </ChakraLink>\n              </Flex>\n            </Flex>\n            <Flex\n              flexDir=\"column\"\n              alignItems=\"center\"\n              background=\"linear-gradient(transparent, rgba(45, 248, 199, 0.2))\"\n              p={8}\n              borderRadius={12}\n            >\n              <Avatar\n                name=\"Scott\"\n                src=\"/Landing/profile/ethereans-02893-t-hex-B4D-tr-400w.png\"\n                size=\"2xl\"\n                showBorder\n                borderColor=\"main\"\n                background=\"black\"\n              />\n              <Text\n                fontWeight=\"bold\"\n                mt={3}\n                fontSize=\"lg\"\n                fontFamily=\"heading\"\n                mb={2}\n              >\n                Web3 Legal Engineering\n              </Text>\n              <Text marginBottom=\"auto\" fontSize=\"sm\">\n                Metaverse Services\n              </Text>\n\n              <Flex alignItems=\"center\" justifyContent=\"center\" gap={2}>\n                <ChakraLink\n                  href=\"https://github.com/tenfinney\"\n                  isExternal\n                  borderRadius=\"full\"\n                >\n                  <Image\n                    src=\"/Landing/contact/github.png\"\n                    alt=\"ipfs\"\n                    height={6}\n                  />\n                </ChakraLink>\n                <ChakraLink\n                  href=\"https://www.linkedin.com/in/scott-stevenson-jd/\"\n                  isExternal\n                  borderRadius=\"full\"\n                >\n                  <Image\n                    src=\"/Landing/contact/linkedin.png\"\n                    alt=\"ipfs\"\n                    height={6}\n                  />\n                </ChakraLink>\n                <ChakraLink\n                  href=\"https://twitter.com/tenfinney\"\n                  isExternal\n                  borderRadius=\"full\"\n                >\n                  <Image\n                    src=\"/Landing/contact/twitter.png\"\n                    alt=\"ipfs\"\n                    height={6}\n                  />\n                </ChakraLink>\n              </Flex>\n            </Flex>\n\n\n            <Flex\n              flexDir=\"column\"\n              alignItems=\"center\"\n              background=\"linear-gradient(transparent, rgba(45, 248, 199, 0.2))\"\n              p={8}\n              borderRadius={12}\n            >\n              <Avatar\n                name=\"Web3LegalEngineering\"\n                src=\"/Landing/profile/ss-03-400w2.png\"\n                size=\"2xl\"\n                showBorder\n                borderColor=\"main\"\n              />\n              <Text\n                fontWeight=\"bold\"\n                mt={3}\n                fontSize=\"lg\"\n                fontFamily=\"heading\"\n                mb={2}\n              >\n                Scott Stevenson JD\n              </Text>\n              <Text marginBottom=\"auto\" fontSize=\"sm\">\n                Web3 Applications\n              </Text>\n\n              <Flex alignItems=\"center\" justifyContent=\"center\" gap={2}>\n              <ChakraLink\n                  href=\"https://github.com/tenfinney\"\n                  isExternal\n                  borderRadius=\"full\"\n                >\n                  <Image\n                    src=\"/Landing/contact/github.png\"\n                    alt=\"ipfs\"\n                    height={6}\n                  />\n                </ChakraLink>\n                <ChakraLink\n                  href=\"https://www.linkedin.com/in/scott-stevenson-jd/\"\n                  isExternal\n                  borderRadius=\"full\"\n                >\n                  <Image\n                    src=\"/Landing/contact/linkedin.png\"\n                    alt=\"ipfs\"\n                    height={6}\n                  />\n                </ChakraLink>\n                <ChakraLink\n                  href=\"https://twitter.com/tenfinney\"\n                  isExternal\n                  borderRadius=\"full\"\n                >\n                  <Image\n                    src=\"/Landing/contact/twitter.png\"\n                    alt=\"ipfs\"\n                    height={6}\n                  />\n                </ChakraLink>\n              </Flex>\n            </Flex>\n\n\n\n          </Grid>\n        </Flex>\n        <Heading\n            color=\"main\"\n            fontSize={{ base: 24, md: 40 }}\n            pb={4}\n            fontWeight=\"normal\"\n            display=\"flex\"\n          >\n            Join us here:\n          </Heading>\n          <Flex mb={8}>\n            <Link\n              href=\"https://github.com/tenfinney\"\n              isExternal\n              borderRadius=\"full\"\n              mx={4}\n            >\n              <Image\n                src=\"/Landing/contact/discord.png\"\n                alt=\"discord\"\n                height={14}\n              />\n            </Link>\n            <Link\n              href=\"https://https://github.com/tenfinney\"\n              isExternal\n              borderRadius=\"full\"\n              mx={4}\n            >\n              <Image\n                src=\"/Landing/contact/github-w.png\"\n                alt=\"github\"\n                height={14}\n              />\n            </Link>\n            <Link\n              href=\"https://mobile.twitter.com/tenfinney\"\n              isExternal\n              borderRadius=\"full\"\n              mx={4}\n            >\n              <Image\n                src=\"/Landing/contact/twitter.png\"\n                alt=\"twitter\"\n                height={14}\n              />\n            </Link>\n          </Flex>\n      </Flex>\n      \n    </HStack>\n  );\n};\n\n\nexport default Team","import {\n  Box,\n  Flex,\n  Heading,\n  HStack,\n  Image,\n  Text,\n  useBreakpointValue,\n  Grid,\n} from \"@chakra-ui/react\";\n\nimport { Link } from \"react-scroll\";\n\n// import { SUPPORTED_NETWORK_INFO } from '@/web3/networks';\n\nimport React from \"react\";\n\nexport const BuiltWith: React.FC = () => {\n  const isSmallScreen = useBreakpointValue({ base: true, lg: false });\n\n  return (\n    <Box color=\"white\" p={3} bg=\"black\">\n    {/* <Box color=\"white\" p={3} bg=\"\"> */}\n\n    <HStack\n      w=\"full\"\n      align=\"center\"\n      justify=\"center\"\n      minH={{ base: \"40vh\", md: \"40vh\" }}\n      bg=\"black\"\n      bgPosition=\"center\"\n      bgAttachment=\"fixed\"\n      bgSize=\"cover\"\n      position=\"relative\"\n    >\n      <Box\n        position=\"absolute\"\n        borderRadius=\"full\"\n        right=\"-300px\"\n        top=\"-300px\"\n        height=\"200px\"\n        filter=\"blur(484px)\"\n        width=\"400px\"\n        background=\"#03a5fc\"\n        zIndex={-3}\n      />\n      <Flex\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        lineHeight={{ base: \"lg\", \"2xl\": \"2xl\" }}\n        pl={{ base: 0, md: 0 }}\n        marginInlineStart=\"0 !important\"\n        zIndex={100}\n        w=\"full\"\n        fontWeight=\"normal\"\n        color=\"white\"\n      >\n        <Grid\n          mb={20}\n          templateColumns={{ base: \"repeat(1, 1fr)\", md: \"repeat(3, 1fr)\" }}\n        >\n          {!isSmallScreen && (\n            <Image src=\"/Landing/Circles5.png\" alt=\"circles3\" mr={10} />\n          )}\n          <Flex flexDir=\"column\" mr={{ base: 0, md: 20 }}>\n            <Heading\n              color=\"main\"\n              fontSize={{ base: 18, md: 40 }}\n              pb={10}\n              pt={{ base: 10, md: 0 }}\n              fontWeight=\"normal\"\n              display=\"flex\"\n              alignSelf=\"center\"\n            >\n              <Text color=\"cyan\" ml={10}>\n                Built with:\n              </Text>\n            </Heading>\n          </Flex>\n\n          <Flex flexDir=\"column\">\n          <Heading\n              color=\"main\"\n              fontSize={{ base: 10, md: 30 }}\n              pb={0}\n              pt={{ base: 10, md: 0 }}\n              fontWeight=\"normal\"\n              display=\"flex\"\n              flexDir=\"column\"\n              alignSelf=\"center\"\n            >\n            </Heading>\n            <Heading\n              color=\"main\"\n              fontSize={{ base: 18, md: 40 }}\n              pb={10}\n              pt={{ base: 10, md: 0 }}\n              fontWeight=\"normal\"\n              display=\"flex\"\n              flexDir=\"column\"\n              alignSelf=\"center\"\n            >\n              <Text color=\"white\">Solidity on Polygon using IPFS and the Graph </Text>\n            </Heading>\n          </Flex>\n        </Grid>\n      </Flex>\n      <Link to=\"back-to-top\" spy={true} smooth={true} duration={800}>\n        <Image\n          src=\"/Landing/Up.svg\"\n          alt=\"up\"\n          mr={10}\n          pos=\"absolute\"\n          right={{ base: 4, md: 50 }}\n          bottom={{ base: 5, md: 20 }}\n          cursor=\"pointer\"\n        />\n      </Link>\n    </HStack>\n    </Box>\n  );\n};\n\nexport default BuiltWith;\n","import React, {\n  useState, useEffect, useCallback, useRef,\n} from 'react'\nimport {\n  extractMessage, httpURL, toSpanList,\n} from '@/lib/helpers'\nimport { HiddenError, Limits, Maybe, TokenState } from '@/lib/types'\nimport { Header, MenuHeader, MenuLandingDesktop, Who, How, Creators, BuiltWith, Team, TokenFilterForm, TokensTable } from '@/components'\nimport { useWeb3 } from '@/lib/hooks'\nimport { Helmet } from 'react-helmet'\nimport {\n  useSearchParams, useNavigate, createSearchParams,\n} from 'react-router-dom'\nimport JSON5 from 'json5'\nimport { defaults } from '@/config'\nimport {\n  chakra, Button, Container, Flex, Text, Stack,\n} from '@chakra-ui/react'\n\nconst Home = () => {\n  const [tokens, setTokens] = useState<Array<TokenState | Error>>([])\n  const [query] = useSearchParams()\n  const [limit, setLimit] = useState(Number(query.get('limit') ?? defaults.limit))\n  const [offset, setOffset] = useState(Number(query.get('offset') ?? defaults.offset))\n  const [gatingVisible, setGatingVisible] = (\n    useState(query.get('gating') === 'true')\n  )\n  const visible = query.get('visible') ?? defaults.visible\n  const [visibleList, setVisibleList] = (\n    useState<Array<number | Limits>>(toSpanList(visible))\n  )\n  const navigate = useNavigate()\n  const { roContract, bitsLibrary } = useWeb3()\n  const setToken = useCallback(\n    (idx: number, info: Record<string, unknown>) => {\n      let token\n\n      setTokens((tkns: Array<TokenState>) => {\n        token = { ...tkns[idx], ...info };\n        return [\n          ...tkns.slice(0, idx),\n          ...Array.from({ length: idx - tkns.length }, () => ({})),\n          token,\n          ...tkns.slice(idx + 1),\n        ];\n      });\n      return token;\n    },\n    [setTokens],\n  )\n  const [typeCount, setTypeCount] = useState(null)\n  const [GATING_TYPE, setGATING_TYPE] = useState<Maybe<bigint>>(null)\n  const [DISABLING_TYPE, setDISABLING_TYPE] = useState<Maybe<bigint>>(null)\n  const [TYPE_WIDTH, setTYPE_WIDTH] = useState<Maybe<number>>(null)\n  const [TYPE_BOUNDARY, setTYPE_BOUNDARY] = (\n    useState<Maybe<number>>(null)\n  )\n\n  useEffect(() => {\n    const params = {};\n    if (visibleList?.length > 0) {\n      Object.assign(params, {\n        visible: visibleList.toString(),\n      });\n    } else {\n      Object.entries({ limit, offset, gating: gatingVisible }).forEach(\n        ([key, val]) => {\n          if (val !== defaults[key as keyof typeof defaults]) {\n            Object.assign(params, { [key]: val.toString() });\n          }\n        }\n      );\n    }\n\n    const options = { search: `?${createSearchParams(params)}` };\n    navigate(options, { replace: true });\n  }, [visibleList, limit, offset, gatingVisible, navigate]);\n\n  useEffect(() => {\n    if(roContract && bitsLibrary) {\n      roContract.typeSupply()\n      .then((supply: {\n        toBigInt: () => bigint // call-bind?\n      }) => supply.toBigInt())\n      .then(setTypeCount)\n      bitsLibrary.GATING_TYPE()\n      .then((type: { toBigInt: () => bigint }) => type.toBigInt())\n      .then(setGATING_TYPE)\n      bitsLibrary.DISABLING_TYPE()\n      .then((type: { toBigInt: () => bigint }) => type.toBigInt())\n      .then(setDISABLING_TYPE)\n      bitsLibrary.TYPE_WIDTH()\n      .then(setTYPE_WIDTH)\n      bitsLibrary.TYPE_BOUNDARY()\n      .then(setTYPE_BOUNDARY)\n    }\n  }, [roContract, bitsLibrary])\n\n  useEffect(() => {\n    setVisibleList(toSpanList(visible));\n  }, [visible]);\n\n  const controller = useRef(null)\n  const retrieve = useCallback(\n    async (tokens: Array<TokenState>) => {\n      controller.current?.abort()\n      controller.current = new AbortController()\n      setTokens([])\n      return (\n        await Promise.allSettled(\n          tokens.map(async (token, idx) => {\n            try {\n              const id: bigint = token.id ?? (\n                (await roContract.tokenByIndex(token.index)).toBigInt()\n              )\n\n              const type = (\n                id\n                & (\n                  (2n**BigInt(TYPE_WIDTH) - 1n) // TYPE_WIDTH 1s\n                  << BigInt(TYPE_BOUNDARY)\n                )\n              )\n              const gating = token.is?.gating ?? (\n                type === GATING_TYPE\n              )\n              const disabling = token.is?.disabling ?? (\n                type === (GATING_TYPE | DISABLING_TYPE)\n              )\n              const gates = token.gates ?? (gating || disabling ? (\n                Number((2n**32n - 1n) & id)\n              ) : ( null ))\n\n              const is: { [key: string]: unknown } = {\n                gating,\n                disabling,\n                hidden: (\n                  token.hidable != false\n                  && (gating || disabling)\n                  && !gatingVisible\n                ),\n              }\n\n              setToken(\n                idx,\n                {\n                  id: `0x${id.toString(16)}`,\n                  index: token.index,\n                  gates,\n                  is,\n                }\n              )\n\n              if(is.hidden) {\n                throw new HiddenError('Token is hidden.')\n              }\n\n              const responses = await Promise.allSettled([\n                (async () => {\n                  const uri = token.uri ?? await roContract.uri(id)\n                  if(uri === '') {\n                    throw new Error('No URI… Waiting for configuration…')\n                  }\n                  setToken(idx, { uri })\n                  const response = await fetch(\n                    httpURL(uri)!,\n                    { signal: controller.current.signal }\n                  )\n                  if(!response.ok) {\n                    throw new Error(`Request Status: ${response.status}`)\n                  }\n                  const data = await response.text()\n                  setToken(idx, { metadata: JSON5.parse(data) })\n                })(),\n                (async () => {\n                  const supply = await roContract.totalSupply(id)\n                  setToken(idx, { total: supply.toBigInt() })\n                })(),\n                (async () => {\n                  const max = await roContract.getMax(id)\n                  console.info({ max })\n                  setToken(idx, { max: max.toBigInt() })\n                })(),\n              ])\n\n              const [{ reason: error } = { reason: null }] = (\n                responses.filter((res) => (\n                  res.status === 'rejected'\n                )) as Array<{ reason: string }>\n              )\n              if(error) throw new Error(error)\n            } catch(error) {\n              if(!(error instanceof HiddenError)) {\n                console.error({ error })\n              }\n              if(!(error instanceof DOMException)) { // !aborted\n                return setToken(idx, {\n                  error: extractMessage(error)\n                })\n              }\n            }\n          })\n        )\n      )\n    },\n    [\n      GATING_TYPE, TYPE_BOUNDARY, TYPE_WIDTH, DISABLING_TYPE,\n      gatingVisible, roContract, setToken,\n    ],\n  )\n\n  useEffect(() => {\n    const load = async () => {\n      if(\n        roContract && bitsLibrary && typeCount != null\n        && TYPE_WIDTH != null && TYPE_BOUNDARY != null\n        && GATING_TYPE != null && DISABLING_TYPE != null\n      ) {\n        const tokens: Array<TokenState> = []\n        if(visibleList.some(() => true)) {\n          visibleList.forEach(\n            (elem) => {\n              let { high, low } = elem as Limits\n              const sorted = [low, high] = (\n                [low, high].sort((a, b) => (a - b))\n              )\n              if(sorted.some((elem) => elem == null)) {\n                [high, low] = [elem as number, elem as number]\n              }\n              tokens.push(...(\n                Array.from({ length: high - low + 1 })\n                .map((_, idx) => ({\n                  index: low + idx,\n                  hidable: false,\n                }))\n              ))\n            }\n          )\n        } else {\n          const start = offset < 0 ? Number(typeCount) + offset : offset\n          const count = Math.min(limit, Number(typeCount) - start)\n          tokens.push(\n            ...(\n              Array.from({ length: count })\n              .map((_, idx) => ({\n                index: start + idx + 1,\n              }))\n            )\n          )\n        }\n\n        await retrieve(tokens)\n      }\n    }\n    load()\n  }, [\n    visibleList, retrieve, roContract, bitsLibrary,\n    limit, offset, typeCount,\n    TYPE_WIDTH, TYPE_BOUNDARY, GATING_TYPE, DISABLING_TYPE,\n  ])\n\n  return (\n    <Container maxW=\"full\" id=\"back-to-top\" bg=\"black\">\n      <Helmet>\n        <title>SmartLaw Claims</title>\n        <meta name=\"description\" content=\"SmartLaw Claims Digital Assets\" />\n      </Helmet>\n\n      <chakra.header bg=\"black\">\n        <MenuLandingDesktop />\n          <MenuHeader />\n          <Who />\n          <How />\n\n          <Creators />\n          <BuiltWith />\n        <Container>\n          <Team />\n        </Container>\n      </chakra.header>\n\n      <chakra.main bg=\"black\">\n        <Header ml=\"100px\" h=\"40vh\" />\n        <Stack align=\"center\">\n          <TokenFilterForm\n            flexGrow={1}\n            {...{\n              limit,\n              setLimit,\n              offset,\n              setOffset,\n              gatingVisible,\n              setGatingVisible,\n              visibleList,\n              setVisibleList,\n            }}\n          />\n          <TokensTable {...{ tokens }} />\n\n          <Flex justify=\"center\">\n            <Button\n              onClick={() => {\n                if (visibleList.length > 0) {\n                  const potentials = visibleList.map(\n                    (entry) => ((entry as Limits)?.high ?? entry) as number\n                  );\n                  const max = Math.max(...potentials);\n                  setVisibleList((vis) => [\n                    ...vis,\n                    { low: max, high: max + 100 },\n                  ]);\n                } else {\n                  setLimit((lim) => lim + 100);\n                }\n              }}\n            >\n              <Text\n                as=\"span\"\n                mr={1}\n                mt={-0.5}\n                fontSize=\"150%\"\n                fontWeight=\"bold\"\n              >\n                +\n              </Text>\n              100\n            </Button>\n            <Button ml={5} onClick={() => setOffset((off) => off + limit)}>\n              <Text\n                as=\"span\"\n                mr={0.75}\n                mt={-1}\n                fontSize=\"200%\"\n                fontWeight=\"bold\"\n              >\n                ↓\n              </Text>\n              {limit}\n            </Button>\n            <Button ml={5} onClick={() => setOffset((off) => off - limit)}>\n              <Text\n                as=\"span\"\n                mr={0.75}\n                mt={-1}\n                fontSize=\"200%\"\n                fontWeight=\"bold\"\n              >\n                ↑\n              </Text>\n              {limit}\n            </Button>\n            <Button\n              ml={5}\n              onClick={() => setOffset((off) => off - limit)}\n            >\n              <Text as=\"span\" mr={0.75} mt={-1} fontSize=\"200%\" fontWeight=\"bold\">↑</Text>{limit}\n            </Button>\n          </Flex>\n        </Stack>\n      </chakra.main>\n    </Container>\n  );\n};\n\nexport default Home;\n"],"names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","_excluded$1","_excluded2","initials","name","_name$split","split","firstName","lastName","charAt","AvatarName","props","getInitials","rest","styles","useStyles","React","chakra","div","role","__css","label","DefaultIcon","svg","viewBox","color","width","height","className","_jsx","baseStyle","display","alignItems","justifyContent","textAlign","textTransform","fontWeight","position","flexShrink","Avatar","forwardRef","ref","useMultiStyleConfig","_omitThemingProps","omitThemingProps","src","srcSet","showBorder","_omitThemingProps$bor","borderRadius","onError","_omitThemingProps$get","_omitThemingProps$ico","icon","_omitThemingProps$ico2","iconLabel","loading","children","borderColor","ignoreFallback","avatarStyles","borderWidth","undefined","container","span","cx","_jsxs","AvatarImage","_props$icon","status","useImage","hasLoaded","showFallback","img","alt","objectFit","TokenFilterForm","limit","setLimit","offset","setOffset","gatingVisible","setGatingVisible","visibleList","setVisibleList","register","handleSubmit","control","setValue","useForm","useEffect","toString","submit","data","Number","toSpanList","visible","a","textDecoration","mt","_after","content","mr","mb","fontSize","field","onChange","value","How","isSmallScreen","useBreakpointValue","base","lg","md","Image","Creators","marginLeft","MenuHeader","Who","Team","ChakraLink","Link","BuiltWith","Home","tokens","setTokens","useState","query","useSearchParams","get","defaults","navigate","useNavigate","roContract","bitsLibrary","useWeb3","setToken","useCallback","idx","info","token","tkns","slice","Array","from","typeCount","setTypeCount","GATING_TYPE","setGATING_TYPE","DISABLING_TYPE","setDISABLING_TYPE","TYPE_WIDTH","setTYPE_WIDTH","TYPE_BOUNDARY","setTYPE_BOUNDARY","params","entries","gating","forEach","val","options","search","createSearchParams","replace","typeSupply","then","supply","toBigInt","type","controller","useRef","retrieve","current","abort","AbortController","Promise","allSettled","map","id","tokenByIndex","index","BigInt","is","disabling","gates","hidden","hidable","HiddenError","responses","uri","Error","response","fetch","httpURL","signal","ok","text","metadata","JSON5","parse","totalSupply","total","max","getMax","console","reason","error","filter","res","DOMException","extractMessage","load","some","elem","high","low","sorted","sort","b","push","_","start","count","Math","min","Helmet","potentials","entry","vis","lim","off"],"mappings":"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"}