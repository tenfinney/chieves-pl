{"version":3,"file":"home.c92b205e.js","sources":["../../src/lib/types.ts","../../src/components/TokenFilterForm.tsx","../../src/components/How.tsx","../../src/components/Creators.tsx","../../src/pages/home.tsx"],"sourcesContent":["import { ExternalProvider } from '@ethersproject/providers'\n\nexport type Maybe<T> = T | null\nexport type Values<T> = T[keyof T]\nexport type Optional<T> = T | undefined\n\n// declare global {\n//   interface Window {\n//     ethereum: ExternalProvider\n//   }\n// }\n\nexport type NetworkInfo = {\n  [chainName: string]: {\n    chainId: number;\n    name: string;\n    label: string;\n    symbol: string;\n    explorer: Maybe<string>;\n    rpc: string;\n  }\n}\n\nexport type OpenSeaAttribute = {\n  trait_type?: string\n  value?: string | number\n  display_type?: string\n}\n\nexport type Attribute = {\n  name?: string\n  value?: string | number\n  type?: string\n}\n\nexport type ERC1155Metadata = {\n  name?: string\n  description?: string\n  decimals?: number\n  attributes?: Array<Attribute>\n  properties?: { wearables?: Record<string, string> }\n  external_url?: string\n  image?: string\n  animation_url?: string\n  background_color?: string\n\n} & {\n  [key: string]: string | number\n}\n\nexport type CodedError = Error & { code: number }\n\nexport type TokenState = {\n  id?: string\n  hidable?: boolean\n  is?: Record<string, unknown>\n  gates?: Maybe<number>\n  index?: number\n  uri?: string\n  metadata?: ERC1155Metadata\n  total?: number\n  max?: number\n  error?: string\n}\n\nexport type MetaMaskError = Error & {\n  data: {\n    code: number\n    data: string\n    message: string\n  }\n}\n\nexport type NestedError = {\n  error: Error\n}\n\nexport type NamedString = {\n  name: string\n  content: string\n}\n\nexport type Fileish = (\n  File | string | NamedString\n)\n\nexport type FileListish = (\n  Fileish | Array<File | string>\n)\n\nexport type FormValues = {\n  name?: string\n  description?: string\n  homepage?: string\n  images?: FileListish\n  color?: string\n  animation?: Fileish\n  attributes?: Array<Attribute>\n  uri?: string\n  json5?: string\n  maximum?: number\n}\n\nexport type Limits = {\n  high?: number\n  low?: number\n}\n\nexport type SpanList = Array<number | Limits>\n\nexport class HiddenError extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = 'HiddenError'\n  }\n}\n","import { toSpanList } from '@/lib/helpers'\nimport { Limits } from '@/lib/types'\nimport {\n  chakra, Button, Checkbox, Flex, FormControl,\n  FormLabel, Input, Stack, type FlexProps, Text,\n} from '@chakra-ui/react'\nimport React, { SetStateAction, useEffect, useState } from 'react'\nimport { Controller, useForm } from 'react-hook-form'\nimport { Header } from '@/components'\n\nexport type FilterValues = {\n  limit: number\n  offset: number\n  visible: string\n  gatingVisible: boolean\n}\n\nexport const TokenFilterForm: React.FC<{\n  limit: number\n  setLimit: (limit: SetStateAction<number>) => void\n  offset: number\n  setOffset: (offset: SetStateAction<number>) => void\n  gatingVisible: boolean\n  setGatingVisible: (gatingVisible: SetStateAction<boolean>) => void\n  setVisibleList: (visible: SetStateAction<Array<number | Limits>>) => (\n    void\n  )\n  visibleList: Array<number | Limits> \n} & FlexProps> = ({\n  limit = 10, setLimit, offset = 0, setOffset,\n  gatingVisible = false, setGatingVisible,\n  visibleList, setVisibleList, ...props\n}) => {\n  const {\n    register, handleSubmit, control, setValue,\n  } = useForm<FilterValues>()\n\n  useEffect(() => {\n    setValue('limit', limit)\n    setValue('offset', offset)\n    setValue('visible', visibleList.toString())\n    setValue('gatingVisible', gatingVisible)\n  }, [limit, offset, visibleList, gatingVisible, setValue])\n\n  const submit = async (data: FilterValues) => {\n    setLimit(Number(data.limit))\n    setOffset(Number(data.offset))\n    setGatingVisible(data.gatingVisible)\n    setVisibleList(toSpanList(data.visible))\n  }\n\n  return (\n    <Stack align=\"center\" id=\"querytokens\">\n\n    <Flex\n      as=\"form\" onSubmit={handleSubmit(submit)}\n      mt={10} mb=\"1rem\" maxW={['100%', 'min(85vw, 50em)']}\n      direction={['column', 'row']}\n      sx={{ a: { textDecoration: 'underline' } }}\n      {...props}\n    >\n    <Header/>\n\n      <Text fontSize=\"24pt\" mt=\"1rem\" fontWeight=\"bold\">\n        ERC-1155 ZZZZ Access and Achievment Token Minting\n      </Text>\n      <Text ml=\"20px\" fontSize=\"18pt\" fontWeight=\"bold\">\n        Digital Tokens on the Polygon EVM Blockchain using IPFS\n      </Text>\n      <Text ml=\"50px\" fontSize=\"12pt\" fontWeight=\"regular\">\n        Each token reservation mints one (1) master token and up to (11) role\n        tokens. Superuser, Minter, Caster, Transferer, Configurer, Maintainer, Creator, Limiter, Burner, Destroyer, and/or Oracle can be automatically minted with\n        the master token and can be assigned to third-parties for\n        administration.\n      </Text>\n      <Stack\n        flexGrow={1}\n        sx={{\n          '&>*:not(style)~*:not(style)': { mt: 0.5 },\n          label: {\n            _after: { content: '\":\"' },\n            mt: 1.5,\n            mr: 1,\n            fontSize: '110%',\n          },\n        }}\n      >\n        <FormControl>\n          <Flex align=\"center\">\n            <FormLabel>Limit</FormLabel>\n            <Input\n              type=\"number\"\n              placeholder=\"Number of tokens to display.\"\n              {...register('limit')}\n            />\n          </Flex>\n        </FormControl>\n        <FormControl>\n          <Flex align=\"center\">\n            <FormLabel>Offset</FormLabel>\n            <Input\n              type=\"number\"\n              placeholder=\"Number of tokens offset from Token 1.\"\n              {...register('offset')}\n            />\n          </Flex>\n        </FormControl>\n        <Text textAlign=\"center\">or</Text>\n        <FormControl>\n          <Flex align=\"center\">\n            <FormLabel>Visible&#xA0;List</FormLabel>\n            <Input\n              placeholder=\"Comma, space and dash separated list of indices.\"\n              {...register('visible')}\n            />\n          </Flex>\n        </FormControl>\n      </Stack>\n      <Stack ml={3}>\n        <FormControl>\n          <Flex align=\"center\" my={1}>\n            <Controller\n              control={control}\n              name=\"gatingVisible\"\n              defaultValue={gatingVisible}\n              render={({ field: { onChange, value, ref } }) => (\n                <Checkbox\n                  onChange={onChange}\n                  ref={ref}\n                  isChecked={value}\n                >\n                  View<chakra.br/>Permission<chakra.br/>Tokens\n                </Checkbox>\n              )}\n            />\n          </Flex>\n        </FormControl>\n\n        <Button type=\"submit\" colorScheme=\"purple\">\n          View\n        </Button>\n      </Stack>\n    </Flex>\n      </Stack>\n\n  )\n}\n\nexport default TokenFilterForm\n","import {\n  Box,\n  Flex,\n  HStack,\n  FlexProps,\n  Tooltip,\n  Heading,\n  Image,\n  Link,\n  Text,\n  useBreakpointValue,\n} from '@chakra-ui/react';\nimport { LinkedSVG } from '@/components'\n\n\nimport React from 'react'\n\nexport const How: React.FC = () => {\n  const isSmallScreen = useBreakpointValue({ base: true, lg: false });\n\n  return (    \n  \n  <HStack\n    w=\"full\"\n    align=\"center\"\n    justify=\"center\"\n    minH={{ base: '50vh', md: '70vh' }}\n    bg=\"dark\"\n    bgPosition=\"center\"\n    bgAttachment=\"fixed\"\n    bgSize=\"cover\"\n    position=\"relative\"\n    id=\"how\"\n  >\n    <Box\n      position=\"absolute\"\n      borderRadius=\"full\"\n      right=\"-300px\"\n      top=\"-300px\"\n      height=\"600px\"\n      filter=\"blur(484px)\"\n      width=\"600px\"\n      background=\"#03a5fc\"\n      zIndex={-3}\n    />\n    <Flex\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      lineHeight={{ base: 'lg', '2xl': '2xl' }}\n      pl={0}\n      marginInlineStart=\"0 !important\"\n      zIndex={100}\n      fontWeight=\"normal\"\n      color=\"white\"\n    >\n      <Flex\n        align=\"center\"\n        mb={{ base: 0, md: 8 }}\n        flexDirection={{ base: 'column', md: 'row' }}\n      >\n        {!isSmallScreen && (\n          <Image src=\"/Landing/Circles3.png\" alt=\"circles3\" mr={10} />\n        )}\n        <Heading\n          color=\"main\"\n          fontSize={{ base: 36, md: 79 }}\n          pb={10}\n          fontWeight=\"normal\"\n          display=\"flex\"\n          flexDir=\"column\"\n          textAlign={{ base: 'center', md: 'initial' }}\n        >\n          How? <Text color=\"white\"></Text>\n        </Heading>\n      </Flex>\n      <Flex align=\"center\" mb={10}>\n        <Flex\n          flexDir=\"column\"\n          fontSize={{ base: 'md', md: '3xl' }}\n          ml={{ base: 0, md: 20 }}\n          px={{ base: 12, md: 0 }}\n        >\n          <Text>\n            ...\n          </Text>\n          <Text>\n            Show the world the\n            <Link\n              w=\"100%\"\n              href=\"https://vitalik.ca/general/2022/01/26/soulbound.html\"\n              _hover={{\n                textDecor: 'none',\n                bg: 'whiteAlpha.200',\n              }}\n              isExternal\n              borderRadius=\"full\"\n              px={2}\n            >\n              <span style={{ color: '#03a5fc' }}>this</span>\n            </Link>\n            collection!\n          </Text>\n          <Flex alignSelf={{ base: 'center', md: 'auto' }}>\n            {!isSmallScreen && (\n              <Image\n                src=\"/Landing/NFTs/NFT1.png\"\n                alt=\"NFT1\"\n                title=\"NFT1\"\n                height=\"20rem\"\n              />\n            )}\n            {!isSmallScreen && (\n              <Image\n                src=\"/Landing/NFTs/NFT2.png\"\n                alt=\"NFT2\"\n                title=\"NFT2\"\n                height=\"20rem\"\n              />\n            )}\n            <Image\n              src=\"/Landing/NFTs/NFT3.png\"\n              alt=\"NFT3\"\n              title=\"NFT3\"\n              height=\"20rem\"\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    </Flex>\n  </HStack>\n);\n};\n\nexport default How","import {\n  Box,\n  Flex,\n  Grid,\n  Heading,\n  Image,\n  Text,\n  useBreakpointValue,\n  VStack,\n} from '@chakra-ui/react';\n\n\nimport React from 'react'\n\nexport const Creators: React.FC = () => {\n  const isSmallScreen = useBreakpointValue({ base: true, lg: false });\n\n  return (    \n  \n    <VStack\n      w=\"full\"\n      align=\"center\"\n      justify=\"center\"\n      minH=\"100vh\"\n      pos=\"relative\"\n      pt={20}\n      gap={{ base: 10, md: 60 }}\n    >\n      <Box\n        position=\"absolute\"\n        borderRadius=\"full\"\n        left=\"-400px\"\n        top=\"-200px\"\n        height=\"600px\"\n        filter=\"blur(484px)\"\n        width=\"600px\"\n        background=\"#03a5fc\"\n        zIndex={-3}\n      />\n      {isSmallScreen && (\n        <Box h=\"338px\" gridArea=\"creators\" px={12}>\n          <Heading\n            color=\"white\"\n            fontSize={{ base: 36, md: 70 }}\n            mb={8}\n            textAlign={{ base: 'center', md: 'initial' }}\n          >\n            Team Building\n          </Heading>\n          <Box>\n            <Text color=\"gray.100\" >The permissions of creator roles are cascading.</Text>\n            <Text fontFamily=\"Exo 2, sans-serif\">\n              This means the owners have all permissions of admins, admins have\n              all permissions of editors and editors have all permissions of\n              reviewers.\n            </Text>\n            <Text fontFamily=\"Exo 2, sans-serif\">\n              Owners can add and remove other owners, admins, editors and\n              reviewers. Admins can add and remove editors and reviewers.\n            </Text>\n          </Box>\n        </Box>\n      )}\n      <Grid\n        display={{ base: 'initial', md: 'grid' }}\n        gap={{ base: 3, md: 0 }}\n        id=\"creators\"\n        templateColumns={{\n          base: 'repeat(1, 1fr)',\n          md: '265px 265px 265px 265px',\n        }}\n        templateRows=\"auto\"\n        templateAreas={{\n          md: `\n            \"creators creators creators reviewers\"\n            \"owner q editors empty\"\n            \"empty1 admins empty2 empty2\"\n          `,\n        }}\n      >\n        {!isSmallScreen && (\n          <Box h=\"338px\" gridArea=\"creators\" pr={12}>\n            <Heading color=\"white\" fontSize={70} mb={6}>\n              Create & Manage\n            </Heading>\n            <Text color=\"gray.100\" display=\"flex\">\n              The permissions of creator roles are{' '}\n              <span style={{ color: '#03a5fc', marginLeft: 4 }}>cascading</span>\n              .\n            </Text>\n            <Text color=\"gray.100\" fontFamily=\"Exo 2, sans-serif\">\n              This means the owners have all permissions of admins, admins have\n              all permissions of editors and editors have all permissions of\n              reviewers.\n            </Text>\n            <Text color=\"gray.100\" fontFamily=\"Exo 2, sans-serif\">\n              Owners can add and remove other owners, admins, editors and\n              reviewers. Admins can add and remove editors and reviewers.\n            </Text>\n          </Box>\n        )}\n        <Box\n          dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n          bgImage=\"url(/Landing/Card4.svg)\"\n          bgPosition=\"center\"\n          bgSize=\"contain\"\n          backgroundRepeat=\"no-repeat\"\n          p={6}\n          textAlign=\"center\"\n          h=\"338px\"\n          gridArea=\"reviewers\"\n        >\n          <Heading color=\"white\" fontSize={{ base: 28, md: 40 }} mb={6}>\n            Reviewers\n          </Heading>\n          <Text\n            mb={4}\n            fontSize={{ base: 'lg', md: '3xl' }}\n            maxW={{ base: '220px', md: 'full' }}\n          >\n            ♢ can{' '}\n            <span style={{ color: '#03a5fc' }}>\n              accept or reject submitted proof\n            </span>{' '}\n            of quest completion\n          </Text>\n        </Box>\n\n        <Box\n          dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n          bgImage=\"url(/Landing/Card1.svg)\"\n          bgPosition=\"center\"\n          bgSize=\"contain\"\n          backgroundRepeat=\"no-repeat\"\n          p={6}\n          textAlign=\"center\"\n          h=\"338px\"\n          gridArea=\"owner\"\n        >\n          <Heading color=\"white\" fontSize={{ base: 28, md: 40 }} mb={3}>\n            Owner/s\n          </Heading>\n          <Text\n            fontFamily=\"Exo 2, sans-serif\"\n            mb={4}\n            fontSize={{ base: 'lg', md: '3xl' }}\n            maxW={{ base: '220px', md: 'full' }}\n          >\n            ♢ creator of the quest chain,{' '}\n            <span style={{ color: '#03a5fc' }}>has all permissions</span>\n          </Text>\n        </Box>\n        {!isSmallScreen && (\n          <Flex\n            dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n            p={6}\n            textAlign=\"center\"\n            h=\"338px\"\n            gridArea=\"q\"\n          >\n            <Image src=\"/Landing/group.svg\" alt=\"circles3\" mr={10} />\n          </Flex>\n        )}\n        <Box\n          dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n          bgImage=\"url(/Landing/Card3.svg)\"\n          bgPosition=\"center\"\n          bgSize=\"contain\"\n          backgroundRepeat=\"no-repeat\"\n          p={6}\n          textAlign=\"center\"\n          h=\"338px\"\n          gridArea=\"editors\"\n        >\n          <Heading color=\"white\" fontSize={{ base: 28, md: 40 }} mb={3}>\n            Editors\n          </Heading>\n          <Text\n            mb={4}\n            fontSize={{ base: 'lg', md: '3xl' }}\n            maxW={{ base: '220px', md: 'full' }}\n          >\n            ♢ can <span style={{ color: '#03a5fc' }}>create and edit</span>{' '}\n            quests. Can disable and enable them as well.\n          </Text>\n        </Box>\n        <Box gridArea=\"empty\" />\n\n        <Box gridArea=\"empty1\" />\n        <Box\n          dropShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\"\n          bgImage=\"url(/Landing/Card2.svg)\"\n          bgPosition=\"center\"\n          bgSize=\"contain\"\n          backgroundRepeat=\"no-repeat\"\n          p={6}\n          textAlign=\"center\"\n          h=\"338px\"\n          gridArea=\"admins\"\n        >\n          <Heading color=\"white\" fontSize={{ base: 28, md: 40 }} mb={3}>\n            Admins\n          </Heading>\n          <Text\n            mb={4}\n            fontSize={{ base: 'lg', md: '3xl' }}\n            maxW={{ base: '220px', md: 'full' }}\n          >\n            ♢ can <span style={{ color: '#03a5fc' }}> create and edit</span>{' '}\n            quest chains and quests\n          </Text>\n        </Box>\n        <Box gridArea=\"empty2\" />\n      </Grid>\n      <Flex w=\"full\" pos=\"relative\" justifyContent=\"center\" mt={40}>\n        {!isSmallScreen && (\n          <Image\n            src=\"/Landing/tokensId.svg\"\n            position=\"absolute\"\n            left=\"0\"\n            top=\"-400px\"\n            alt=\"turbine\"\n          />\n        )}\n\n        <Box\n          id=\"questers\"\n          background={{\n            base: 'none',\n            md: 'radial-gradient(100% 100% at 100% 71%, rgba(255, 255, 255, 0.14) 17%, rgba(255, 255, 255, 0) 100%)',\n          }}\n          backdropFilter={{ base: 'none', md: 'blur(20px)' }}\n          border={{ base: 'none', md: '1px solid #03a5fc' }}\n          borderRadius={{ base: 'none', md: '29.8157px' }}\n          w=\"80%\"\n          h={{ base: 'initial', md: '528px' }}\n          textAlign=\"center\"\n          p={{ base: 0, md: 24 }}\n          mb={{ base: 24, md: 0 }}\n        >\n          <Heading color=\"gray.100\" fontSize={{ base: 20, md: 50 }} mb={12}>\n            Team Buildingx\n          </Heading>\n          <Text color=\"gray.100\" mb={6} fontSize={{ base: 'lg', md: '3xl' }}>\n            ♢ can complete quest chains by submitting proof of completion for\n            quests\n          </Text>\n          <Text color=\"gray.100\" fontSize={{ base: 'lg', md: '3xl' }}>\n            ♢ able to mint an NFT after successfully completing all of the\n            quests of a quest chain\n          </Text>\n        </Box>\n      </Flex>\n    </VStack>\n);\n};\n\nexport default Creators","import React, {\n  useState, useEffect, useCallback, useRef,\n} from 'react'\nimport {\n  extractMessage, httpURL, toSpanList,\n} from '@/lib/helpers'\nimport { HiddenError, Limits, Maybe, TokenState } from '@/lib/types'\nimport { Header, MenuHeader, MenuLandingDesktop, Who, How, Creators, BuiltWith, Team, TokenFilterForm, TokensTable } from '@/components'\nimport { useWeb3 } from '@/lib/hooks'\nimport { Helmet } from 'react-helmet'\nimport {\n  useSearchParams, useNavigate, createSearchParams,\n} from 'react-router-dom'\nimport JSON5 from 'json5'\nimport { defaults } from '@/config'\nimport {\n  chakra, Button, Container, Flex, Text, Stack,\n} from '@chakra-ui/react'\n\nconst Home = () => {\n  const [tokens, setTokens] = useState<Array<TokenState | Error>>([])\n  const [query] = useSearchParams()\n  const [limit, setLimit] = useState(Number(query.get('limit') ?? defaults.limit))\n  const [offset, setOffset] = useState(Number(query.get('offset') ?? defaults.offset))\n  const [gatingVisible, setGatingVisible] = (\n    useState(query.get('gating') === 'true')\n  )\n  const visible = query.get('visible') ?? defaults.visible\n  const [visibleList, setVisibleList] = (\n    useState<Array<number | Limits>>(toSpanList(visible))\n  )\n  const navigate = useNavigate()\n  const { roContract, bitsLibrary } = useWeb3()\n  const setToken = useCallback(\n    (idx: number, info: Record<string, unknown>) => {\n      let token\n\n      setTokens((tkns: Array<TokenState>) => {\n        token = { ...tkns[idx], ...info };\n        return [\n          ...tkns.slice(0, idx),\n          ...Array.from({ length: idx - tkns.length }, () => ({})),\n          token,\n          ...tkns.slice(idx + 1),\n        ];\n      });\n      return token;\n    },\n    [setTokens],\n  )\n  const [typeCount, setTypeCount] = useState(null)\n  const [GATING_TYPE, setGATING_TYPE] = useState<Maybe<bigint>>(null)\n  const [DISABLING_TYPE, setDISABLING_TYPE] = useState<Maybe<bigint>>(null)\n  const [TYPE_WIDTH, setTYPE_WIDTH] = useState<Maybe<number>>(null)\n  const [TYPE_BOUNDARY, setTYPE_BOUNDARY] = (\n    useState<Maybe<number>>(null)\n  )\n\n  useEffect(() => {\n    const params = {};\n    if (visibleList?.length > 0) {\n      Object.assign(params, {\n        visible: visibleList.toString(),\n      });\n    } else {\n      Object.entries({ limit, offset, gating: gatingVisible }).forEach(\n        ([key, val]) => {\n          if (val !== defaults[key as keyof typeof defaults]) {\n            Object.assign(params, { [key]: val.toString() });\n          }\n        }\n      );\n    }\n\n    const options = { search: `?${createSearchParams(params)}` };\n    navigate(options, { replace: true });\n  }, [visibleList, limit, offset, gatingVisible, navigate]);\n\n  useEffect(() => {\n    if(roContract && bitsLibrary) {\n      roContract.typeSupply()\n      .then((supply: {\n        toBigInt: () => bigint // call-bind?\n      }) => supply.toBigInt())\n      .then(setTypeCount)\n      bitsLibrary.GATING_TYPE()\n      .then((type: { toBigInt: () => bigint }) => type.toBigInt())\n      .then(setGATING_TYPE)\n      bitsLibrary.DISABLING_TYPE()\n      .then((type: { toBigInt: () => bigint }) => type.toBigInt())\n      .then(setDISABLING_TYPE)\n      bitsLibrary.TYPE_WIDTH()\n      .then(setTYPE_WIDTH)\n      bitsLibrary.TYPE_BOUNDARY()\n      .then(setTYPE_BOUNDARY)\n    }\n  }, [roContract, bitsLibrary])\n\n  useEffect(() => {\n    setVisibleList(toSpanList(visible));\n  }, [visible]);\n\n  const controller = useRef(null)\n  const retrieve = useCallback(\n    async (tokens: Array<TokenState>) => {\n      controller.current?.abort()\n      controller.current = new AbortController()\n      setTokens([])\n      return (\n        await Promise.allSettled(\n          tokens.map(async (token, idx) => {\n            try {\n              const id: bigint = token.id ?? (\n                (await roContract.tokenByIndex(token.index)).toBigInt()\n              )\n\n              const type = (\n                id\n                & (\n                  (2n**BigInt(TYPE_WIDTH) - 1n) // TYPE_WIDTH 1s\n                  << BigInt(TYPE_BOUNDARY)\n                )\n              )\n              const gating = token.is?.gating ?? (\n                type === GATING_TYPE\n              )\n              const disabling = token.is?.disabling ?? (\n                type === (GATING_TYPE | DISABLING_TYPE)\n              )\n              const gates = token.gates ?? (gating || disabling ? (\n                Number((2n**32n - 1n) & id)\n              ) : ( null ))\n\n              const is: { [key: string]: unknown } = {\n                gating,\n                disabling,\n                hidden: (\n                  token.hidable != false\n                  && (gating || disabling)\n                  && !gatingVisible\n                ),\n              }\n\n              setToken(\n                idx,\n                {\n                  id: `0x${id.toString(16)}`,\n                  index: token.index,\n                  gates,\n                  is,\n                }\n              )\n\n              if(is.hidden) {\n                throw new HiddenError('Token is hidden.')\n              }\n\n              const responses = await Promise.allSettled([\n                (async () => {\n                  const uri = token.uri ?? await roContract.uri(id)\n                  if(uri === '') {\n                    throw new Error('No URI… Waiting for configuration…')\n                  }\n                  setToken(idx, { uri })\n                  const response = await fetch(\n                    httpURL(uri)!,\n                    { signal: controller.current.signal }\n                  )\n                  if(!response.ok) {\n                    throw new Error(`Request Status: ${response.status}`)\n                  }\n                  const data = await response.text()\n                  setToken(idx, { metadata: JSON5.parse(data) })\n                })(),\n                (async () => {\n                  const supply = await roContract.totalSupply(id)\n                  setToken(idx, { total: supply.toBigInt() })\n                })(),\n                (async () => {\n                  const max = await roContract.getMax(id)\n                  console.info({ max })\n                  setToken(idx, { max: max.toBigInt() })\n                })(),\n              ])\n\n              const [{ reason: error } = { reason: null }] = (\n                responses.filter((res) => (\n                  res.status === 'rejected'\n                )) as Array<{ reason: string }>\n              )\n              if(error) throw new Error(error)\n            } catch(error) {\n              if(!(error instanceof HiddenError)) {\n                console.error({ error })\n              }\n              if(!(error instanceof DOMException)) { // !aborted\n                return setToken(idx, {\n                  error: extractMessage(error)\n                })\n              }\n            }\n          })\n        )\n      )\n    },\n    [\n      GATING_TYPE, TYPE_BOUNDARY, TYPE_WIDTH, DISABLING_TYPE,\n      gatingVisible, roContract, setToken,\n    ],\n  )\n\n  useEffect(() => {\n    const load = async () => {\n      if(\n        roContract && bitsLibrary && typeCount != null\n        && TYPE_WIDTH != null && TYPE_BOUNDARY != null\n        && GATING_TYPE != null && DISABLING_TYPE != null\n      ) {\n        const tokens: Array<TokenState> = []\n        if(visibleList.some(() => true)) {\n          visibleList.forEach(\n            (elem) => {\n              let { high, low } = elem as Limits\n              const sorted = [low, high] = (\n                [low, high].sort((a, b) => (a - b))\n              )\n              if(sorted.some((elem) => elem == null)) {\n                [high, low] = [elem as number, elem as number]\n              }\n              tokens.push(...(\n                Array.from({ length: high - low + 1 })\n                .map((_, idx) => ({\n                  index: low + idx,\n                  hidable: false,\n                }))\n              ))\n            }\n          )\n        } else {\n          const start = offset < 0 ? Number(typeCount) + offset : offset\n          const count = Math.min(limit, Number(typeCount) - start)\n          tokens.push(\n            ...(\n              Array.from({ length: count })\n              .map((_, idx) => ({\n                index: start + idx + 1,\n              }))\n            )\n          )\n        }\n\n        await retrieve(tokens)\n      }\n    }\n    load()\n  }, [\n    visibleList, retrieve, roContract, bitsLibrary,\n    limit, offset, typeCount,\n    TYPE_WIDTH, TYPE_BOUNDARY, GATING_TYPE, DISABLING_TYPE,\n  ])\n\n  return (\n    <Container maxW=\"full\" id=\"back-to-top\">\n      <Helmet>\n        <title>SmartLaw Claims</title>\n        <meta name=\"description\" content=\"SmartLaw Claims Digital Assets\" />\n      </Helmet>\n\n      <chakra.header bg=\"black\">\n        <MenuLandingDesktop />\n\n        <Container>\n          <MenuHeader />\n          <Who />\n          <How />\n          <Creators />\n          <BuiltWith />\n          <Team />\n        </Container>\n      </chakra.header>\n\n      <chakra.main bg=\"black\">\n        <Header h=\"40vh\" />\n        <Stack align=\"center\">\n          <TokenFilterForm\n            flexGrow={1}\n            {...{\n              limit,\n              setLimit,\n              offset,\n              setOffset,\n              gatingVisible,\n              setGatingVisible,\n              visibleList,\n              setVisibleList,\n            }}\n          />\n          <TokensTable {...{ tokens }} />\n\n          <Flex justify=\"center\">\n            <Button\n              onClick={() => {\n                if (visibleList.length > 0) {\n                  const potentials = visibleList.map(\n                    (entry) => ((entry as Limits)?.high ?? entry) as number\n                  );\n                  const max = Math.max(...potentials);\n                  setVisibleList((vis) => [\n                    ...vis,\n                    { low: max, high: max + 10 },\n                  ]);\n                } else {\n                  setLimit((lim) => lim + 10);\n                }\n              }}\n            >\n              <Text\n                as=\"span\"\n                mr={1}\n                mt={-0.5}\n                fontSize=\"150%\"\n                fontWeight=\"bold\"\n              >\n                +\n              </Text>\n              10\n            </Button>\n            <Button ml={5} onClick={() => setOffset((off) => off + limit)}>\n              <Text\n                as=\"span\"\n                mr={0.75}\n                mt={-1}\n                fontSize=\"200%\"\n                fontWeight=\"bold\"\n              >\n                ↓\n              </Text>\n              {limit}\n            </Button>\n            <Button ml={5} onClick={() => setOffset((off) => off - limit)}>\n              <Text\n                as=\"span\"\n                mr={0.75}\n                mt={-1}\n                fontSize=\"200%\"\n                fontWeight=\"bold\"\n              >\n                ↑\n              </Text>\n              {limit}\n            </Button>\n            <Button\n              ml={5}\n              onClick={() => setOffset((off) => off - limit)}\n            >\n              <Text as=\"span\" mr={0.75} mt={-1} fontSize=\"200%\" fontWeight=\"bold\">↑</Text>{limit}\n            </Button>\n          </Flex>\n        </Stack>\n      </chakra.main>\n    </Container>\n  );\n};\n\nexport default Home;\n"],"names":["TokenFilterForm","limit","setLimit","offset","setOffset","gatingVisible","setGatingVisible","visibleList","setVisibleList","props","register","handleSubmit","control","setValue","useForm","useEffect","toString","submit","data","Number","toSpanList","visible","a","textDecoration","_jsx","_jsxs","mt","label","_after","content","mr","fontSize","field","onChange","value","ref","How","isSmallScreen","useBreakpointValue","base","lg","md","Image","textDecor","bg","color","Creators","marginLeft","Home","tokens","setTokens","useState","query","useSearchParams","get","defaults","navigate","useNavigate","roContract","bitsLibrary","useWeb3","setToken","useCallback","idx","info","token","tkns","slice","Array","from","length","typeCount","setTypeCount","GATING_TYPE","setGATING_TYPE","DISABLING_TYPE","setDISABLING_TYPE","TYPE_WIDTH","setTYPE_WIDTH","TYPE_BOUNDARY","setTYPE_BOUNDARY","params","Object","assign","entries","gating","forEach","key","val","options","search","createSearchParams","replace","typeSupply","then","supply","toBigInt","type","controller","useRef","retrieve","current","abort","AbortController","Promise","allSettled","map","id","tokenByIndex","index","BigInt","is","disabling","gates","hidden","hidable","HiddenError","responses","uri","Error","response","fetch","httpURL","signal","ok","status","text","metadata","JSON5","parse","totalSupply","total","max","getMax","console","reason","error","filter","res","DOMException","extractMessage","load","some","elem","high","low","sorted","sort","b","push","_","start","count","Math","min","Helmet","potentials","entry","vis","lim","off"],"mappings":"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"}