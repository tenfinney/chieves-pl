{"version":3,"file":"MaxForm.a004a72a.js","sources":["../../../../node_modules/@chakra-ui/select/dist/chakra-ui-select.esm.js","../../src/components/OptionsForm.tsx","../../src/components/URIForm.tsx","../../src/components/NFTForm.tsx","../../src/components/JSONForm.tsx","../../src/components/MaxForm.tsx"],"sourcesContent":["import { useFormControl } from '@chakra-ui/form-control';\nimport { forwardRef, chakra, useMultiStyleConfig, omitThemingProps, layoutPropNames } from '@chakra-ui/system';\nimport { cx, __DEV__, split, mergeWith, dataAttr } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"children\", \"placeholder\", \"className\"],\n    _excluded2 = [\"rootProps\", \"placeholder\", \"icon\", \"color\", \"height\", \"h\", \"minH\", \"minHeight\", \"iconColor\", \"iconSize\", \"isFullWidth\"],\n    _excluded3 = [\"children\"];\nvar SelectField = /*#__PURE__*/forwardRef(function (props, ref) {\n  var children = props.children,\n      placeholder = props.placeholder,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(chakra.select, _extends({}, rest, {\n    ref: ref,\n    className: cx(\"chakra-select\", className)\n  }), placeholder && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\"\n  }, placeholder), children);\n});\n\nif (__DEV__) {\n  SelectField.displayName = \"SelectField\";\n}\n\n/**\n * React component used to select one item from a list of options.\n */\nvar Select = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Select\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      rootProps = _omitThemingProps.rootProps,\n      placeholder = _omitThemingProps.placeholder,\n      icon = _omitThemingProps.icon,\n      color = _omitThemingProps.color,\n      height = _omitThemingProps.height,\n      h = _omitThemingProps.h,\n      minH = _omitThemingProps.minH,\n      minHeight = _omitThemingProps.minHeight,\n      iconColor = _omitThemingProps.iconColor,\n      iconSize = _omitThemingProps.iconSize;\n      _omitThemingProps.isFullWidth;\n      var rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  var _split = split(rest, layoutPropNames),\n      layoutProps = _split[0],\n      otherProps = _split[1];\n\n  var ownProps = useFormControl(otherProps);\n  var rootStyles = {\n    width: \"100%\",\n    height: \"fit-content\",\n    position: \"relative\",\n    color: color\n  };\n  var fieldStyles = mergeWith({\n    paddingEnd: \"2rem\"\n  }, styles.field, {\n    _focus: {\n      zIndex: \"unset\"\n    }\n  });\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: \"chakra-select__wrapper\",\n    __css: rootStyles\n  }, layoutProps, rootProps), /*#__PURE__*/React.createElement(SelectField, _extends({\n    ref: ref,\n    height: h != null ? h : height,\n    minH: minH != null ? minH : minHeight,\n    placeholder: placeholder\n  }, ownProps, {\n    __css: fieldStyles\n  }), props.children), /*#__PURE__*/React.createElement(SelectIcon, _extends({\n    \"data-disabled\": dataAttr(ownProps.disabled)\n  }, (iconColor || color) && {\n    color: iconColor || color\n  }, {\n    __css: styles.icon\n  }, iconSize && {\n    fontSize: iconSize\n  }), icon));\n});\n\nif (__DEV__) {\n  Select.displayName = \"Select\";\n}\n\nvar DefaultIcon = function DefaultIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n  }));\n};\nvar IconWrapper = chakra(\"div\", {\n  baseStyle: {\n    position: \"absolute\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  }\n});\n\nvar SelectIcon = function SelectIcon(props) {\n  var _props$children = props.children,\n      children = _props$children === void 0 ? /*#__PURE__*/React.createElement(DefaultIcon, null) : _props$children,\n      rest = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var clone = /*#__PURE__*/React.cloneElement(children, {\n    role: \"presentation\",\n    className: \"chakra-select__icon\",\n    focusable: false,\n    \"aria-hidden\": true,\n    // force icon to adhere to `IconWrapper` styles\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      color: \"currentColor\"\n    }\n  });\n  return /*#__PURE__*/React.createElement(IconWrapper, _extends({}, rest, {\n    className: \"chakra-select__icon-wrapper\"\n  }), /*#__PURE__*/React.isValidElement(children) ? clone : null);\n};\n\nif (__DEV__) {\n  SelectIcon.displayName = \"SelectIcon\";\n}\n\nexport { DefaultIcon, Select, SelectField };\n","/* eslint-disable indent */\nimport {\n  Box, Stack, Tab, TabList, TabPanel,\n  TabPanels, Tabs, useToast,\n} from '@chakra-ui/react'\nimport {\n  URIForm, JSONForm, NFTForm, MaxForm, SubmitButton,\n} from '@/components'\nimport {\n  ipfsify, isSet, isEmpty, regexify, extractMessage,\n} from '@/lib/helpers'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { useWeb3 } from '@/lib/hooks'\nimport { useForm } from 'react-hook-form'\nimport JSON5 from 'json5'\nimport {\n  ERC1155Metadata, FormValues, Maybe, OpenSeaAttribute, Attribute,\n} from '@/lib/types'\nimport { useNavigate } from 'react-router-dom'\nimport { useConfig } from '@/config'\n\nexport const OptionsForm: React.FC<{\n  purpose?: 'create' | 'update'\n  tokenId?: string\n  metadata?: Maybe<ERC1155Metadata>\n  metaURI?: string\n}> = ({\n  purpose = 'create', tokenId,\n}) => {\n  const { rwContract } = useWeb3()\n  const navigate = useNavigate()\n  const {\n    register, handleSubmit, watch, setValue,\n    formState: {\n      isSubmitting: processing, isDirty: dirty,\n    },\n  } = useForm()\n  const FIELD_FORM = 0\n  const URI_FORM = 1\n  const JSON5_FORM = 2\n  const [tab, setTab] = useState(FIELD_FORM)\n  const toast = useToast()\n  const { storage } = useConfig()\n  const metadata = watch('metadata')\n  const json5 = watch('json5')\n  const uri = watch('uri')\n\n  useEffect(() => {\n    setValue('uri', uri)\n  }, [uri, setValue])\n\n  const configure = useCallback(\n    async ({ metadata }: { metadata: string } ) => {\n      if(!rwContract) {\n        throw new Error(\n          `Cannot connect to contract to ${purpose} metadata.`\n        )\n      }\n      if(tokenId == null) {\n        throw new Error('Token id is unset.')\n      }\n\n      try {\n        const tx = await rwContract.setURI(\n          BigInt(tokenId), metadata\n        )\n        await tx.wait()\n\n        if(metadata !== '') {\n          navigate(`/view/${regexify(tokenId)}`)\n        }\n      } catch(error) {\n        console.error({ error })\n        toast({\n          title: 'Contract Error',\n          description: extractMessage(error),\n          status: 'error',\n          isClosable: true,\n          duration: 10000\n        })\n      }\n    },\n    [rwContract, tokenId, purpose, navigate, toast],\n  )\n\n  const buildMeta = async (data: FormValues) => {\n    const {\n      name, description, homepage, color,\n      images, animation, attributes,\n    } = data\n\n    const metadata: ERC1155Metadata = {\n      name: isSet(name) ? name : 'Untitled Token',\n      decimals: 0,\n    }\n\n    if(isSet(description)) {\n      metadata.description = description\n    }\n\n    if(isSet(homepage)) {\n      metadata.external_url = homepage\n    }\n\n    if(Array.isArray(images) && images.some((img) => img != null)) {\n      metadata.image = await ipfsify({ filesOrURL: images, storage })\n    } else if(!Array.isArray(images)) {\n      console.warn(`Unknown Image Type: ${typeof images}`)\n    }\n\n    if(animation instanceof File || typeof animation === 'string') {\n      metadata.animation_url = (await ipfsify({ filesOrURL: animation, storage }))[0]\n    } else if (animation != null) {\n      console.warn(`Unknown Animation Type: ${typeof animation}`)\n    }\n\n    if(color?.startsWith('#')) {\n      metadata.background_color = (\n        color.substring(1).toUpperCase()\n      )\n    }\n\n    if(isSet(attributes) && !isEmpty(attributes)) {\n      metadata.attributes = (\n        attributes.map(({ name, value, type }: Attribute) => {\n          const attr: OpenSeaAttribute = {\n            trait_type: name,\n            value,\n          }\n          // including a string type causes nothing to render\n          if (type !== 'string') {\n            attr.display_type = type\n          }\n          return attr\n        })\n      )\n    }\n\n    return metadata\n  }\n\n  const submit = async (data: FormValues) => {\n    try {\n      const name = `metadata.${(new Date()).toISOString()}.json`\n      let metadata = await (async () => {\n        switch(tab) {\n          case FIELD_FORM: {\n            const content = JSON.stringify(\n              await buildMeta(data), null, 2\n            )\n            return { name, content }\n          }\n          case URI_FORM: {\n            return data.uri ?? ''\n          }\n          case JSON5_FORM: {\n            if(!isSet(data.json5)) {\n              throw new Error('JSON5 isn’t set.')\n            }\n            const meta = JSON5.parse(data.json5)\n            return {\n              name,\n              content: JSON.stringify(meta, null, 2)\n            }\n          }\n          default: {\n            throw new Error(`Unknown Tab: ${tab}`)\n          }\n        }\n      })()\n      if(metadata == null) {\n        throw new Error(`Metadata is \\`${JSON5.stringify(metadata)}\\`.`)\n      } else if(metadata !== '') {\n        metadata = await ipfsify({ filesOrURL: metadata, storage })\n      }\n      await configure({ metadata })\n    } catch(error) {\n      console.error({ error })\n      toast({\n        title: 'Metadata Error',\n        description: extractMessage(error),\n        status: 'error',\n        isClosable: true,\n        duration: 10000\n      })\n    }\n  }\n\n  return (\n    <Stack align=\"center\">\n      <Box\n        as=\"form\" onSubmit={handleSubmit(submit)}\n        mt={10} w={['100%', 'min(85vw, 40em)']}\n        sx={{ a: { textDecoration: 'underline' } }}\n      >\n        <SubmitButton {...{ purpose, processing }} mb={3} />\n        <Tabs\n          mx={[0, 5]}\n          isFitted\n          variant=\"enclosed\"\n          onChange={async (idx: number) => {\n            switch(idx) {\n              case FIELD_FORM: {\n                let metadata\n                switch(tab) {\n                  case URI_FORM: {\n                    const res = await fetch(uri)\n                    metadata = JSON5.parse(\n                      await res.text()\n                    )\n                    break\n                  }\n                  case JSON5_FORM: {\n                    metadata = JSON5.parse(json5)\n                    break\n                  }\n                  await configure({ metadata })\n                }\n                break\n              }\n              case URI_FORM: {\n                break\n              }\n            }\n            setTab(idx)\n          }}\n        >\n          <TabList mb=\"1em\">\n            <Tab>Fields</Tab>\n            <Tab>URI</Tab>\n            <Tab>JSON5</Tab>\n          </TabList>\n          <TabPanels>\n            {[NFTForm, URIForm, JSONForm].map((Form, idx) => (\n              <TabPanel key={idx} p={0}>\n                <Form {...{\n                  register,\n                  watch,\n                  setValue,\n                  tokenId,\n                  metadata,\n                }} />\n              </TabPanel>\n            ))}\n          </TabPanels>\n        </Tabs>\n        <SubmitButton\n          {...{ purpose, processing }}\n          mb={3}\n          requireStorage={true}\n        />\n      </Box>\n      <MaxForm colorScheme=\"blue\" {...{ tokenId, purpose }}/>\n      <MaxForm\n        colorScheme=\"blue\"\n        perUser={true}\n        {...{ tokenId, purpose }}\n      />\n    </Stack>\n  )\n}\n\nexport default OptionsForm","import { Input, Stack } from '@chakra-ui/react'\nimport React from 'react'\nimport { FieldValues, UseFormRegister } from 'react-hook-form'\n\nexport const URIForm: React.FC<{\n  register: UseFormRegister<FieldValues>\n}> = ({\n  register\n}) => {\n  return (\n    <Input\n      placeholder=\"Enter a URI for the token…\"\n      {...register('uri')}\n    />\n  )\n}\n","/* eslint-disable indent */\nimport {\n  AddIcon, CloseIcon, ExternalLinkIcon\n} from '@chakra-ui/icons'\nimport {\n  Input, chakra, Select, Td, Tooltip, Button, Tr,\n  UnorderedList, ListItem, FormControl, Flex,\n  FormLabel, Text, Link, Image, Tabs,\n  TabList, Tab, TabPanels, TabPanel, Textarea,\n  Table, Thead, Th, Tbody, Radio, RadioGroup,\n  SimpleGrid, Stack, Center,\n} from '@chakra-ui/react'\nimport { nftBase } from '@/config'\nimport { httpURL, isEmpty, regexify } from '@/lib/helpers'\nimport {\n  Attribute, ERC1155Metadata, Maybe, OpenSeaAttribute,\n} from '@/lib/types'\nimport React, {\n  ChangeEvent, useCallback, useEffect, useRef, useState,\n} from 'react'\nimport Markdown from 'react-markdown'\nimport {\n  FieldValues, UseFormRegister, UseFormSetValue,\n  UseFormWatch,\n} from 'react-hook-form'\n\nconst AttrRow: React.FC<{\n  attributes: Array<Attribute>\n  setValue: (\n    UseFormSetValue<FieldValues>\n  )\n  index: number\n}> = ({ attributes = [], setValue: setFormValue, index }) => {\n  const { name = '', value = '', type = 'string' } = (\n    attributes[index]\n  )\n  const setter = useCallback(\n    (prop: string) => (\n      (value: string | number) => {\n        setFormValue(\n          'attributes',\n          [\n            ...attributes.slice(0, index),\n            { ...attributes[index], [prop]: value },\n            ...attributes.slice(index + 1)\n          ],\n        )\n      }\n    ), [setFormValue, index, attributes]\n  )\n  const setName = setter('name')\n  const setValue = setter('value')\n  const setType = setter('type')\n\n  return (\n    <Tr>\n      <Td><Input\n        value={name}\n        onChange={\n          ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n            setName(value)\n          }\n        }\n      /></Td>\n      <Td>{(() => {\n        switch (type) {\n          case 'date': {\n            return (\n              <Input\n                type=\"date\"\n                value={isEmpty(value) ? (\n                  ''\n                ) : (\n                  (new Date(value)).toISOString().split('T')[0]\n                )}\n                onChange={\n                  ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n                    setValue((new Date(value)).getTime())\n                  }\n                }\n              />\n            )\n          }\n          case 'string': {\n            return (\n              <Input\n                {...{ value }}\n                onChange={\n                  ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n                    setValue(value)\n                  }\n                }\n              />\n            )\n          }\n          default: {\n            return (\n              <Input\n                type=\"number\"\n                {...{ value }}\n                onChange={\n                  ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n                    setValue(value != null ? Number(value) : '')\n                  }\n                }\n              />\n            )\n          }\n        }\n      })()}</Td>\n      <Td>\n        <Select\n          value={type}\n          onChange={\n            ({ target: { value } }: ChangeEvent<HTMLSelectElement>) => {\n              setType(value)\n            }\n          }\n        >\n          <chakra.option value=\"string\">String</chakra.option>\n          <chakra.option value=\"date\">Date</chakra.option>\n          <chakra.option value=\"number\">Number</chakra.option>\n          <chakra.option value=\"boost_percentage\">\n            Boost Percentage\n          </chakra.option>\n          <chakra.option value=\"boost_number\">\n            Boost Number\n          </chakra.option>\n        </Select>\n      </Td>\n      <Td><Tooltip label=\"Remove\" hasArrow>\n        <Button\n          size=\"sm\" ml={2}\n          colorScheme=\"red\"\n          onClick={() => setFormValue(\n            'attributes',\n            [\n              ...attributes.slice(0, index),\n              ...attributes.slice(index + 1)\n            ]\n          )}\n        >\n          <CloseIcon />\n        </Button>\n      </Tooltip></Td>\n    </Tr>\n  )\n}\n\nexport const NFTForm: React.FC<{\n  purpose?: 'create' | 'update'\n  register: UseFormRegister<FieldValues>\n  watch: UseFormWatch<FieldValues>\n  setValue: UseFormSetValue<FieldValues>\n  tokenId?: string\n  metadata?: Maybe<ERC1155Metadata>\n}> = ({\n  // purpose = 'create',\n  register,\n  watch,\n  setValue,\n  tokenId = '𝘜𝘯𝘬𝘯𝘰𝘸𝘯',\n  metadata,\n}) => {\n  const [primaryImageIdx, setPrimaryImageIdx] = (\n    useState<number | undefined>(0)\n  )\n  const imageRef = useRef<HTMLInputElement>(null)\n  const {\n    homepage, description, color, images, attributes, animation,\n  } = watch()\n  // const [wearables, setWearables] = useState({})\n\n  useEffect(() => {\n    if (metadata) {\n      Object.entries({\n        name: null, description: null,\n        external_url: 'homepage',\n        animation_url: 'animation',\n      })\n      .forEach(([prop, name]) => {\n        setValue(name ?? prop, metadata[prop])\n      })\n\n      if(metadata.image) {\n        setValue('images', [metadata.image])\n      }\n\n      const { attributes: attrs } = metadata\n      if(!isEmpty(attrs)) {\n        setValue(\n          'attributes',\n          ((attrs ?? []).map(\n            ({\n              trait_type: name,\n              value,\n              display_type: type = 'string',\n            }: OpenSeaAttribute) => (\n              { name, value, type }\n            )\n          ))\n        )\n      }\n\n      // setWearables(metadata.properties?.wearables ?? {})\n\n      const bg = metadata.background_color\n      if(bg && !isEmpty(bg)) {\n        setValue('color', `#${bg}`)\n      }\n    }\n  }, [metadata, setValue])\n\n  useEffect(() => {\n    if(!homepage || isEmpty(homepage) || homepage.endsWith('𝘜𝘯𝘬𝘯𝘰𝘸𝘯')) {\n      setValue(\n        'homepage',\n        `${nftBase}/${regexify(tokenId)}`\n      )\n    }\n  }, [homepage, setValue, tokenId])\n\n  useEffect(() => {\n    if (window.location.hash) {\n      const elem = document.getElementById(\n        window.location.hash.substring(1)\n      )\n      window.scroll({\n        top: (elem?.offsetTop ?? 0) - 120,\n        behavior: 'smooth',\n      })\n    }\n  }, [])\n\n  const addImage = ({ target: { files } }: (\n    { target: { files: Maybe<FileList> } }\n  )) => {\n    if(files?.length && files?.length >= 1) {\n      setValue('images', [...(images ?? []), ...Array.from(files)])\n    }\n  }\n\n  const removeImage = (idx: number) => {\n    const replacement = [\n      ...images.slice(0, idx),\n      ...images.slice(idx + 1)\n    ]\n    setValue('images', replacement)\n    if(primaryImageIdx === idx) {\n      setPrimaryImageIdx(\n        replacement.length > 0 ? 0 : undefined\n      )\n    }\n  }\n\n  const configAnimation = (\n    (evt: ChangeEvent & { target: { files: Maybe<FileList> } }) => {\n      const { target: { files } } = evt\n      if (files?.length >= 1) {\n        setValue('animation', files[0])\n      } else {\n        setValue('animation', null)\n      }\n      evt.preventDefault()\n    }\n  )\n\n  const addRow = () => {\n    setValue('attributes', [...(attributes ?? []), {}])\n  }\n\n  return (\n    <UnorderedList listStyleType=\"none\">\n      <ListItem>\n        <FormControl mt={3}>\n          <Flex direction={{ base: 'column', md: 'row' }}>\n            <FormLabel _after={{ content: '\":\"' }}>\n              Name\n            </FormLabel>\n            <Input\n              autoFocus\n              ml={{ base: 0, md: 4 }}\n              {...register('name')}\n            />\n          </Flex>\n        </FormControl>\n      </ListItem>\n      <ListItem>\n        <FormControl mt={3}>\n          <Flex direction={{ base: 'column', md: 'row' }}>\n            <FormLabel _after={{ content: '\":\"' }}>\n              Images\n            </FormLabel>\n            <Input\n              type=\"file\"\n              accept=\"image/*\"\n              ref={imageRef}\n              onChange={addImage}\n              display=\"none\"\n              multiple\n            />\n          </Flex>\n          {images?.length > 0 && (\n            <RadioGroup\n              value={primaryImageIdx}\n              onChange={(value: string) => {\n                setPrimaryImageIdx(Number(value))\n              }}\n            >\n              <SimpleGrid columns={3} templateColumns=\"6rem 1fr 2rem\">\n                {images.map((image: File | string, idx: number) => {\n                  const name = (\n                    (image as File)?.name\n                    ?? (image as string)?.replace(/^.*\\//g, '')\n                  )\n\n                  return (\n                    <React.Fragment key={idx}>\n                      <Flex w={16}>\n                        <Radio value={idx}>Display Image</Radio>\n                      </Flex>\n                      <Flex\n                        justify=\"center\"\n                        bg={idx === primaryImageIdx ? color : 'transparent'}\n                      >\n                        <Tooltip label={name} hasArrow>\n                          <Image\n                            alt={name}\n                            src={\n                              (image instanceof File) ? (\n                                URL.createObjectURL(image)\n                              ) : (\n                                httpURL(image) ?? undefined\n                              )\n                            }\n                            maxH={60} mt={0}\n                            onClick={() => imageRef.current?.click()}\n                          />\n                        </Tooltip>\n                      </Flex>\n                      <Center>\n                        <Button\n                          size=\"xs\"\n                          colorScheme=\"red\"\n                          onClick={() => removeImage(idx)}\n                        >\n                          <CloseIcon/>\n                        </Button>\n                      </Center>\n                    </React.Fragment>\n                  )\n                })}\n              </SimpleGrid>\n            </RadioGroup>\n          )}\n          <Button\n            w=\"full\" mt={3}\n            colorScheme=\"teal\"\n            onClick={() => imageRef.current?.click()}\n          >\n            <AddIcon/>\n          </Button>\n        </FormControl>\n      </ListItem>\n      <ListItem>\n        <FormControl mt={3}>\n          <Flex direction={{ base: 'column', md: 'row' }}>\n            <FormLabel _after={{ content: '\":\"' }}>\n              Background\n            </FormLabel>\n            <Input\n              type=\"color\"\n              {...register('color')}\n            />\n          </Flex>\n        </FormControl>\n      </ListItem>\n      <ListItem>\n        <FormControl mt={3}>\n          <Flex direction={{ base: 'column', md: 'row' }}>\n            <FormLabel _after={{ content: '\":\"' }}>\n              Homepage\n            </FormLabel>\n            <Flex grow={1}>\n              <Input\n                {...register('homepage')}\n              />\n              {homepage?.length > 0 && (\n                <Link ml={2} href={homepage} isExternal>\n                  <ExternalLinkIcon />\n                </Link>\n              )}\n            </Flex>\n          </Flex>\n        </FormControl>\n      </ListItem>\n      <ListItem>\n        <FormControl mt={3}>\n          <Stack>\n            <FormLabel _after={{ content: '\":\"' }}>\n              Description\n            </FormLabel>\n            <Tabs ml={5} isFitted variant=\"enclosed\">\n              <TabList mb=\"1em\">\n                <Tab>Markdown</Tab>\n                <Tab>Preview</Tab>\n              </TabList>\n              <TabPanels>\n                <TabPanel>\n                  <Textarea\n                    placeholder=\"Enter a markdown formatted description.\"\n                    minH={32}\n                    {...register('description')}\n                  />\n                </TabPanel>\n                <TabPanel>\n                  <Markdown>\n                    {description}\n                  </Markdown>\n                </TabPanel>\n              </TabPanels>\n            </Tabs>\n          </Stack>\n        </FormControl>\n      </ListItem>\n      <ListItem>\n        <FormControl mt={3}>\n          <Flex direction={{ base: 'column', md: 'row' }}>\n            <FormLabel _after={{ content: '\":\"' }}>\n              Animation\n            </FormLabel>\n            {typeof animation === 'string' && (\n              <Flex>\n                <Text>\n                  {decodeURI(animation.replace(\n                    /^ipfs:\\/\\/[^/]+\\//, ''\n                  ))}\n                </Text>\n                {/* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */}\n                <Link href={httpURL(animation)!} ml={3} mb={5} isExternal>\n                  <ExternalLinkIcon />\n                </Link>\n              </Flex>\n            )}\n            {(\n              typeof File !== 'undefined'\n              && animation instanceof File\n              && (\n                <Flex>\n                  <Text>{animation.name}</Text>\n                  <Link\n                    ml={3} mb={5}\n                    isExternal\n                    href={URL.createObjectURL(animation)}\n                  >\n                    <ExternalLinkIcon />\n                  </Link>\n                </Flex>\n              )\n            )}\n            <Input\n              type=\"file\"\n              accept=\"model/gltf+json,model/gltf-binary,video/*,.gltf,.glb\"\n              onChange={configAnimation}\n              h=\"auto\"\n            />\n          </Flex>\n        </FormControl>\n      </ListItem>\n      <ListItem id=\"attributes\">\n        <FormControl mt={3}>\n          <Stack>\n            <Flex>\n              <FormLabel _after={{ content: '\":\"' }}>\n                Attributes\n              </FormLabel>\n              <Button\n                ml={2} size=\"xs\"\n                onClick={addRow}\n                colorScheme=\"teal\"\n              >\n                <AddIcon />\n              </Button>\n            </Flex>\n            {attributes?.length > 0 && (\n              <Table\n                sx={{ 'th, td': {\n                  textAlign: 'center',\n                  px: 2,\n                } }}\n              >\n                <Thead>\n                  <Tr>\n                    <Th>Name</Th>\n                    <Th>Value</Th>\n                    <Th>Type</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {attributes.map((_: Attribute, index: number) => (\n                    <AttrRow\n                      key={index}\n                      {...{\n                        attributes, setValue, index,\n                      }}\n                    />\n                  ))}\n                </Tbody>\n              </Table>\n            )}\n          </Stack>\n        </FormControl>\n      </ListItem>\n    </UnorderedList>\n  )\n}\n\nexport default NFTForm","import { Textarea } from '@chakra-ui/react'\nimport React from 'react'\nimport { FieldValues, UseFormRegister } from 'react-hook-form'\n\nexport const JSONForm: React.FC<{\n  register: UseFormRegister<FieldValues>\n}> = ({\n  register\n}) => (\n   <Textarea\n    placeholder=\"Enter JSON5 token metadata…\"\n    h=\"75vh\"\n    {...register('json5')}\n   >\n   </Textarea>\n)\n\nexport default JSONForm","import { useWeb3 } from '@/lib/hooks'\nimport { Maybe } from '@/lib/types'\nimport {\n  Flex, FormControl, FormLabel, Input,\n  Spinner, Text, useToast\n} from '@chakra-ui/react'\nimport React, {\n  ChangeEvent, FormEvent, useCallback, useEffect, useState\n} from 'react'\nimport { SubmitButton } from './SubmitButton'\nimport { ButtonProps } from '@chakra-ui/react'\nimport { extractMessage } from '@/lib/helpers'\n\nexport const MaxForm = (\n  { tokenId, purpose = 'create', perUser = false, ...props }:\n  ButtonProps & {\n    tokenId?: string\n    perUser?: boolean\n    purpose: string\n  }\n) => {\n  const [max, setMax] = useState<Maybe<string>>(null)\n  const [processing, setProcessing] = useState(false)\n  const { roContract, rwContract } = useWeb3()\n  const toast = useToast()\n\n  useEffect(() => {\n    const load = async () => {\n      if(roContract && tokenId) {\n        if(perUser){\n          setMax(await roContract.getPerUserMax(BigInt(tokenId)))\n        }else{\n          setMax(await roContract.getMax(BigInt(tokenId)))\n        }\n      }\n    }\n    load()\n  }, [tokenId, roContract])\n  \n  const save = useCallback(async (evt: FormEvent) => {\n    evt.preventDefault()\n\n    if (!rwContract) {\n      throw new Error('`rwContract` is not defined')\n    }\n    try {\n      setProcessing(true)\n      let tx\n      if (perUser){\n        tx = await rwContract.setPerUserMax(tokenId, max)\n      }else{\n        tx = await rwContract.setMax(tokenId, max)\n      }\n        await tx.wait()\n    } catch(error) {\n      toast({\n        title: 'Contract Error',\n        description: extractMessage(error),\n        status: 'error',\n        isClosable: true,\n        duration: 10000\n      })\n    } finally {\n      setProcessing(false)\n    }\n  }, [max, rwContract, toast, tokenId])\n\n  return (\n    <Flex \n      as=\"form\"\n      onSubmit={save}\n      alignItems=\"flex-end\"\n    >\n      <FormControl display=\"flex\" w=\"auto\" alignItems=\"baseline\" mt={3}>\n        <FormLabel whiteSpace=\"pre\" _after={{ content: '\":\"' }}>\n          {perUser && 'Per User'} Maximum Mintable\n        </FormLabel>\n        {max == null ? (\n          <Flex>\n            <Spinner/>\n            <Text ml={3}>Loading…</Text>\n          </Flex>\n        ) : (\n          <Input\n            type=\"number\"\n            mx={{ base: 0, md: 4 }}\n            w={32}\n            textAlign=\"center\"\n            value={max}\n            onChange={({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n              setMax(value.trim().replace(/^0+([^0])/, '$1'))\n            }}\n          />\n        )}  \n      </FormControl>\n      <SubmitButton\n        label={`Set ${perUser ? 'Per User': ''} Max`}\n        disabled={!/^-?\\d+$/.test(max)}\n        {...{ purpose, processing, ...props }}\n      />\n    </Flex>\n)\n}"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded","_excluded2","_excluded3","SelectField","forwardRef","props","ref","children","placeholder","className","rest","React","chakra","select","cx","_jsx","Select","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","rootProps","icon","color","height","h","minH","minHeight","iconColor","iconSize","isFullWidth","_split","split","layoutPropNames","layoutProps","otherProps","ownProps","useFormControl","rootStyles","width","position","fieldStyles","mergeWith","paddingEnd","field","_focus","zIndex","div","__css","dataAttr","disabled","fontSize","DefaultIcon","IconWrapper","baseStyle","display","alignItems","justifyContent","pointerEvents","top","transform","SelectIcon","_props$children","clone","role","focusable","style","OptionsForm","purpose","tokenId","rwContract","useWeb3","navigate","useNavigate","register","handleSubmit","watch","setValue","formState","isSubmitting","processing","isDirty","dirty","useForm","FIELD_FORM","URI_FORM","JSON5_FORM","tab","setTab","useState","toast","useToast","storage","useConfig","metadata","json5","uri","useEffect","configure","useCallback","Error","tx","setURI","BigInt","wait","regexify","error","console","title","description","extractMessage","status","isClosable","duration","buildMeta","data","name","homepage","images","animation","attributes","isSet","decimals","external_url","Array","isArray","some","img","image","ipfsify","filesOrURL","warn","File","animation_url","startsWith","background_color","substring","toUpperCase","isEmpty","map","value","type","attr","trait_type","display_type","submit","Date","toISOString","content","JSON","stringify","meta","JSON5","parse","_jsxs","a","textDecoration","idx","res","fetch","text","NFTForm","URIForm","JSONForm","Form","AttrRow","setFormValue","index","setter","prop","slice","setName","setType","getTime","Number","primaryImageIdx","setPrimaryImageIdx","imageRef","useRef","entries","forEach","attrs","bg","endsWith","nftBase","window","location","hash","elem","document","getElementById","scroll","offsetTop","behavior","addImage","files","from","removeImage","replacement","undefined","configAnimation","evt","preventDefault","addRow","base","md","replace","Image","URL","createObjectURL","httpURL","current","click","Markdown","decodeURI","textAlign","px","_","MaxForm","perUser","max","setMax","setProcessing","roContract","load","getPerUserMax","getMax","save","setPerUserMax","trim","test"],"mappings":"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"}