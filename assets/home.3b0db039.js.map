{"version":3,"file":"home.3b0db039.js","sources":["../../../../node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js","../../src/lib/types.ts","../../src/components/Header.tsx","../../src/components/TokenFilterForm.tsx","../../src/components/MenuLandingDesktop.tsx","../../src/pages/home.tsx"],"sourcesContent":["import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\n\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nfunction useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n\n  var _React$useState = React.useState(queries.map(function (query) {\n    return isSupported ? !!env.window.matchMedia(query).matches : false;\n  })),\n      matches = _React$useState[0],\n      setMatches = _React$useState[1]; // Specifying matches in the dependency list will cause the event listeners\n  // to unload and then load each time the dependency changes. This causes\n  // Media Query Events to be missed. The event listeners should only be unloaded\n  // when the component unloads.\n\n\n  useSafeLayoutEffect(function () {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    var listenerList = mediaQueryList.map(function (_, index) {\n      var listener = function listener(mqlEvent) {\n        var queryIndex = mediaQueryList.findIndex(function (mediaQuery) {\n          return mediaQuery.media === mqlEvent.media;\n        }); // As the event listener is on the media query list, any time the\n        // listener is called, we know there is a change. There's no need\n        // to compare the previous matches with current. Using\n        // setMatches(matches => {...}) provides access to the current matches\n        // state.  Trying to access matches outside the setMatches function\n        // would provide data from the the time of instantiation (stale).\n\n        setMatches(function (matches) {\n          var currentMatches = matches.map(function (x) {\n            return x;\n          });\n          currentMatches[queryIndex] = mqlEvent.matches;\n          return currentMatches;\n        });\n      }; // Listening to the 'change' event on the Media Query List Object\n      // is more performant as the callback is only invoked when a specified\n      // media query is matched. Using addEventListener on the window object\n      // to listen for the resize event will call the callback on every\n      // viewport resize.\n\n\n      if (typeof mediaQueryList[index].addEventListener === \"function\") {\n        mediaQueryList[index].addEventListener(\"change\", listener);\n      } else {\n        mediaQueryList[index].addListener(listener);\n      }\n\n      return listener;\n    });\n    return function () {\n      mediaQueryList.forEach(function (_, index) {\n        if (typeof mediaQueryList[index].removeEventListener === \"function\") {\n          mediaQueryList[index].removeEventListener(\"change\", listenerList[index]);\n        } else {\n          mediaQueryList[index].removeListener(listenerList[index]);\n        }\n      });\n    };\n  }, []);\n  return matches;\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n      hide = props.hide,\n      children = props.children;\n\n  var _useMediaQuery = useMediaQuery(breakpoint),\n      show = _useMediaQuery[0];\n\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\n\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\n\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\n\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\n\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\n\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n      breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n      below = props.below,\n      above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n\n  return query;\n}\n\n/**\n * React hook used to get the user's animation preference.\n */\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n      prefersReducedMotion = _useMediaQuery[0];\n\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n      isLight = _useMediaQuery2[0],\n      isDark = _useMediaQuery2[1];\n\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\n\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param [defaultBreakpoint=\"base\"] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\n\nfunction useBreakpoint(defaultBreakpoint // default value ensures SSR+CSR consistency\n) {\n  if (defaultBreakpoint === void 0) {\n    defaultBreakpoint = \"base\";\n  }\n\n  var _useTheme = useTheme(),\n      __breakpoints = _useTheme.__breakpoints;\n\n  var env = useEnvironment();\n  var queries = React__default.useMemo(function () {\n    var _breakpoints$details;\n\n    return (_breakpoints$details = __breakpoints == null ? void 0 : __breakpoints.details.map(function (_ref) {\n      var minMaxQuery = _ref.minMaxQuery,\n          breakpoint = _ref.breakpoint;\n      return {\n        breakpoint: breakpoint,\n        query: minMaxQuery.replace(\"@media screen and \", \"\")\n      };\n    })) != null ? _breakpoints$details : [];\n  }, [__breakpoints]);\n\n  var _React$useState = React__default.useState(function () {\n    if (defaultBreakpoint) {\n      // use default breakpoint to ensure render consistency in SSR + CSR environments\n      // => first render on the client has to match the render on the server\n      var fallbackBreakpointDetail = queries.find(function (_ref2) {\n        var breakpoint = _ref2.breakpoint;\n        return breakpoint === defaultBreakpoint;\n      });\n\n      if (fallbackBreakpointDetail) {\n        return fallbackBreakpointDetail.breakpoint;\n      }\n    }\n\n    if (env.window.matchMedia) {\n      // set correct breakpoint on first render if no default breakpoint was provided\n      var matchingBreakpointDetail = queries.find(function (_ref3) {\n        var query = _ref3.query;\n        return env.window.matchMedia(query).matches;\n      });\n\n      if (matchingBreakpointDetail) {\n        return matchingBreakpointDetail.breakpoint;\n      }\n    }\n\n    return undefined;\n  }),\n      currentBreakpoint = _React$useState[0],\n      setCurrentBreakpoint = _React$useState[1];\n\n  React__default.useEffect(function () {\n    var allUnregisterFns = queries.map(function (_ref4) {\n      var breakpoint = _ref4.breakpoint,\n          query = _ref4.query;\n      var mediaQueryList = env.window.matchMedia(query);\n\n      if (mediaQueryList.matches) {\n        setCurrentBreakpoint(breakpoint);\n      }\n\n      var handleChange = function handleChange(ev) {\n        if (ev.matches) {\n          setCurrentBreakpoint(breakpoint);\n        }\n      }; // add media query listener\n\n\n      if (typeof mediaQueryList.addEventListener === \"function\") {\n        mediaQueryList.addEventListener(\"change\", handleChange);\n      } else {\n        mediaQueryList.addListener(handleChange);\n      } // return unregister fn\n\n\n      return function () {\n        if (typeof mediaQueryList.removeEventListener === \"function\") {\n          mediaQueryList.removeEventListener(\"change\", handleChange);\n        } else {\n          mediaQueryList.removeListener(handleChange);\n        }\n      };\n    });\n    return function () {\n      allUnregisterFns.forEach(function (unregister) {\n        return unregister();\n      });\n    };\n  }, [queries, __breakpoints, env.window]);\n  return currentBreakpoint;\n}\n\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n\n  return undefined;\n}\n\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @param values\n * @param [defaultBreakpoint] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var _theme$__breakpoints;\n\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the sorted breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Array.from(((_theme$__breakpoints = theme.__breakpoints) == null ? void 0 : _theme$__breakpoints.keys) || []);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };\n","import { ExternalProvider } from '@ethersproject/providers'\n\nexport type Maybe<T> = T | null\nexport type Values<T> = T[keyof T]\nexport type Optional<T> = T | undefined\n\n// declare global {\n//   interface Window {\n//     ethereum: ExternalProvider\n//   }\n// }\n\nexport type NetworkInfo = {\n  [chainName: string]: {\n    chainId: number;\n    name: string;\n    label: string;\n    symbol: string;\n    explorer: Maybe<string>;\n    rpc: string;\n  }\n}\n\nexport type OpenSeaAttribute = {\n  trait_type?: string\n  value?: string | number\n  display_type?: string\n}\n\nexport type Attribute = {\n  name?: string\n  value?: string | number\n  type?: string\n}\n\nexport type ERC1155Metadata = {\n  name?: string\n  description?: string\n  decimals?: number\n  attributes?: Array<Attribute>\n  properties?: { wearables?: Record<string, string> }\n  external_url?: string\n  image?: string\n  animation_url?: string\n  background_color?: string\n\n} & {\n  [key: string]: string | number\n}\n\nexport type CodedError = Error & { code: number }\n\nexport type TokenState = {\n  id?: string\n  hidable?: boolean\n  is?: Record<string, unknown>\n  gates?: Maybe<number>\n  index?: number\n  uri?: string\n  metadata?: ERC1155Metadata\n  total?: number\n  max?: number\n  error?: string\n}\n\nexport type MetaMaskError = Error & {\n  data: {\n    code: number\n    data: string\n    message: string\n  }\n}\n\nexport type NestedError = {\n  error: Error\n}\n\nexport type NamedString = {\n  name: string\n  content: string\n}\n\nexport type Fileish = (\n  File | string | NamedString\n)\n\nexport type FileListish = (\n  Fileish | Array<File | string>\n)\n\nexport type FormValues = {\n  name?: string\n  description?: string\n  homepage?: string\n  images?: FileListish\n  color?: string\n  animation?: Fileish\n  attributes?: Array<Attribute>\n  uri?: string\n  json5?: string\n  maximum?: number\n}\n\nexport type Limits = {\n  high?: number\n  low?: number\n}\n\nexport type SpanList = Array<number | Limits>\n\nexport class HiddenError extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = 'HiddenError'\n  }\n}\n","import {\n  Flex,\n  FlexProps,\n  Tooltip,\n  Heading,\n  Image,\n  Text,\n  useBreakpointValue,\n} from '@chakra-ui/react';\nimport { LinkedSVG } from '@/components'\n\n\nimport React from 'react'\n\nexport const Header: React.FC<\n  FlexProps & { links?: Record<'cup' | 'sign', string> }\n> = ({ links = { cup: '/new', sign: '/' }, ...props }) => (\n  <Flex  grow={1} {...props}\n  >\n    \n    <Tooltip hasArrow label=\"Create A New Token Type\">\n      <LinkedSVG\n        w=\"min(40%, 75vh)\" h=\"auto\"\n        svg=\"Circles.png\"\n        href={links.cup}\n        title=\"Create a new Token\"\n      />\n    </Tooltip>\n    <Tooltip hasArrow label=\"List Existing Tokens\">\n      <LinkedSVG\n        w=\"75%\" h=\"auto\"\n        ml=\"-15%\"\n        svg=\"Circles2.png\"\n        href={links.sign}\n        title=\"View Existing Tokens\"\n      />\n    </Tooltip>\n  </Flex>\n  \n)\n\nexport default Header","import { toSpanList } from '@/lib/helpers'\nimport { Limits } from '@/lib/types'\nimport {\n  chakra, Button, Checkbox, Flex, FormControl,\n  FormLabel, Input, Stack, type FlexProps, Text,\n} from '@chakra-ui/react'\nimport React, { SetStateAction, useEffect, useState } from 'react'\nimport { Controller, useForm } from 'react-hook-form'\nimport { Header } from 'components'\n// import { Header0 } from 'components'\n// import { Header1 } from 'components'\n// import { Header2 } from 'components'\n// import { Header3 } from 'components'\n// import { HeaderLogo } from 'components'\n\nexport type FilterValues = {\n  limit: number\n  offset: number\n  visible: string\n  gatingVisible: boolean\n}\n\nexport const TokenFilterForm: React.FC<{\n  limit: number\n  setLimit: (limit: SetStateAction<number>) => void\n  offset: number\n  setOffset: (offset: SetStateAction<number>) => void\n  gatingVisible: boolean\n  setGatingVisible: (gatingVisible: SetStateAction<boolean>) => void\n  setVisibleList: (visible: SetStateAction<Array<number | Limits>>) => (\n    void\n  )\n  visibleList: Array<number | Limits> \n} & FlexProps> = ({\n  limit = 10, setLimit, offset = 0, setOffset,\n  gatingVisible = false, setGatingVisible,\n  visibleList, setVisibleList, ...props\n}) => {\n  const {\n    register, handleSubmit, control, setValue,\n  } = useForm<FilterValues>()\n\n  useEffect(() => {\n    setValue('limit', limit)\n    setValue('offset', offset)\n    setValue('visible', visibleList.toString())\n    setValue('gatingVisible', gatingVisible)\n  }, [limit, offset, visibleList, gatingVisible, setValue])\n\n  const submit = async (data: FilterValues) => {\n    setLimit(Number(data.limit))\n    setOffset(Number(data.offset))\n    setGatingVisible(data.gatingVisible)\n    setVisibleList(toSpanList(data.visible))\n  }\n\n  return (\n    <Stack align=\"center\">\n\n    <Flex\n      as=\"form\" onSubmit={handleSubmit(submit)}\n      mt={10} mb=\"1rem\" maxW={['100%', 'min(85vw, 50em)']}\n      direction={['column', 'row']}\n      sx={{ a: { textDecoration: 'underline' } }}\n      {...props}\n    >\n            {/* <Header1/>\n      <HeaderLogo/>\n      <Header2/>\n      <Header3/>\n      <Header1/> */}\n      <Text fontSize=\"24pt\" mt=\"1rem\" fontWeight=\"bold\">\n        ERC-1155 Access and Achievment Token Minting\n      </Text>\n      <Text ml=\"20px\" fontSize=\"18pt\" fontWeight=\"bold\">\n        Digital Tokens on the Polygon EVM Blockchain using IPFS\n      </Text>\n      <Text ml=\"50px\" fontSize=\"12pt\" fontWeight=\"regular\">\n        Each token reservation mints one (1) master token and up to (11) role\n        tokens. Superuser, Minter, Caster, Transferer, Configurer, Maintainer, Creator, Limiter, Burner, Destroyer, and/or Oracle can be automatically minted with\n        the master token and can be assigned to third-parties for\n        administration.\n      </Text>\n      <Stack\n        flexGrow={1}\n        sx={{\n          '&>*:not(style)~*:not(style)': { mt: 0.5 },\n          label: {\n            _after: { content: '\":\"' },\n            mt: 1.5,\n            mr: 1,\n            fontSize: '110%',\n          },\n        }}\n      >\n        <FormControl>\n          <Flex align=\"center\">\n            <FormLabel>Limit</FormLabel>\n            <Input\n              type=\"number\"\n              placeholder=\"Number of tokens to display.\"\n              {...register('limit')}\n            />\n          </Flex>\n        </FormControl>\n        <FormControl>\n          <Flex align=\"center\">\n            <FormLabel>Offset</FormLabel>\n            <Input\n              type=\"number\"\n              placeholder=\"Number of tokens offset from Token 1.\"\n              {...register('offset')}\n            />\n          </Flex>\n        </FormControl>\n        <Text textAlign=\"center\">or</Text>\n        <FormControl>\n          <Flex align=\"center\">\n            <FormLabel>Visible&#xA0;List</FormLabel>\n            <Input\n              placeholder=\"Comma, space and dash separated list of indices.\"\n              {...register('visible')}\n            />\n          </Flex>\n        </FormControl>\n      </Stack>\n      <Stack ml={3}>\n        <FormControl>\n          <Flex align=\"center\" my={1}>\n            <Controller\n              control={control}\n              name=\"gatingVisible\"\n              defaultValue={gatingVisible}\n              render={({ field: { onChange, value, ref } }) => (\n                <Checkbox\n                  onChange={onChange}\n                  ref={ref}\n                  isChecked={value}\n                >\n                  View<chakra.br/>Permission<chakra.br/>Tokens\n                </Checkbox>\n              )}\n            />\n          </Flex>\n        </FormControl>\n\n        <Button type=\"submit\" colorScheme=\"purple\">\n          View\n        </Button>\n      </Stack>\n    </Flex>\n      </Stack>\n\n  )\n}\n\nexport default TokenFilterForm\n","import {\n  Link as ChakraLink,\n  Button,\n  Box,\n  Flex,\n  Grid,\n  Heading,\n  Image,\n  Text,\n  useBreakpointValue,\n  HStack,\n  VStack,\n} from '@chakra-ui/react';\nimport NextLink from 'next/link';\nimport { Link } from 'react-scroll';\n\n\nimport React from 'react'\n\n// font-family: 'Anek Devanagari, sans-serif';\n// font-family: 'Anek Latin, sans-serif';\n// font-family: 'Anton, sans-serif';\n// font-family: 'Arizonia, cursive';\n// font-family: 'Encode Sans Semi Condensed, sans-serif';\n// font-family: \"Exo 2, sans-serif\";\n// font-family: 'Georama, sans-serif';\n// font-family: 'League Gothic, sans-serif';\n// font-family: 'Orbitron, sans-serif';\n// font-family: 'Oxanium, cursive';\n// font-family: 'Russo One, sans-serif';\n\n\n\nexport const MenuLandingDesktop: React.FC = () => {\n  const isSmallScreen = useBreakpointValue({ base: true, lg: false });\n\n  return (    \n    <HStack>\n\n      \n    {/* <NextLink href=\"/new\" passHref>\n      <ChakraLink display=\"block\" _hover={{}}>\n        <Button fontSize={20} cursor=\"pointer\" fontFamily=\"headingLight\">\n          Enter App\n        </Button>\n      </ChakraLink>\n    </NextLink> */}\n\n\n\n\n<Link activeClass=\"active\" to=\"how\" spy={true} smooth={true} duration={500}>\n      <Text fontSize={20} ml={3} color=\"white\" cursor=\"pointer\" fontFamily=\"Exo 2, sans-serif\">\n        How to\n      </Text>\n    </Link>\n    \n\n\n      <Link\n      activeClass=\"active\"\n      to=\"go-to-app\"\n      spy={true}\n      smooth={true}\n      duration={500}\n    >\n      <Text fontSize={20} ml={3} color=\"white\" cursor=\"pointer\" fontFamily=\"Exo 2, sans-serif\">\n        Query\n      </Text>\n    </Link>\n\n\n    <Link\n      activeClass=\"active\"\n      to=\"go-to-app\"\n      spy={true}\n      smooth={true}\n      duration={500}\n    >\n      <Text fontSize={20} ml={3} color=\"white\" cursor=\"pointer\" fontFamily=\"Exo 2, sans-serif\">\n        Create\n      </Text>\n    </Link>\n\n\n\n\n    <Link\n      activeClass=\"active\"\n      to=\"creators\"\n      spy={true}\n      smooth={true}\n      duration={500}\n      offset={-110}\n    >\n      <Text fontSize={20} ml={3} color=\"white\" cursor=\"pointer\" fontFamily=\"Exo 2, sans-serif\">\n        Admin\n      </Text>\n    </Link>\n    <Link\n      activeClass=\"active\"\n      to=\"team\"\n      spy={true}\n      smooth={true}\n      duration={500}\n    >\n      <Text fontSize={20} ml={3} color=\"white\" cursor=\"pointer\" fontFamily=\"Exo 2, sans-serif\">\n        Contact\n      </Text>\n    </Link>\n  </HStack>\n);\n}\n\n\nexport default MenuLandingDesktop","import React, {\n  useState, useEffect, useCallback, useRef,\n} from 'react'\nimport {\n  extractMessage, httpURL, toSpanList,\n} from '@/lib/helpers'\nimport { HiddenError, Limits, Maybe, TokenState } from '@/lib/types'\nimport { Header, MenuLandingDesktop, TokenFilterForm, TokensTable } from '@/components'\nimport { useWeb3 } from '@/lib/hooks'\nimport { Helmet } from 'react-helmet'\nimport {\n  useSearchParams, useNavigate, createSearchParams,\n} from 'react-router-dom'\nimport JSON5 from 'json5'\nimport { defaults } from '@/config'\nimport {\n  chakra, Button, Container, Flex, Text, Stack,\n} from '@chakra-ui/react'\n\nconst Home = () => {\n  const [tokens, setTokens] = useState<Array<TokenState | Error>>([])\n  const [query] = useSearchParams()\n  const [limit, setLimit] = useState(Number(query.get('limit') ?? defaults.limit))\n  const [offset, setOffset] = useState(Number(query.get('offset') ?? defaults.offset))\n  const [gatingVisible, setGatingVisible] = (\n    useState(query.get('gating') === 'true')\n  )\n  const visible = query.get('visible') ?? defaults.visible\n  const [visibleList, setVisibleList] = (\n    useState<Array<number | Limits>>(toSpanList(visible))\n  )\n  const navigate = useNavigate()\n  const { roContract, bitsLibrary } = useWeb3()\n  const setToken = useCallback(\n    (idx: number, info: Record<string, unknown>) => {\n      let token\n\n      setTokens((tkns: Array<TokenState>) => {\n        token = { ...tkns[idx], ...info };\n        return [\n          ...tkns.slice(0, idx),\n          ...Array.from({ length: idx - tkns.length }, () => ({})),\n          token,\n          ...tkns.slice(idx + 1),\n        ];\n      });\n      return token;\n    },\n    [setTokens],\n  )\n  const [typeCount, setTypeCount] = useState(null)\n  const [GATING_TYPE, setGATING_TYPE] = useState<Maybe<bigint>>(null)\n  const [DISABLING_TYPE, setDISABLING_TYPE] = useState<Maybe<bigint>>(null)\n  const [TYPE_WIDTH, setTYPE_WIDTH] = useState<Maybe<number>>(null)\n  const [TYPE_BOUNDARY, setTYPE_BOUNDARY] = (\n    useState<Maybe<number>>(null)\n  )\n\n  useEffect(() => {\n    const params = {};\n    if (visibleList?.length > 0) {\n      Object.assign(params, {\n        visible: visibleList.toString(),\n      });\n    } else {\n      Object.entries({ limit, offset, gating: gatingVisible }).forEach(\n        ([key, val]) => {\n          if (val !== defaults[key as keyof typeof defaults]) {\n            Object.assign(params, { [key]: val.toString() });\n          }\n        }\n      );\n    }\n\n    const options = { search: `?${createSearchParams(params)}` };\n    navigate(options, { replace: true });\n  }, [visibleList, limit, offset, gatingVisible, navigate]);\n\n  useEffect(() => {\n    if(roContract && bitsLibrary) {\n      roContract.typeSupply()\n      .then((supply: {\n        toBigInt: () => bigint // call-bind?\n      }) => supply.toBigInt())\n      .then(setTypeCount)\n      bitsLibrary.GATING_TYPE()\n      .then((type: { toBigInt: () => bigint }) => type.toBigInt())\n      .then(setGATING_TYPE)\n      bitsLibrary.DISABLING_TYPE()\n      .then((type: { toBigInt: () => bigint }) => type.toBigInt())\n      .then(setDISABLING_TYPE)\n      bitsLibrary.TYPE_WIDTH()\n      .then(setTYPE_WIDTH)\n      bitsLibrary.TYPE_BOUNDARY()\n      .then(setTYPE_BOUNDARY)\n    }\n  }, [roContract, bitsLibrary])\n\n  useEffect(() => {\n    setVisibleList(toSpanList(visible));\n  }, [visible]);\n\n  const controller = useRef(null)\n  const retrieve = useCallback(\n    async (tokens: Array<TokenState>) => {\n      controller.current?.abort()\n      controller.current = new AbortController()\n      setTokens([])\n      return (\n        await Promise.allSettled(\n          tokens.map(async (token, idx) => {\n            try {\n              const id: bigint = token.id ?? (\n                (await roContract.tokenByIndex(token.index)).toBigInt()\n              )\n\n              const type = (\n                id\n                & (\n                  (2n**BigInt(TYPE_WIDTH) - 1n) // TYPE_WIDTH 1s\n                  << BigInt(TYPE_BOUNDARY)\n                )\n              )\n              const gating = token.is?.gating ?? (\n                type === GATING_TYPE\n              )\n              const disabling = token.is?.disabling ?? (\n                type === (GATING_TYPE | DISABLING_TYPE)\n              )\n              const gates = token.gates ?? (gating || disabling ? (\n                Number((2n**32n - 1n) & id)\n              ) : ( null ))\n\n              const is: { [key: string]: unknown } = {\n                gating,\n                disabling,\n                hidden: (\n                  token.hidable != false\n                  && (gating || disabling)\n                  && !gatingVisible\n                ),\n              }\n\n              setToken(\n                idx,\n                {\n                  id: `0x${id.toString(16)}`,\n                  index: token.index,\n                  gates,\n                  is,\n                }\n              )\n\n              if(is.hidden) {\n                throw new HiddenError('Token is hidden.')\n              }\n\n              const responses = await Promise.allSettled([\n                (async () => {\n                  const uri = token.uri ?? await roContract.uri(id)\n                  if(uri === '') {\n                    throw new Error('No URI… Waiting for configuration…')\n                  }\n                  setToken(idx, { uri })\n                  const response = await fetch(\n                    httpURL(uri)!,\n                    { signal: controller.current.signal }\n                  )\n                  if(!response.ok) {\n                    throw new Error(`Request Status: ${response.status}`)\n                  }\n                  const data = await response.text()\n                  setToken(idx, { metadata: JSON5.parse(data) })\n                })(),\n                (async () => {\n                  const supply = await roContract.totalSupply(id)\n                  setToken(idx, { total: supply.toBigInt() })\n                })(),\n                (async () => {\n                  const max = await roContract.getMax(id)\n                  console.info({ max })\n                  setToken(idx, { max: max.toBigInt() })\n                })(),\n              ])\n\n              const [{ reason: error } = { reason: null }] = (\n                responses.filter((res) => (\n                  res.status === 'rejected'\n                )) as Array<{ reason: string }>\n              )\n              if(error) throw new Error(error)\n            } catch(error) {\n              if(!(error instanceof HiddenError)) {\n                console.error({ error })\n              }\n              if(!(error instanceof DOMException)) { // !aborted\n                return setToken(idx, {\n                  error: extractMessage(error)\n                })\n              }\n            }\n          })\n        )\n      )\n    },\n    [\n      GATING_TYPE, TYPE_BOUNDARY, TYPE_WIDTH, DISABLING_TYPE,\n      gatingVisible, roContract, setToken,\n    ],\n  )\n\n  useEffect(() => {\n    const load = async () => {\n      if(\n        roContract && bitsLibrary && typeCount != null\n        && TYPE_WIDTH != null && TYPE_BOUNDARY != null\n        && GATING_TYPE != null && DISABLING_TYPE != null\n      ) {\n        const tokens: Array<TokenState> = []\n        if(visibleList.some(() => true)) {\n          visibleList.forEach(\n            (elem) => {\n              let { high, low } = elem as Limits\n              const sorted = [low, high] = (\n                [low, high].sort((a, b) => (a - b))\n              )\n              if(sorted.some((elem) => elem == null)) {\n                [high, low] = [elem as number, elem as number]\n              }\n              tokens.push(...(\n                Array.from({ length: high - low + 1 })\n                .map((_, idx) => ({\n                  index: low + idx,\n                  hidable: false,\n                }))\n              ))\n            }\n          )\n        } else {\n          const start = offset < 0 ? Number(typeCount) + offset : offset\n          const count = Math.min(limit, Number(typeCount) - start)\n          tokens.push(\n            ...(\n              Array.from({ length: count })\n              .map((_, idx) => ({\n                index: start + idx + 1,\n              }))\n            )\n          )\n        }\n\n        await retrieve(tokens)\n      }\n    }\n    load()\n  }, [\n    visibleList, retrieve, roContract, bitsLibrary,\n    limit, offset, typeCount,\n    TYPE_WIDTH, TYPE_BOUNDARY, GATING_TYPE, DISABLING_TYPE,\n  ])\n\n  return (\n    <Container maxW=\"full\" id=\"back-to-top\">\n      <Helmet>\n        <title>SmartLaw Claims</title>\n        <meta name=\"description\" content=\"SmartLaw Claims Digital Assets\" />\n      </Helmet>\n\n      <chakra.header bg=\"black\">\n        <MenuLandingDesktop />\n{/* \n        <Container>\n          <MenuHeader />\n          <Who />\n          <How />\n          <Creators />\n          <BuiltWith />\n          <Team />\n        </Container> */}\n      </chakra.header>\n\n      <chakra.main bg=\"black\">\n        <Header h=\"40vh\" />\n        <Stack align=\"center\">\n          <TokenFilterForm\n            flexGrow={1}\n            {...{\n              limit,\n              setLimit,\n              offset,\n              setOffset,\n              gatingVisible,\n              setGatingVisible,\n              visibleList,\n              setVisibleList,\n            }}\n          />\n          <TokensTable {...{ tokens }} />\n\n          <Flex justify=\"center\">\n            <Button\n              onClick={() => {\n                if (visibleList.length > 0) {\n                  const potentials = visibleList.map(\n                    (entry) => ((entry as Limits)?.high ?? entry) as number\n                  );\n                  const max = Math.max(...potentials);\n                  setVisibleList((vis) => [\n                    ...vis,\n                    { low: max, high: max + 10 },\n                  ]);\n                } else {\n                  setLimit((lim) => lim + 10);\n                }\n              }}\n            >\n              <Text\n                as=\"span\"\n                mr={1}\n                mt={-0.5}\n                fontSize=\"150%\"\n                fontWeight=\"bold\"\n              >\n                +\n              </Text>\n              10\n            </Button>\n            <Button ml={5} onClick={() => setOffset((off) => off + limit)}>\n              <Text\n                as=\"span\"\n                mr={0.75}\n                mt={-1}\n                fontSize=\"200%\"\n                fontWeight=\"bold\"\n              >\n                ↓\n              </Text>\n              {limit}\n            </Button>\n            <Button ml={5} onClick={() => setOffset((off) => off - limit)}>\n              <Text\n                as=\"span\"\n                mr={0.75}\n                mt={-1}\n                fontSize=\"200%\"\n                fontWeight=\"bold\"\n              >\n                ↑\n              </Text>\n              {limit}\n            </Button>\n            <Button\n              ml={5}\n              onClick={() => setOffset((off) => off - limit)}\n            >\n              <Text as=\"span\" mr={0.75} mt={-1} fontSize=\"200%\" fontWeight=\"bold\">↑</Text>{limit}\n            </Button>\n          </Flex>\n        </Stack>\n      </chakra.main>\n    </Container>\n  );\n};\n\nexport default Home;\n"],"names":["useBreakpoint","defaultBreakpoint","_useTheme","useTheme","__breakpoints","env","useEnvironment","queries","React__default","useMemo","_breakpoints$details","details","map","_ref","minMaxQuery","breakpoint","query","replace","_React$useState","useState","fallbackBreakpointDetail","find","_ref2","window","matchMedia","matchingBreakpointDetail","_ref3","matches","undefined","currentBreakpoint","setCurrentBreakpoint","useEffect","allUnregisterFns","_ref4","mediaQueryList","handleChange","ev","addEventListener","addListener","removeEventListener","removeListener","forEach","unregister","getClosestValue","values","breakpoints$1","breakpoints","index","Object","keys","indexOf","stopIndex","key","_key","useBreakpointValue","_theme$__breakpoints","theme","Array","from","obj","isArray","fromEntries","entries","arrayToObjectNotation","value","Header","links","cup","sign","props","_jsx","TokenFilterForm","limit","setLimit","offset","setOffset","gatingVisible","setGatingVisible","visibleList","setVisibleList","register","handleSubmit","control","setValue","useForm","toString","submit","data","Number","toSpanList","visible","a","textDecoration","_jsxs","mt","label","_after","content","mr","fontSize","field","onChange","ref","MenuLandingDesktop","base","lg","Home","tokens","setTokens","useSearchParams","get","defaults","navigate","useNavigate","roContract","bitsLibrary","useWeb3","setToken","useCallback","idx","info","token","tkns","slice","length","typeCount","setTypeCount","GATING_TYPE","setGATING_TYPE","DISABLING_TYPE","setDISABLING_TYPE","TYPE_WIDTH","setTYPE_WIDTH","TYPE_BOUNDARY","setTYPE_BOUNDARY","params","assign","gating","val","options","search","createSearchParams","typeSupply","then","supply","toBigInt","type","controller","useRef","retrieve","current","abort","AbortController","Promise","allSettled","id","tokenByIndex","BigInt","is","disabling","gates","hidden","hidable","HiddenError","responses","uri","Error","response","fetch","httpURL","signal","ok","status","text","metadata","JSON5","parse","totalSupply","total","max","getMax","console","reason","error","filter","res","DOMException","extractMessage","load","some","elem","high","low","sorted","sort","b","push","_","start","count","Math","min","Helmet","potentials","entry","vis","lim","off"],"mappings":"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"}