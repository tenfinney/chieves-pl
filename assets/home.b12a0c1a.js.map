{"version":3,"file":"home.b12a0c1a.js","sources":["../../../../node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js","../../src/lib/types.ts","../../src/components/TokenFilterForm.tsx","../../src/components/MenuLandingDesktop.tsx","../../src/components/MenuHeader.tsx","../../src/pages/home.tsx"],"sourcesContent":["import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\n\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nfunction useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n\n  var _React$useState = React.useState(queries.map(function (query) {\n    return isSupported ? !!env.window.matchMedia(query).matches : false;\n  })),\n      matches = _React$useState[0],\n      setMatches = _React$useState[1]; // Specifying matches in the dependency list will cause the event listeners\n  // to unload and then load each time the dependency changes. This causes\n  // Media Query Events to be missed. The event listeners should only be unloaded\n  // when the component unloads.\n\n\n  useSafeLayoutEffect(function () {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    var listenerList = mediaQueryList.map(function (_, index) {\n      var listener = function listener(mqlEvent) {\n        var queryIndex = mediaQueryList.findIndex(function (mediaQuery) {\n          return mediaQuery.media === mqlEvent.media;\n        }); // As the event listener is on the media query list, any time the\n        // listener is called, we know there is a change. There's no need\n        // to compare the previous matches with current. Using\n        // setMatches(matches => {...}) provides access to the current matches\n        // state.  Trying to access matches outside the setMatches function\n        // would provide data from the the time of instantiation (stale).\n\n        setMatches(function (matches) {\n          var currentMatches = matches.map(function (x) {\n            return x;\n          });\n          currentMatches[queryIndex] = mqlEvent.matches;\n          return currentMatches;\n        });\n      }; // Listening to the 'change' event on the Media Query List Object\n      // is more performant as the callback is only invoked when a specified\n      // media query is matched. Using addEventListener on the window object\n      // to listen for the resize event will call the callback on every\n      // viewport resize.\n\n\n      if (typeof mediaQueryList[index].addEventListener === \"function\") {\n        mediaQueryList[index].addEventListener(\"change\", listener);\n      } else {\n        mediaQueryList[index].addListener(listener);\n      }\n\n      return listener;\n    });\n    return function () {\n      mediaQueryList.forEach(function (_, index) {\n        if (typeof mediaQueryList[index].removeEventListener === \"function\") {\n          mediaQueryList[index].removeEventListener(\"change\", listenerList[index]);\n        } else {\n          mediaQueryList[index].removeListener(listenerList[index]);\n        }\n      });\n    };\n  }, []);\n  return matches;\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n      hide = props.hide,\n      children = props.children;\n\n  var _useMediaQuery = useMediaQuery(breakpoint),\n      show = _useMediaQuery[0];\n\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\n\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\n\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\n\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\n\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\n\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n      breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n      below = props.below,\n      above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n\n  return query;\n}\n\n/**\n * React hook used to get the user's animation preference.\n */\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n      prefersReducedMotion = _useMediaQuery[0];\n\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n      isLight = _useMediaQuery2[0],\n      isDark = _useMediaQuery2[1];\n\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\n\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param [defaultBreakpoint=\"base\"] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\n\nfunction useBreakpoint(defaultBreakpoint // default value ensures SSR+CSR consistency\n) {\n  if (defaultBreakpoint === void 0) {\n    defaultBreakpoint = \"base\";\n  }\n\n  var _useTheme = useTheme(),\n      __breakpoints = _useTheme.__breakpoints;\n\n  var env = useEnvironment();\n  var queries = React__default.useMemo(function () {\n    var _breakpoints$details;\n\n    return (_breakpoints$details = __breakpoints == null ? void 0 : __breakpoints.details.map(function (_ref) {\n      var minMaxQuery = _ref.minMaxQuery,\n          breakpoint = _ref.breakpoint;\n      return {\n        breakpoint: breakpoint,\n        query: minMaxQuery.replace(\"@media screen and \", \"\")\n      };\n    })) != null ? _breakpoints$details : [];\n  }, [__breakpoints]);\n\n  var _React$useState = React__default.useState(function () {\n    if (defaultBreakpoint) {\n      // use default breakpoint to ensure render consistency in SSR + CSR environments\n      // => first render on the client has to match the render on the server\n      var fallbackBreakpointDetail = queries.find(function (_ref2) {\n        var breakpoint = _ref2.breakpoint;\n        return breakpoint === defaultBreakpoint;\n      });\n\n      if (fallbackBreakpointDetail) {\n        return fallbackBreakpointDetail.breakpoint;\n      }\n    }\n\n    if (env.window.matchMedia) {\n      // set correct breakpoint on first render if no default breakpoint was provided\n      var matchingBreakpointDetail = queries.find(function (_ref3) {\n        var query = _ref3.query;\n        return env.window.matchMedia(query).matches;\n      });\n\n      if (matchingBreakpointDetail) {\n        return matchingBreakpointDetail.breakpoint;\n      }\n    }\n\n    return undefined;\n  }),\n      currentBreakpoint = _React$useState[0],\n      setCurrentBreakpoint = _React$useState[1];\n\n  React__default.useEffect(function () {\n    var allUnregisterFns = queries.map(function (_ref4) {\n      var breakpoint = _ref4.breakpoint,\n          query = _ref4.query;\n      var mediaQueryList = env.window.matchMedia(query);\n\n      if (mediaQueryList.matches) {\n        setCurrentBreakpoint(breakpoint);\n      }\n\n      var handleChange = function handleChange(ev) {\n        if (ev.matches) {\n          setCurrentBreakpoint(breakpoint);\n        }\n      }; // add media query listener\n\n\n      if (typeof mediaQueryList.addEventListener === \"function\") {\n        mediaQueryList.addEventListener(\"change\", handleChange);\n      } else {\n        mediaQueryList.addListener(handleChange);\n      } // return unregister fn\n\n\n      return function () {\n        if (typeof mediaQueryList.removeEventListener === \"function\") {\n          mediaQueryList.removeEventListener(\"change\", handleChange);\n        } else {\n          mediaQueryList.removeListener(handleChange);\n        }\n      };\n    });\n    return function () {\n      allUnregisterFns.forEach(function (unregister) {\n        return unregister();\n      });\n    };\n  }, [queries, __breakpoints, env.window]);\n  return currentBreakpoint;\n}\n\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n\n  return undefined;\n}\n\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @param values\n * @param [defaultBreakpoint] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var _theme$__breakpoints;\n\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the sorted breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Array.from(((_theme$__breakpoints = theme.__breakpoints) == null ? void 0 : _theme$__breakpoints.keys) || []);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };\n","import { ExternalProvider } from '@ethersproject/providers'\n\nexport type Maybe<T> = T | null\nexport type Values<T> = T[keyof T]\nexport type Optional<T> = T | undefined\n\n// declare global {\n//   interface Window {\n//     ethereum: ExternalProvider\n//   }\n// }\n\nexport type NetworkInfo = {\n  [chainName: string]: {\n    chainId: number;\n    name: string;\n    label: string;\n    symbol: string;\n    explorer: Maybe<string>;\n    rpc: string;\n  }\n}\n\nexport type OpenSeaAttribute = {\n  trait_type?: string\n  value?: string | number\n  display_type?: string\n}\n\nexport type Attribute = {\n  name?: string\n  value?: string | number\n  type?: string\n}\n\nexport type ERC1155Metadata = {\n  name?: string\n  description?: string\n  decimals?: number\n  attributes?: Array<Attribute>\n  properties?: { wearables?: Record<string, string> }\n  external_url?: string\n  image?: string\n  animation_url?: string\n  background_color?: string\n\n} & {\n  [key: string]: string | number\n}\n\nexport type CodedError = Error & { code: number }\n\nexport type TokenState = {\n  id?: string\n  hidable?: boolean\n  is?: Record<string, unknown>\n  gates?: Maybe<number>\n  index?: number\n  uri?: string\n  metadata?: ERC1155Metadata\n  total?: number\n  max?: number\n  error?: string\n}\n\nexport type MetaMaskError = Error & {\n  data: {\n    code: number\n    data: string\n    message: string\n  }\n}\n\nexport type NestedError = {\n  error: Error\n}\n\nexport type NamedString = {\n  name: string\n  content: string\n}\n\nexport type Fileish = (\n  File | string | NamedString\n)\n\nexport type FileListish = (\n  Fileish | Array<File | string>\n)\n\nexport type FormValues = {\n  name?: string\n  description?: string\n  homepage?: string\n  images?: FileListish\n  color?: string\n  animation?: Fileish\n  attributes?: Array<Attribute>\n  uri?: string\n  json5?: string\n  maximum?: number\n}\n\nexport type Limits = {\n  high?: number\n  low?: number\n}\n\nexport type SpanList = Array<number | Limits>\n\nexport class HiddenError extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = 'HiddenError'\n  }\n}\n","import { toSpanList } from \"@/lib/helpers\";\nimport { Limits } from \"@/lib/types\";\nimport {\n  chakra,\n  Button,\n  Checkbox,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  Stack,\n  type FlexProps,\n  Text,\n} from \"@chakra-ui/react\";\nimport React, { SetStateAction, useEffect, useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\n// import { Header } from \"@/components\";\n\nexport type FilterValues = {\n  limit: number;\n  offset: number;\n  visible: string;\n  gatingVisible: boolean;\n};\n\nexport const TokenFilterForm: React.FC<\n  {\n    limit: number;\n    setLimit: (limit: SetStateAction<number>) => void;\n    offset: number;\n    setOffset: (offset: SetStateAction<number>) => void;\n    gatingVisible: boolean;\n    setGatingVisible: (gatingVisible: SetStateAction<boolean>) => void;\n    setVisibleList: (visible: SetStateAction<Array<number | Limits>>) => void;\n    visibleList: Array<number | Limits>;\n  } & FlexProps\n> = ({\n  limit = 100,\n  setLimit,\n  offset = 0,\n  setOffset,\n  gatingVisible = false,\n  setGatingVisible,\n  visibleList,\n  setVisibleList,\n  ...props\n}) => {\n  const { register, handleSubmit, control, setValue } = useForm<FilterValues>();\n\n  useEffect(() => {\n    setValue(\"limit\", limit);\n    setValue(\"offset\", offset);\n    setValue(\"visible\", visibleList.toString());\n    setValue(\"gatingVisible\", gatingVisible);\n  }, [limit, offset, visibleList, gatingVisible, setValue]);\n\n  const submit = async (data: FilterValues) => {\n    setLimit(Number(data.limit));\n    setOffset(Number(data.offset));\n    setGatingVisible(data.gatingVisible);\n    setVisibleList(toSpanList(data.visible));\n  };\n\n  return (\n    <Stack mb=\"100px\" align=\"center\" id=\"querytokens\" bg=\"gray.700\">\n      <Flex\n        as=\"form\"\n        onSubmit={handleSubmit(submit)}\n        mt={10}\n        mb=\"1rem\"\n        maxW={[\"100%\", \"min(85vw, 100em)\"]}\n        direction={[\"column\", \"row\"]}\n        sx={{ a: { textDecoration: \"underline\" } }}\n        {...props}\n      >\n        {/* <Header /> */}\n\n        <Text fontSize=\"18pt\" mt=\"1rem\" fontWeight=\"bold\">\n          ERC-1155 Standard Token Minting\n        </Text>\n        <Text ml=\"20px\" fontSize=\"12pt\" fontWeight=\"regular\">\n          Each token reservation mints one master token and up to eight role\n          tokens. Superuser, Minter, Caster, Transferer, Configurer,Limiter,\n          Burner, or Destroyer. Use comma, space or dash separated list for\n          Visible List Option.\n        </Text>\n        <Stack\n          ml={3}\n          flexGrow={1}\n          sx={{\n            \"&>*:not(style)~*:not(style)\": { mt: 0.5 },\n            label: {\n              _after: { content: '\".\"' },\n              mt: 1.5,\n              mr: 1,\n              mb: 4,\n              fontSize: \"110%\",\n            },\n          }}\n        >\n          <FormControl>\n            <Controller\n              control={control}\n              name=\"gatingVisible\"\n              defaultValue={gatingVisible}\n              render={({ field: { onChange, value, ref } }) => (\n                <Checkbox onChange={onChange} ref={ref} isChecked={value}>\n                  View Permission\n                  <chakra.br />\n                  Tokens\n                  <chakra.br />\n                </Checkbox>\n              )}\n            />\n\n            <Flex align=\"center\">\n              <FormLabel>Limit</FormLabel>\n              <Input\n                type=\"number\"\n                placeholder=\"Number of tokens to display.\"\n                {...register(\"limit\")}\n              />\n            </Flex>\n          </FormControl>\n          <FormControl>\n            <Flex align=\"center\">\n              <FormLabel>Offset</FormLabel>\n              <Input\n                type=\"number\"\n                placeholder=\"Number of tokens offset from Token 1.\"\n                {...register(\"offset\")}\n              />\n            </Flex>\n          </FormControl>\n          <Text textAlign=\"center\">or</Text>\n          <FormControl>\n            <Flex align=\"center\">\n              <FormLabel>Visible&#xA0;List</FormLabel>\n              <Input\n                placeholder=\"Comma, space and dash separated list of indices.\"\n                {...register(\"visible\")}\n              />\n            </Flex>\n          </FormControl>\n        </Stack>\n        <Stack ml={3}>\n          <FormControl>\n            <Flex align=\"center\" my={1}>\n              <Controller\n                control={control}\n                name=\"gatingVisible\"\n                defaultValue={gatingVisible}\n                render={({ field: { onChange, value, ref } }) => (\n                  <Checkbox onChange={onChange} ref={ref} isChecked={value}>\n                    View\n                    <chakra.br />\n                    Permission\n                    <chakra.br />\n                    Tokens\n                  </Checkbox>\n                )}\n              />\n            </Flex>\n          </FormControl>\n\n          <Button type=\"submit\" colorScheme=\"green\">\n            View\n          </Button>\n        </Stack>\n      </Flex>\n    </Stack>\n  );\n};\n\nexport default TokenFilterForm;\n","import {\n  Link as ChakraLink,\n  Button,\n  Box,\n  Flex,\n  Grid,\n  Heading,\n  Image,\n  Text,\n  useBreakpointValue,\n  HStack,\n  VStack,\n} from '@chakra-ui/react';\nimport NextLink from 'next/link';\nimport { Link } from 'react-scroll';\n\n\nimport React from 'react'\n\n// font-family: 'Anek Devanagari, sans-serif';\n// font-family: 'Anek Latin, sans-serif';\n// font-family: 'Anton, sans-serif';\n// font-family: 'Arizonia, cursive';\n// font-family: 'Encode Sans Semi Condensed, sans-serif';\n// font-family: \"Exo 2, sans-serif\";\n// font-family: 'Georama, sans-serif';\n// font-family: 'League Gothic, sans-serif';\n// font-family: 'Orbitron, sans-serif';\n// font-family: 'Oxanium, cursive';\n// font-family: 'Russo One, sans-serif';\n\n\n\nexport const MenuLandingDesktop: React.FC = () => {\n  const isSmallScreen = useBreakpointValue({ base: true, lg: false });\n\n  return (    \n    <HStack bg=\"gray.700\">\n\n      \n    {/* <NextLink href=\"/new\" passHref>\n      <ChakraLink display=\"block\" _hover={{}}>\n        <Button fontSize={20} cursor=\"pointer\" fontFamily=\"headingLight\">\n          Enter App\n        </Button>\n      </ChakraLink>\n    </NextLink> */}\n\n\n\n\n{/* <Link activeClass=\"active\" to=\"how\" spy={true} smooth={true} duration={500}>\n      <Text fontSize={20} ml={3} color=\"white\" cursor=\"pointer\" fontFamily=\"Exo 2, sans-serif\">\n        How to\n      </Text>\n    </Link> */}\n    \n\n\n      <Link\n      activeClass=\"active\"\n      to=\"querytokens\"\n      spy={true}\n      smooth={true}\n      duration={500}\n    >\n      <Text fontSize={20} ml={3} color=\"white\" cursor=\"pointer\" fontFamily=\"Exo 2, sans-serif\">\n        Query\n      </Text>\n    </Link>\n\n\n    {/* <Link\n      activeClass=\"active\"\n      to=\"createatoken\"\n      spy={true}\n      smooth={true}\n      duration={500}\n    >\n      <Text fontSize={20} ml={3} color=\"white\" cursor=\"pointer\" fontFamily=\"Exo 2, sans-serif\">\n        Create\n      </Text>\n    </Link> */}\n\n    {/* <Link\n      activeClass=\"active\"\n      to=\"creators\"\n      spy={true}\n      smooth={true}\n      duration={500}\n      offset={-110}\n    >\n      <Text fontSize={20} ml={3} color=\"white\" cursor=\"pointer\" fontFamily=\"Exo 2, sans-serif\">\n        Admin\n      </Text>\n    </Link> */}\n\n{/* \n\n\n    <Link\n      activeClass=\"active\"\n      to=\"team\"\n      spy={true}\n      smooth={true}\n      duration={500}\n    >\n      <Text fontSize={20} ml={3} color=\"white\" cursor=\"pointer\" fontFamily=\"Exo 2, sans-serif\">\n        Contact\n      </Text>\n    </Link> */}\n  </HStack>\n);\n}\n\n\nexport default MenuLandingDesktop","import React from \"react\";\nimport ReactPlayer from \"react-player\";\n\nimport {\n  Box,\n  Flex,\n  Grid,\n  GridItem,\n  FlexProps,\n  HStack,\n  Container,\n  Tooltip,\n  Heading,\n  Image,\n  Text,\n  useBreakpointValue,\n} from \"@chakra-ui/react\";\n\nimport {\n  AddIcon,\n  CloseIcon,\n  SettingsIcon,\n  StarIcon,\n  CheckCircleIcon,\n  ExternalLinkIcon,\n} from \"@chakra-ui/icons\";\n\nimport { LinkedSVG } from \"@/components\";\n\n// font-family: 'Anek Devanagari, sans-serif';\n// font-family: 'Anek Latin, sans-serif';\n// font-family: 'Anton, sans-serif';\n// font-family: 'Arizonia, cursive';\n// font-family: 'Encode Sans Semi Condensed, sans-serif';\n// font-family: \"Exo 2, sans-serif\";\n// font-family: 'Georama, sans-serif';\n// font-family: 'League Gothic, sans-serif';\n// font-family: 'Orbitron, sans-serif';\n// font-family: 'Oxanium, cursive';\n// font-family: 'Russo One, sans-serif';\n\nexport const MenuHeader: React.FC = () => {\n  const isSmallScreen = useBreakpointValue({ base: true, md: true, lg: true });\n\n  return (\n    <Box p={3} bg=\"gray.700\">\n      <Flex\n        w=\"full\"\n        align=\"start\"\n        justify=\"center\"\n        minH=\"20vh\"\n        id=\"what\"\n        gap={10}\n        pt={20}\n        pb={20}\n      >\n\n        <Flex\n          display=\"flex\"\n          flexDirection=\"column\"\n          justify=\"baseline\"\n          maxWidth={{ base: \"90%\", md: \"5xl\" }}\n          lineHeight={{ base: \"lg\", \"2xl\": \"2xl\" }}\n          pl={{ base: 0, md: 0 }}\n          zIndex={100}\n          fontWeight=\"normal\"\n          color=\"white\"\n          alignItems={{ base: \"center\", md: \"initial\" }}\n        >\n          \n\n          <Heading\n            fontSize={{ base: 24, md: 60 }}\n            pb={10}\n            fontWeight=\"normal\"\n            display=\"flex\"\n            color=\"white\"\n            alignItems={{ base: \"center\", md: \"initial\" }}\n            textAlign={{ base: \"center\", md: \"initial\" }}\n          >\n            <Text fontFamily=\"Exo 2, sans-serif\">\n              <span style={{ color: \"#03a5fc\" }}>Web3 </span>\n              Artifacts & Digital Assets\n            </Text>\n          </Heading>\n\n\n\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default MenuHeader;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { extractMessage, httpURL, toSpanList } from \"@/lib/helpers\";\nimport { HiddenError, Limits, Maybe, TokenState } from \"@/lib/types\";\nimport {\n  Header,\n  MenuHeader,\n  MenuLandingDesktop,\n  Who,\n  How,\n  Creators,\n  BuiltWith,\n  Team,\n  TokenFilterForm,\n  TokensTable,\n} from \"@/components\";\nimport { useWeb3 } from \"@/lib/hooks\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  useSearchParams,\n  useNavigate,\n  createSearchParams,\n} from \"react-router-dom\";\nimport JSON5 from \"json5\";\nimport { defaults } from \"@/config\";\nimport { chakra, Button, Container, Flex, Text, Stack } from \"@chakra-ui/react\";\n\nconst Home = () => {\n  const [tokens, setTokens] = useState<Array<TokenState | Error>>([]);\n  const [query] = useSearchParams();\n  const [limit, setLimit] = useState(\n    Number(query.get(\"limit\") ?? defaults.limit)\n  );\n  const [offset, setOffset] = useState(\n    Number(query.get(\"offset\") ?? defaults.offset)\n  );\n  const [gatingVisible, setGatingVisible] = useState(\n    query.get(\"gating\") === \"true\"\n  );\n  const visible = query.get(\"visible\") ?? defaults.visible;\n  const [visibleList, setVisibleList] = useState<Array<number | Limits>>(\n    toSpanList(visible)\n  );\n  const navigate = useNavigate();\n  const { roContract, bitsLibrary } = useWeb3();\n  const setToken = useCallback(\n    (idx: number, info: Record<string, unknown>) => {\n      let token;\n\n      setTokens((tkns: Array<TokenState>) => {\n        token = { ...tkns[idx], ...info };\n        return [\n          ...tkns.slice(0, idx),\n          ...Array.from({ length: idx - tkns.length }, () => ({})),\n          token,\n          ...tkns.slice(idx + 1),\n        ];\n      });\n      return token;\n    },\n    [setTokens]\n  );\n  const [typeCount, setTypeCount] = useState(null);\n  const [GATING_TYPE, setGATING_TYPE] = useState<Maybe<bigint>>(null);\n  const [DISABLING_TYPE, setDISABLING_TYPE] = useState<Maybe<bigint>>(null);\n  const [TYPE_WIDTH, setTYPE_WIDTH] = useState<Maybe<number>>(null);\n  const [TYPE_BOUNDARY, setTYPE_BOUNDARY] = useState<Maybe<number>>(null);\n\n  useEffect(() => {\n    const params = {};\n    if (visibleList?.length > 0) {\n      Object.assign(params, {\n        visible: visibleList.toString(),\n      });\n    } else {\n      Object.entries({ limit, offset, gating: gatingVisible }).forEach(\n        ([key, val]) => {\n          if (val !== defaults[key as keyof typeof defaults]) {\n            Object.assign(params, { [key]: val.toString() });\n          }\n        }\n      );\n    }\n\n    const options = { search: `?${createSearchParams(params)}` };\n    navigate(options, { replace: true });\n  }, [visibleList, limit, offset, gatingVisible, navigate]);\n\n  useEffect(() => {\n    if (roContract && bitsLibrary) {\n      roContract\n        .typeSupply()\n        .then(\n          (supply: {\n            toBigInt: () => bigint; // call-bind?\n          }) => supply.toBigInt()\n        )\n        .then(setTypeCount);\n      bitsLibrary\n        .GATING_TYPE()\n        .then((type: { toBigInt: () => bigint }) => type.toBigInt())\n        .then(setGATING_TYPE);\n      bitsLibrary\n        .DISABLING_TYPE()\n        .then((type: { toBigInt: () => bigint }) => type.toBigInt())\n        .then(setDISABLING_TYPE);\n      bitsLibrary.TYPE_WIDTH().then(setTYPE_WIDTH);\n      bitsLibrary.TYPE_BOUNDARY().then(setTYPE_BOUNDARY);\n    }\n  }, [roContract, bitsLibrary]);\n\n  useEffect(() => {\n    setVisibleList(toSpanList(visible));\n  }, [visible]);\n\n  const controller = useRef(null);\n  const retrieve = useCallback(\n    async (tokens: Array<TokenState>) => {\n      controller.current?.abort();\n      controller.current = new AbortController();\n      setTokens([]);\n      return await Promise.allSettled(\n        tokens.map(async (token, idx) => {\n          try {\n            const id: bigint =\n              token.id ??\n              (await roContract.tokenByIndex(token.index)).toBigInt();\n\n            const type =\n              id &\n              ((2n ** BigInt(TYPE_WIDTH) - 1n) << // TYPE_WIDTH 1s\n                BigInt(TYPE_BOUNDARY));\n            const gating = token.is?.gating ?? type === GATING_TYPE;\n            const disabling =\n              token.is?.disabling ?? type === (GATING_TYPE | DISABLING_TYPE);\n            const gates =\n              token.gates ??\n              (gating || disabling ? Number((2n ** 32n - 1n) & id) : null);\n\n            const is: { [key: string]: unknown } = {\n              gating,\n              disabling,\n              hidden:\n                token.hidable != false &&\n                (gating || disabling) &&\n                !gatingVisible,\n            };\n\n            setToken(idx, {\n              id: `0x${id.toString(16)}`,\n              index: token.index,\n              gates,\n              is,\n            });\n\n            if (is.hidden) {\n              throw new HiddenError(\"Token is hidden.\");\n            }\n\n            const responses = await Promise.allSettled([\n              (async () => {\n                const uri = token.uri ?? (await roContract.uri(id));\n                if (uri === \"\") {\n                  throw new Error(\"No URI… Waiting for configuration…\");\n                }\n                setToken(idx, { uri });\n                const response = await fetch(httpURL(uri)!, {\n                  signal: controller.current.signal,\n                });\n                if (!response.ok) {\n                  throw new Error(`Request Status: ${response.status}`);\n                }\n                let body;\n                try {\n                  body = await response.text();\n                  setToken(idx, { metadata: JSON5.parse(body) });\n                } catch (error) {\n                  console.debug({ error, body });\n                }\n              })(),\n              (async () => {\n                const supply = await roContract.totalSupply(id);\n                setToken(idx, { total: supply.toBigInt() });\n              })(),\n              (async () => {\n                const max = await roContract.getMax(id);\n                setToken(idx, { max: max.toBigInt() });\n              })(),\n            ]);\n\n            const [{ reason: error } = { reason: null }] = responses.filter(\n              (res) => res.status === \"rejected\"\n            ) as Array<{ reason: string }>;\n            if (error) throw new Error(error);\n          } catch (error) {\n            if (!(error instanceof HiddenError)) {\n              console.error({ error });\n            }\n            if (!(error instanceof DOMException)) {\n              // !aborted\n              return setToken(idx, {\n                error: extractMessage(error),\n              });\n            }\n          }\n        })\n      );\n    },\n    [\n      GATING_TYPE,\n      TYPE_BOUNDARY,\n      TYPE_WIDTH,\n      DISABLING_TYPE,\n      gatingVisible,\n      roContract,\n      setToken,\n    ]\n  );\n\n  useEffect(() => {\n    const load = async () => {\n      if (\n        roContract &&\n        bitsLibrary &&\n        typeCount != null &&\n        TYPE_WIDTH != null &&\n        TYPE_BOUNDARY != null &&\n        GATING_TYPE != null &&\n        DISABLING_TYPE != null\n      ) {\n        const tokens: Array<TokenState> = [];\n        if (visibleList.some(() => true)) {\n          visibleList.forEach((elem) => {\n            let { high, low } = elem as Limits;\n            const sorted = ([low, high] = [low, high].sort((a, b) => a - b));\n            if (sorted.some((elem) => elem == null)) {\n              [high, low] = [elem as number, elem as number];\n            }\n            tokens.push(\n              ...Array.from({ length: high - low + 1 }).map((_, idx) => ({\n                index: low + idx,\n                hidable: false,\n              }))\n            );\n          });\n        } else {\n          const start = offset < 0 ? Number(typeCount) + offset : offset;\n          const count = Math.min(limit, Number(typeCount) - start);\n          tokens.push(\n            ...Array.from({ length: count }).map((_, idx) => ({\n              index: start + idx + 1,\n            }))\n          );\n        }\n\n        await retrieve(tokens);\n      }\n    };\n    load();\n  }, [\n    visibleList,\n    retrieve,\n    roContract,\n    bitsLibrary,\n    limit,\n    offset,\n    typeCount,\n    TYPE_WIDTH,\n    TYPE_BOUNDARY,\n    GATING_TYPE,\n    DISABLING_TYPE,\n  ]);\n\n  return (\n    <Container maxW=\"full\" id=\"back-to-top\" bg=\"gray.700\">\n      <Helmet>\n        <title>SmartLaw Claims</title>\n        <meta name=\"description\" content=\"SmartLaw Claims Digital Assets\" />\n      </Helmet>\n      <chakra.header bg=\"gray.700\">\n\n\n        <MenuLandingDesktop />\n        \n        <MenuHeader />\n        \n        \n        {/* <Who /> */}\n        {/* <How /> */}\n        {/* <Creators /> */}\n        {/* <BuiltWith /> */}\n        {/* <Container>\n          <Team />\n        </Container>\n         */}\n\n      </chakra.header>\n\n      <chakra.main bg=\"gray.700\">\n        \n        \n        <Header ml=\"100px\" h=\"40vh\" />\n\n        <Stack align=\"center\">\n          <TokenFilterForm\n            flexGrow={1}\n            {...{\n              limit,\n              setLimit,\n              offset,\n              setOffset,\n              gatingVisible,\n              setGatingVisible,\n              visibleList,\n              setVisibleList,\n            }}\n          />\n          <TokensTable {...{ tokens }} />\n          <Flex justify=\"center\">\n            <Button\n              onClick={() => {\n                if (visibleList.length > 0) {\n                  const potentials = visibleList.map(\n                    (entry) => ((entry as Limits)?.high ?? entry) as number\n                  );\n                  const max = Math.max(...potentials);\n                  setVisibleList((vis) => [\n                    ...vis,\n                    { low: max, high: max + 100 },\n                  ]);\n                } else {\n                  setLimit((lim) => lim + 100);\n                }\n              }}\n            >\n              <Text\n                as=\"span\"\n                mr={1}\n                mt={-0.5}\n                fontSize=\"150%\"\n                fontWeight=\"bold\"\n              >\n                +\n              </Text>\n              100\n            </Button>\n            <Button ml={5} onClick={() => setOffset((off) => off + limit)}>\n              <Text\n                as=\"span\"\n                mr={0.75}\n                mt={-1}\n                fontSize=\"200%\"\n                fontWeight=\"bold\"\n              >\n                ↓\n              </Text>\n              {limit}\n            </Button>\n            <Button ml={5} onClick={() => setOffset((off) => off - limit)}>\n              <Text\n                as=\"span\"\n                mr={0.75}\n                mt={-1}\n                fontSize=\"200%\"\n                fontWeight=\"bold\"\n              >\n                ↑\n              </Text>\n              {limit}\n            </Button>\n            <Button ml={5} onClick={() => setOffset((off) => off - limit)}>\n              <Text\n                as=\"span\"\n                mr={0.75}\n                mt={-1}\n                fontSize=\"200%\"\n                fontWeight=\"bold\"\n              >\n                ↑\n              </Text>\n              {limit}\n            </Button>\n          </Flex>\n        </Stack>\n      </chakra.main>\n    </Container>\n  );\n};\nexport default Home;\n"],"names":["useBreakpoint","defaultBreakpoint","_useTheme","useTheme","__breakpoints","env","useEnvironment","queries","React__default","useMemo","_breakpoints$details","details","map","_ref","minMaxQuery","breakpoint","query","replace","_React$useState","useState","fallbackBreakpointDetail","find","_ref2","window","matchMedia","matchingBreakpointDetail","_ref3","matches","undefined","currentBreakpoint","setCurrentBreakpoint","useEffect","allUnregisterFns","_ref4","mediaQueryList","handleChange","ev","addEventListener","addListener","removeEventListener","removeListener","forEach","unregister","getClosestValue","values","breakpoints$1","breakpoints","index","Object","keys","indexOf","stopIndex","key","_key","useBreakpointValue","_theme$__breakpoints","theme","Array","from","obj","isArray","fromEntries","entries","arrayToObjectNotation","value","TokenFilterForm","limit","setLimit","offset","setOffset","gatingVisible","setGatingVisible","visibleList","setVisibleList","props","register","handleSubmit","control","setValue","useForm","toString","submit","data","Number","toSpanList","visible","a","textDecoration","_jsx","_jsxs","mt","label","_after","content","mr","mb","fontSize","field","onChange","ref","MenuLandingDesktop","base","lg","MenuHeader","md","color","Home","tokens","setTokens","useSearchParams","get","defaults","navigate","useNavigate","roContract","bitsLibrary","useWeb3","setToken","useCallback","idx","info","token","tkns","slice","length","typeCount","setTypeCount","GATING_TYPE","setGATING_TYPE","DISABLING_TYPE","setDISABLING_TYPE","TYPE_WIDTH","setTYPE_WIDTH","TYPE_BOUNDARY","setTYPE_BOUNDARY","params","assign","gating","val","options","search","createSearchParams","typeSupply","then","supply","toBigInt","type","controller","useRef","retrieve","current","abort","AbortController","Promise","allSettled","id","tokenByIndex","BigInt","is","disabling","gates","hidden","hidable","HiddenError","responses","uri","Error","response","fetch","httpURL","signal","ok","status","body","text","metadata","JSON5","parse","error","console","debug","totalSupply","total","max","getMax","reason","filter","res","DOMException","extractMessage","load","some","elem","high","low","sorted","sort","b","push","_","start","count","Math","min","Helmet","potentials","entry","vis","lim","off"],"mappings":"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"}