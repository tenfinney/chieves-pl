{"version":3,"file":"new.63c9b55f.js","sources":["../../src/pages/new.tsx"],"sourcesContent":["import {\n  Center, Flex, Heading, Spinner, Text, chakra,\n  Stack, Container, useToast, Table, Thead, Th, Tr,\n  Tbody, Td, Checkbox, Input, Tooltip, Box,\n} from '@chakra-ui/react'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { Event } from 'ethers'\nimport { useForm } from 'react-hook-form'\nimport { Helmet } from 'react-helmet'\nimport { useSearchParams } from 'react-router-dom'\n// import { OptionsForm, Header, MenuHeader, SubmitButton } from '@/components'\nimport { OptionsForm, Header, BuiltWith, Who, Team, MenuHeader, MenuLandingDesktop, SubmitButton, HomeLink } from '@/components'\nimport { useWeb3 } from '@/lib/hooks'\nimport { extractMessage } from '@/lib/helpers'\nimport { rolePermissions, tokenPermissions } from '@/config'\n\nexport const New = () => (\n  <Container maxW=\"full\">\n    <Helmet>\n      <title>New Claim Asset or Token</title>\n    </Helmet>\n\n    <chakra.header>\n\n    <HomeLink/>\n    <Flex justify=\"center\">\n        <MenuLandingDesktop/>\n      </Flex>\n      <Flex justify=\"center\">\n        <MenuHeader/>\n      </Flex>\n      <Flex justify=\"center\">\n        <BuiltWith/>\n      </Flex>\n      <Flex justify=\"center\">\n        <Who/>\n      </Flex>\n      <Flex justify=\"center\">\n        <Team/>\n      </Flex>      \n    <Flex justify=\"center\">\n        <Header/>\n      </Flex>\n    </chakra.header>\n\n    <chakra.main>\n      <Content/>\n    </chakra.main>\n  </Container>\n)\n\nconst Content: React.FC = () => {\n  const {\n    ensProvider, roContract, rwContract, rolesLibrary,\n    connecting, connect, chain, address,\n  } = useWeb3()\n  const [search, setSearch] = useSearchParams({ tokenId: '' })\n  const id = search.get('tokenId')\n  const [tokenId, setTokenId] = (\n    useState(Array.isArray(id) ? id[0] : id)\n  )\n  const [roles, setRoles] = (\n    useState<Array<string>>(tokenPermissions)\n  )\n  const [working, setWorking] = useState(false)\n  const { register, handleSubmit } = useForm()\n  const toast = useToast()\n\n  useEffect(() => {\n    if(typeof id === 'string') {\n      setTokenId(id)\n    }\n  }, [id])\n\n  useEffect(() => {\n    const load = async () => {\n      if(roContract) {\n        const numRoles = (await rolesLibrary.roleIndexForName('ReservedLast')) - 1\n        const roles: Array<string> = await Promise.all(\n          Array.from({ length: numRoles }).map(async (_, idx) => (\n            await rolesLibrary.roleNameByIndex(idx + 1)\n          ))\n        )\n        setRoles(roles)\n      }\n    }\n\n    // load() // load static list to avoid extraneous permissions\n  }, [roContract])\n\n  const reserve = useCallback(\n    async (data: { maintainer?: string }) => {\n      setWorking(true)\n\n    try {\n      if(!rwContract) {\n        throw new Error(\n          'Connect your Web3 account to reserve a token ID.'\n        )\n      }\n      if(!rolesLibrary){\n        throw new Error('Library not loaded.')\n      }\n      const grants: Array<number> = []\n      const disables: Array<number> = []\n      await Promise.all(Object.entries(data).map(\n        async ([key, value]: [key: string, value: unknown]) => {\n          if(typeof value === 'boolean' && value) {\n            const [, type, role] = key.match(/^(grant|disable)\\((.+)\\)$/) ?? []\n            const roleId = await rolesLibrary.roleIndexForName(role)\n            switch(type) {\n              case 'grant': {\n                grants.push(roleId)\n                break\n              }\n              case 'disable': {\n                disables.push(roleId)\n                break\n              }\n              default: {\n                throw new Error(`Unknown operation: ${type}`)\n              }\n            }\n          }\n        }\n      ))\n    \n      let { maintainer } = data\n      if(maintainer === '') {\n        maintainer = address\n      }\n      if(maintainer?.includes('.')) {\n        if(!ensProvider) {\n          throw new Error('ENS provider not defined.')\n        }\n        maintainer = await ensProvider.resolveName(maintainer) ?? undefined\n      }\n      const tx = await rwContract['create(address,uint8[],uint8[])'](\n        maintainer, grants, disables\n      )\n      const receipt = await tx.wait()\n      const event = receipt.events.find(\n        (evt: Event) => evt.event === 'Created'\n      )\n      if(!event) {\n        throw new Error(\n          'Could not find a creation event.'\n        )\n      }\n      const [id] = event.args\n      setTokenId(id.toHexString())\n    } catch(error) {\n      toast({\n        title: 'Creation Error',\n        description: extractMessage(error),\n        status: 'error',\n        isClosable: true,\n        duration: 10000\n      })\n      console.error((error as Error).stack)\n    } finally {\n      setWorking(false)\n    }\n  }, [address, ensProvider, rolesLibrary, rwContract, toast])\n\n  if(!rwContract || !tokenId || working) {\n    return (\n      <Box ml=\"50px\">\n      <Text fontSize=\"24pt\" mt=\"1rem\" fontWeight=\"bold\">\n        ERC-1155 SSSS Access and Achievment Token Minting\n      </Text>\n      <Text ml=\"20px\" fontSize=\"18pt\" fontWeight=\"bold\">\n        Digital Tokens on the Polygon EVM Blockchain using IPFS\n      </Text>\n      <Text ml=\"50px\" fontSize=\"12pt\" fontWeight=\"regular\">\n        Each token reservation mints one (1) master token and up to (11) role\n        tokens. Superuser, Minter, Caster, Transferer, Configurer, Maintainer, Creator, Limiter, Burner, Destroyer, and/or Oracle can be automatically minted with\n        the master token and can be assigned to third-parties for\n        administration.\n      </Text>\n      <br/>\n      <hr/>\n      <br/>\n      <Center>\n      <br />\n        <Stack>\n          <Heading textAlign=\"center\">\n            Create a New Token Type\n          </Heading>\n          {(() => {\n            if(connecting) {\n              return (\n                <Flex justify=\"center\">\n                  <Spinner thickness=\"4px\"/>\n                  <Text ml={2}>Connecting…</Text>\n                </Flex>\n              )\n            }\n            if(working) {\n              return (\n                <Flex justify=\"center\" mt={7}>\n                  <Spinner/>\n                  <Text ml={2}>Reserving your digital asset or token…</Text>\n                </Flex>\n              )\n            }\n            if(!tokenId) {\n              return (\n                <Stack\n                  as=\"form\"\n                  onSubmit={handleSubmit(reserve)}\n                >\n                  <Flex align=\"center\">\n                    <chakra.label mr={3}>Admin:</chakra.label>\n                    <Input\n                      {...register('maintainer')}\n                      placeholder=\"Maintainer Address (default Creator)\"\n                    />\n                  </Flex>\n                  <Table mb={5}>\n                    <Thead>\n                      <Tr>\n                        <Th>Role</Th>\n                        <Th>\n                          <Tooltip label=\"Give the administrator these roles:\">\n                            Grant\n                          </Tooltip>\n                        </Th>\n                        <Th>\n                          <Tooltip label=\"Prevent these permissions from being checked:\">\n                            Disable\n                          </Tooltip>\n                        </Th>\n                        <Th>Description</Th>\n                      </Tr>\n                    </Thead>\n                    <Tbody>\n                      {roles.map((role, idx) => (\n                        <Tr key={idx}>\n                          <Td>{role}</Td>\n                          <Td textAlign=\"center\">\n                            <Checkbox {...register(`grant(${role})`)}/>\n                          </Td>\n                          <Td textAlign=\"center\">\n                            <Checkbox {...register(`disable(${role})`)}/>\n                          </Td>\n                          <Td>\n                            {rolePermissions[role as keyof typeof rolePermissions]}\n                          </Td>\n                        </Tr>\n                      ))}\n                    </Tbody>\n                  </Table>\n                  <SubmitButton\n                    purpose=\"create\"\n                    label=\"Reserve an ID\"\n                    requireStorage={false}\n                  />\n                </Stack>\n              )\n            }\n            return (\n              <Text>We are glad you showed up!</Text>\n            )\n          })()}\n        </Stack>\n      </Center>\n      </Box>\n    )\n  }\n\n  return (\n    <OptionsForm {...{ tokenId }}/>\n  )\n}\n\nexport default New"],"names":["New","_jsxs","_jsx","Helmet","Content","ensProvider","roContract","rwContract","rolesLibrary","connecting","connect","chain","address","useWeb3","search","setSearch","useSearchParams","tokenId","id","get","setTokenId","useState","Array","isArray","roles","setRoles","tokenPermissions","working","setWorking","register","handleSubmit","useForm","toast","useToast","useEffect","reserve","useCallback","data","Error","grants","disables","Promise","all","Object","entries","map","key","value","type","role","match","roleId","roleIndexForName","push","maintainer","includes","resolveName","undefined","tx","receipt","wait","event","events","find","evt","args","toHexString","error","title","description","extractMessage","status","isClosable","duration","stack","idx","rolePermissions"],"mappings":"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"}